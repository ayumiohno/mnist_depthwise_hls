-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MNIST_PointwiseConv2d_4_4_12_Pipeline_ic is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    depth2_o77_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    depth2_o77_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    depth2_o77_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    depth2_o77_empty_n : IN STD_LOGIC;
    depth2_o77_read : OUT STD_LOGIC;
    weights_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_4_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_5_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_6_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_7_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_8_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_9_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_10_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_11_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_0_ce0 : OUT STD_LOGIC;
    weights_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_0_ce1 : OUT STD_LOGIC;
    weights_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_1_ce0 : OUT STD_LOGIC;
    weights_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_1_ce1 : OUT STD_LOGIC;
    weights_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_2_ce0 : OUT STD_LOGIC;
    weights_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_2_ce1 : OUT STD_LOGIC;
    weights_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_12_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_12_ce0 : OUT STD_LOGIC;
    weights_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_12_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_12_ce1 : OUT STD_LOGIC;
    weights_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_3_ce0 : OUT STD_LOGIC;
    weights_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_3_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_3_ce1 : OUT STD_LOGIC;
    weights_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_4_ce0 : OUT STD_LOGIC;
    weights_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_4_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_4_ce1 : OUT STD_LOGIC;
    weights_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_5_ce0 : OUT STD_LOGIC;
    weights_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_5_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_5_ce1 : OUT STD_LOGIC;
    weights_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_6_ce0 : OUT STD_LOGIC;
    weights_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_6_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_6_ce1 : OUT STD_LOGIC;
    weights_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_7_ce0 : OUT STD_LOGIC;
    weights_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_7_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_7_ce1 : OUT STD_LOGIC;
    weights_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_8_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_8_ce0 : OUT STD_LOGIC;
    weights_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_8_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_8_ce1 : OUT STD_LOGIC;
    weights_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_9_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_9_ce0 : OUT STD_LOGIC;
    weights_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_9_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_9_ce1 : OUT STD_LOGIC;
    weights_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_10_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_10_ce0 : OUT STD_LOGIC;
    weights_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_10_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_10_ce1 : OUT STD_LOGIC;
    weights_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_11_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_11_ce0 : OUT STD_LOGIC;
    weights_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_11_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_11_ce1 : OUT STD_LOGIC;
    weights_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    add27_1118_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_1118_out_ap_vld : OUT STD_LOGIC;
    add27_1017_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_1017_out_ap_vld : OUT STD_LOGIC;
    add27_916_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_916_out_ap_vld : OUT STD_LOGIC;
    add27_815_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_815_out_ap_vld : OUT STD_LOGIC;
    add27_714_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_714_out_ap_vld : OUT STD_LOGIC;
    add27_613_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_613_out_ap_vld : OUT STD_LOGIC;
    add27_512_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_512_out_ap_vld : OUT STD_LOGIC;
    add27_411_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_411_out_ap_vld : OUT STD_LOGIC;
    add27_310_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_310_out_ap_vld : OUT STD_LOGIC;
    add27_29_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_29_out_ap_vld : OUT STD_LOGIC;
    add27_18_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_18_out_ap_vld : OUT STD_LOGIC;
    add277_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add277_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of MNIST_PointwiseConv2d_4_4_12_Pipeline_ic is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv13_4F : STD_LOGIC_VECTOR (12 downto 0) := "0000001001111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal icmp_ln16_reg_1769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal depth2_o77_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ic_1_reg_1752 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln16_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_reg_1769_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_reg_1769_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln16_fu_893_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln16_reg_1773 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln22_5_fu_1205_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_5_reg_1898 : STD_LOGIC_VECTOR (63 downto 0);
    signal depth2_o77_read_reg_1914 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_fu_1216_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1919 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1225_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1924 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1234_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1929 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_1243_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1934 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1256_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1939 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1269_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1944 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1282_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1949 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1295_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1954 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1308_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1959 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_10_load_2_reg_1974 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_11_load_2_reg_1979 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_1389_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_2024 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_9_fu_1396_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_2032 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1407_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_2037 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1420_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_2042 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_797_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_2047 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_801_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_1_reg_2052 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_805_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_2_reg_2057 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_3_reg_2062 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_4_reg_2087 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_5_reg_2092 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_6_reg_2097 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_7_reg_2102 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_8_reg_2127 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_9_reg_2132 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_s_reg_2137 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_10_reg_2142 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal zext_ln22_8_fu_907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln22_fu_959_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_1_fu_1013_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_2_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_3_fu_1135_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_4_fu_1171_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_6_fu_1348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_7_fu_1381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_buf_12_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_777_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_12_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal out_buf_13_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_781_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_13_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_14_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_785_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_14_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_15_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_789_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_15_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_16_fu_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_16_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_17_fu_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_17_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_18_fu_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_18_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_19_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_793_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_19_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_20_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_20_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_21_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_21_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_22_fu_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_22_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_23_fu_202 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_23_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ic_fu_206 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln16_fu_887_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_ic_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal grp_fu_781_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_781_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_785_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_785_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_789_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_789_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_793_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_793_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_797_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_797_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_801_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_801_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_805_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_805_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_809_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_809_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln22_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln22_9_cast_fu_915_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln22_10_cast_fu_929_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln22_9_fu_925_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln22_10_fu_939_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln22_3_fu_943_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_fu_949_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln16_1_fu_897_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln22_fu_967_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_973_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_13_fu_985_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln22_11_fu_981_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln22_12_fu_993_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln22_4_fu_997_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_14_fu_1003_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_1021_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln22_fu_1031_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_fu_1039_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln22_1_fu_1049_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln22_13_fu_1035_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln22_14_fu_1053_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln22_5_fu_1057_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_fu_1063_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln22_fu_1081_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_18_fu_1087_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln22_2_fu_1095_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_19_fu_1103_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln22_3_fu_1111_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln22_15_fu_1099_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln22_16_fu_1115_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln22_6_fu_1119_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_20_fu_1125_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln22_17_cast_fu_1143_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_fu_1155_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_fu_1155_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln22_fu_1155_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_21_fu_1161_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln22_1_fu_1179_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_1_fu_1189_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_1_fu_1189_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln22_1_fu_1189_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_22_fu_1195_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln22_19_cast_fu_1321_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_2_fu_1332_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_2_fu_1332_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln22_2_fu_1332_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_23_fu_1338_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln22_2_fu_1356_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_3_fu_1365_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_3_fu_1365_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln22_3_fu_1365_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_24_fu_1371_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_777_ce : STD_LOGIC;
    signal grp_fu_781_ce : STD_LOGIC;
    signal grp_fu_785_ce : STD_LOGIC;
    signal grp_fu_789_ce : STD_LOGIC;
    signal grp_fu_793_ce : STD_LOGIC;
    signal grp_fu_797_ce : STD_LOGIC;
    signal grp_fu_801_ce : STD_LOGIC;
    signal grp_fu_805_ce : STD_LOGIC;
    signal grp_fu_809_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter2_stage1 : STD_LOGIC;
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to3 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln22_1_fu_1189_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln22_2_fu_1332_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln22_3_fu_1365_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln22_fu_1155_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component MNIST_fadd_32ns_32ns_32_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_mul_6ns_8ns_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component MNIST_mux_43_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fadd_32ns_32ns_32_4_no_dsp_1_U284 : component MNIST_fadd_32ns_32ns_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_sig_allocacmp_out_buf_12_load_1,
        din1 => mul_reg_2047,
        ce => grp_fu_777_ce,
        dout => grp_fu_777_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U285 : component MNIST_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_781_p0,
        din1 => grp_fu_781_p1,
        ce => grp_fu_781_ce,
        dout => grp_fu_781_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U286 : component MNIST_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_785_p0,
        din1 => grp_fu_785_p1,
        ce => grp_fu_785_ce,
        dout => grp_fu_785_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U287 : component MNIST_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_789_p0,
        din1 => grp_fu_789_p1,
        ce => grp_fu_789_ce,
        dout => grp_fu_789_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U288 : component MNIST_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_793_p0,
        din1 => grp_fu_793_p1,
        ce => grp_fu_793_ce,
        dout => grp_fu_793_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U289 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_797_p0,
        din1 => grp_fu_797_p1,
        ce => grp_fu_797_ce,
        dout => grp_fu_797_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U290 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_801_p0,
        din1 => grp_fu_801_p1,
        ce => grp_fu_801_ce,
        dout => grp_fu_801_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U291 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_805_p0,
        din1 => grp_fu_805_p1,
        ce => grp_fu_805_ce,
        dout => grp_fu_805_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U292 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_809_p0,
        din1 => grp_fu_809_p1,
        ce => grp_fu_809_ce,
        dout => grp_fu_809_p2);

    mul_6ns_8ns_13_1_1_U293 : component MNIST_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln22_fu_1155_p0,
        din1 => mul_ln22_fu_1155_p1,
        dout => mul_ln22_fu_1155_p2);

    mul_6ns_8ns_13_1_1_U294 : component MNIST_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln22_1_fu_1189_p0,
        din1 => mul_ln22_1_fu_1189_p1,
        dout => mul_ln22_1_fu_1189_p2);

    mux_43_32_1_1_U295 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_0_load,
        din1 => weights_1_load,
        din2 => weights_2_load,
        din3 => weights_3_load,
        din4 => ic_1_reg_1752,
        dout => tmp_fu_1216_p6);

    mux_43_32_1_1_U296 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_4_load,
        din1 => weights_5_load,
        din2 => weights_6_load,
        din3 => weights_7_load,
        din4 => ic_1_reg_1752,
        dout => tmp_1_fu_1225_p6);

    mux_43_32_1_1_U297 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_8_load,
        din1 => weights_9_load,
        din2 => weights_10_load,
        din3 => weights_11_load,
        din4 => ic_1_reg_1752,
        dout => tmp_2_fu_1234_p6);

    mux_43_32_1_1_U298 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_12_q1,
        din1 => weights_0_q1,
        din2 => weights_1_q1,
        din3 => weights_2_q1,
        din4 => ic_1_reg_1752,
        dout => tmp_3_fu_1243_p6);

    mux_43_32_1_1_U299 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_3_q1,
        din1 => weights_4_q1,
        din2 => weights_5_q1,
        din3 => weights_6_q1,
        din4 => ic_1_reg_1752,
        dout => tmp_4_fu_1256_p6);

    mux_43_32_1_1_U300 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_7_q1,
        din1 => weights_8_q1,
        din2 => weights_9_q1,
        din3 => weights_10_q1,
        din4 => ic_1_reg_1752,
        dout => tmp_5_fu_1269_p6);

    mux_43_32_1_1_U301 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_11_q1,
        din1 => weights_12_q0,
        din2 => weights_0_q0,
        din3 => weights_1_q0,
        din4 => ic_1_reg_1752,
        dout => tmp_6_fu_1282_p6);

    mux_43_32_1_1_U302 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_2_q0,
        din1 => weights_3_q0,
        din2 => weights_4_q0,
        din3 => weights_5_q0,
        din4 => ic_1_reg_1752,
        dout => tmp_7_fu_1295_p6);

    mux_43_32_1_1_U303 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_6_q0,
        din1 => weights_7_q0,
        din2 => weights_8_q0,
        din3 => weights_9_q0,
        din4 => ic_1_reg_1752,
        dout => tmp_8_fu_1308_p6);

    mul_6ns_8ns_13_1_1_U304 : component MNIST_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln22_2_fu_1332_p0,
        din1 => mul_ln22_2_fu_1332_p1,
        dout => mul_ln22_2_fu_1332_p2);

    mul_6ns_8ns_13_1_1_U305 : component MNIST_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln22_3_fu_1365_p0,
        din1 => mul_ln22_3_fu_1365_p1,
        dout => mul_ln22_3_fu_1365_p2);

    mux_43_32_1_1_U306 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_10_load_2_reg_1974,
        din1 => weights_11_load_2_reg_1979,
        din2 => weights_12_q0,
        din3 => weights_0_q0,
        din4 => ic_1_reg_1752,
        dout => tmp_9_fu_1396_p6);

    mux_43_32_1_1_U307 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_1_q0,
        din1 => weights_2_q0,
        din2 => weights_3_q0,
        din3 => weights_4_q0,
        din4 => ic_1_reg_1752,
        dout => tmp_s_fu_1407_p6);

    mux_43_32_1_1_U308 : component MNIST_mux_43_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weights_5_q0,
        din1 => weights_6_q0,
        din2 => weights_7_q0,
        din3 => weights_8_q0,
        din4 => ic_1_reg_1752,
        dout => tmp_10_fu_1420_p6);

    flow_control_loop_pipe_sequential_init_U : component MNIST_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage1) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage1) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ic_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln16_fu_881_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    ic_fu_206 <= add_ln16_fu_887_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    ic_fu_206 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;

    out_buf_12_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_12_fu_158 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_buf_12_fu_158 <= grp_fu_777_p2;
            end if; 
        end if;
    end process;

    out_buf_13_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_13_fu_162 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_buf_13_fu_162 <= grp_fu_781_p2;
            end if; 
        end if;
    end process;

    out_buf_14_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_14_fu_166 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_buf_14_fu_166 <= grp_fu_785_p2;
            end if; 
        end if;
    end process;

    out_buf_15_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_15_fu_170 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_buf_15_fu_170 <= grp_fu_789_p2;
            end if; 
        end if;
    end process;

    out_buf_16_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_buf_16_fu_174 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    out_buf_16_fu_174 <= grp_fu_781_p2;
                end if;
            end if; 
        end if;
    end process;

    out_buf_17_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_buf_17_fu_178 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    out_buf_17_fu_178 <= grp_fu_785_p2;
                end if;
            end if; 
        end if;
    end process;

    out_buf_18_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_buf_18_fu_182 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    out_buf_18_fu_182 <= grp_fu_789_p2;
                end if;
            end if; 
        end if;
    end process;

    out_buf_19_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_buf_19_fu_186 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    out_buf_19_fu_186 <= grp_fu_793_p2;
                end if;
            end if; 
        end if;
    end process;

    out_buf_20_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_20_fu_190 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_buf_20_fu_190 <= grp_fu_781_p2;
            end if; 
        end if;
    end process;

    out_buf_21_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_21_fu_194 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_buf_21_fu_194 <= grp_fu_785_p2;
            end if; 
        end if;
    end process;

    out_buf_22_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_22_fu_198 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_buf_22_fu_198 <= grp_fu_789_p2;
            end if; 
        end if;
    end process;

    out_buf_23_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_23_fu_202 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_buf_23_fu_202 <= grp_fu_793_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln16_reg_1769 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                depth2_o77_read_reg_1914 <= depth2_o77_dout;
                tmp_1_reg_1924 <= tmp_1_fu_1225_p6;
                tmp_2_reg_1929 <= tmp_2_fu_1234_p6;
                tmp_3_reg_1934 <= tmp_3_fu_1243_p6;
                tmp_4_reg_1939 <= tmp_4_fu_1256_p6;
                tmp_5_reg_1944 <= tmp_5_fu_1269_p6;
                tmp_6_reg_1949 <= tmp_6_fu_1282_p6;
                tmp_7_reg_1954 <= tmp_7_fu_1295_p6;
                tmp_8_reg_1959 <= tmp_8_fu_1308_p6;
                tmp_reg_1919 <= tmp_fu_1216_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ic_1_reg_1752 <= ap_sig_allocacmp_ic_1;
                icmp_ln16_reg_1769 <= icmp_ln16_fu_881_p2;
                icmp_ln16_reg_1769_pp0_iter1_reg <= icmp_ln16_reg_1769;
                icmp_ln16_reg_1769_pp0_iter2_reg <= icmp_ln16_reg_1769_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul24_10_reg_2142 <= grp_fu_809_p2;
                mul24_8_reg_2127 <= grp_fu_797_p2;
                mul24_9_reg_2132 <= grp_fu_801_p2;
                mul24_s_reg_2137 <= grp_fu_805_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul24_1_reg_2052 <= grp_fu_801_p2;
                mul24_2_reg_2057 <= grp_fu_805_p2;
                mul24_3_reg_2062 <= grp_fu_809_p2;
                mul_reg_2047 <= grp_fu_797_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul24_4_reg_2087 <= grp_fu_797_p2;
                mul24_5_reg_2092 <= grp_fu_801_p2;
                mul24_6_reg_2097 <= grp_fu_805_p2;
                mul24_7_reg_2102 <= grp_fu_809_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln16_reg_1769 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_10_reg_2042 <= tmp_10_fu_1420_p6;
                tmp_25_reg_2024 <= tmp_25_fu_1389_p1;
                tmp_9_reg_2032 <= tmp_9_fu_1396_p6;
                tmp_s_reg_2037 <= tmp_s_fu_1407_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln16_reg_1769 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                weights_10_load_2_reg_1974 <= weights_10_q0;
                weights_11_load_2_reg_1979 <= weights_11_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln16_fu_881_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln16_reg_1773(2 downto 0) <= zext_ln16_fu_893_p1(2 downto 0);
                    zext_ln22_5_reg_1898(2 downto 0) <= zext_ln22_5_fu_1205_p1(2 downto 0);
            end if;
        end if;
    end process;
    zext_ln16_reg_1773(5 downto 3) <= "000";
    zext_ln22_5_reg_1898(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter2_stage1, ap_idle_pp0_0to1, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to3, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to3 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage1) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add277_out <= out_buf_12_fu_158;

    add277_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add277_out_ap_vld <= ap_const_logic_1;
        else 
            add277_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_1017_out <= out_buf_22_fu_198;

    add27_1017_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_1017_out_ap_vld <= ap_const_logic_1;
        else 
            add27_1017_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_1118_out <= out_buf_23_fu_202;

    add27_1118_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_1118_out_ap_vld <= ap_const_logic_1;
        else 
            add27_1118_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_18_out <= out_buf_13_fu_162;

    add27_18_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_18_out_ap_vld <= ap_const_logic_1;
        else 
            add27_18_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_29_out <= out_buf_14_fu_166;

    add27_29_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_29_out_ap_vld <= ap_const_logic_1;
        else 
            add27_29_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_310_out <= out_buf_15_fu_170;

    add27_310_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_310_out_ap_vld <= ap_const_logic_1;
        else 
            add27_310_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_411_out <= out_buf_16_fu_174;

    add27_411_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_411_out_ap_vld <= ap_const_logic_1;
        else 
            add27_411_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_512_out <= out_buf_17_fu_178;

    add27_512_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_512_out_ap_vld <= ap_const_logic_1;
        else 
            add27_512_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_613_out <= out_buf_18_fu_182;

    add27_613_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_613_out_ap_vld <= ap_const_logic_1;
        else 
            add27_613_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_714_out <= out_buf_19_fu_186;

    add27_714_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_714_out_ap_vld <= ap_const_logic_1;
        else 
            add27_714_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_815_out <= out_buf_20_fu_190;

    add27_815_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_815_out_ap_vld <= ap_const_logic_1;
        else 
            add27_815_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_916_out <= out_buf_21_fu_194;

    add27_916_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add27_916_out_ap_vld <= ap_const_logic_1;
        else 
            add27_916_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln16_fu_887_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_ic_1) + unsigned(ap_const_lv3_1));
    add_ln22_1_fu_1179_p2 <= std_logic_vector(unsigned(zext_ln16_fu_893_p1) + unsigned(ap_const_lv6_24));
    add_ln22_2_fu_1356_p2 <= std_logic_vector(unsigned(zext_ln16_reg_1773) + unsigned(ap_const_lv6_2C));
    add_ln22_3_fu_943_p2 <= std_logic_vector(unsigned(zext_ln22_9_fu_925_p1) + unsigned(zext_ln22_10_fu_939_p1));
    add_ln22_4_fu_997_p2 <= std_logic_vector(unsigned(zext_ln22_11_fu_981_p1) + unsigned(zext_ln22_12_fu_993_p1));
    add_ln22_5_fu_1057_p2 <= std_logic_vector(unsigned(zext_ln22_13_fu_1035_p1) + unsigned(zext_ln22_14_fu_1053_p1));
    add_ln22_6_fu_1119_p2 <= std_logic_vector(unsigned(zext_ln22_15_fu_1099_p1) + unsigned(zext_ln22_16_fu_1115_p1));
    add_ln22_fu_967_p2 <= std_logic_vector(unsigned(zext_ln16_1_fu_897_p1) + unsigned(ap_const_lv5_14));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_1769, depth2_o77_empty_n)
    begin
                ap_block_pp0_stage1_01001 <= ((depth2_o77_empty_n = ap_const_logic_0) and (icmp_ln16_reg_1769 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_1769, depth2_o77_empty_n)
    begin
                ap_block_pp0_stage1_11001 <= ((depth2_o77_empty_n = ap_const_logic_0) and (icmp_ln16_reg_1769 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_1769, depth2_o77_empty_n)
    begin
                ap_block_pp0_stage1_subdone <= ((depth2_o77_empty_n = ap_const_logic_0) and (icmp_ln16_reg_1769 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(icmp_ln16_reg_1769, depth2_o77_empty_n)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((depth2_o77_empty_n = ap_const_logic_0) and (icmp_ln16_reg_1769 = ap_const_lv1_0));
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, icmp_ln16_reg_1769)
    begin
        if (((icmp_ln16_reg_1769 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, icmp_ln16_reg_1769_pp0_iter2_reg, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (icmp_ln16_reg_1769_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter2_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to3 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_ic_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, ic_fu_206)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_ic_1 <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_ic_1 <= ic_fu_206;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_12_load_1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, out_buf_12_fu_158, grp_fu_777_p2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_out_buf_12_load_1 <= grp_fu_777_p2;
        else 
            ap_sig_allocacmp_out_buf_12_load_1 <= out_buf_12_fu_158;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_13_load_1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, out_buf_13_fu_162, grp_fu_781_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_out_buf_13_load_1 <= grp_fu_781_p2;
        else 
            ap_sig_allocacmp_out_buf_13_load_1 <= out_buf_13_fu_162;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_14_load_1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, out_buf_14_fu_166, grp_fu_785_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_out_buf_14_load_1 <= grp_fu_785_p2;
        else 
            ap_sig_allocacmp_out_buf_14_load_1 <= out_buf_14_fu_166;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_15_load_1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, out_buf_15_fu_170, grp_fu_789_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_out_buf_15_load_1 <= grp_fu_789_p2;
        else 
            ap_sig_allocacmp_out_buf_15_load_1 <= out_buf_15_fu_170;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_16_load_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, grp_fu_781_p2, out_buf_16_fu_174)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_out_buf_16_load_1 <= grp_fu_781_p2;
        else 
            ap_sig_allocacmp_out_buf_16_load_1 <= out_buf_16_fu_174;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_17_load_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, grp_fu_785_p2, out_buf_17_fu_178)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_out_buf_17_load_1 <= grp_fu_785_p2;
        else 
            ap_sig_allocacmp_out_buf_17_load_1 <= out_buf_17_fu_178;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_18_load_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, grp_fu_789_p2, out_buf_18_fu_182)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_out_buf_18_load_1 <= grp_fu_789_p2;
        else 
            ap_sig_allocacmp_out_buf_18_load_1 <= out_buf_18_fu_182;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_19_load_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, out_buf_19_fu_186, grp_fu_793_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_out_buf_19_load_1 <= grp_fu_793_p2;
        else 
            ap_sig_allocacmp_out_buf_19_load_1 <= out_buf_19_fu_186;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_20_load_1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_fu_781_p2, out_buf_20_fu_190)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_out_buf_20_load_1 <= grp_fu_781_p2;
        else 
            ap_sig_allocacmp_out_buf_20_load_1 <= out_buf_20_fu_190;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_21_load_1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_fu_785_p2, out_buf_21_fu_194)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_out_buf_21_load_1 <= grp_fu_785_p2;
        else 
            ap_sig_allocacmp_out_buf_21_load_1 <= out_buf_21_fu_194;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_22_load_1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_fu_789_p2, out_buf_22_fu_198)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_out_buf_22_load_1 <= grp_fu_789_p2;
        else 
            ap_sig_allocacmp_out_buf_22_load_1 <= out_buf_22_fu_198;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_23_load_1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_fu_793_p2, out_buf_23_fu_202)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_out_buf_23_load_1 <= grp_fu_793_p2;
        else 
            ap_sig_allocacmp_out_buf_23_load_1 <= out_buf_23_fu_202;
        end if; 
    end process;


    depth2_o77_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_1769, depth2_o77_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((icmp_ln16_reg_1769 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            depth2_o77_blk_n <= depth2_o77_empty_n;
        else 
            depth2_o77_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    depth2_o77_read_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_1769, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln16_reg_1769 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            depth2_o77_read <= ap_const_logic_1;
        else 
            depth2_o77_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_777_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_777_ce <= ap_const_logic_1;
        else 
            grp_fu_777_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_781_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_781_ce <= ap_const_logic_1;
        else 
            grp_fu_781_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_781_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_sig_allocacmp_out_buf_13_load_1, ap_sig_allocacmp_out_buf_16_load_1, ap_sig_allocacmp_out_buf_20_load_1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_781_p0 <= ap_sig_allocacmp_out_buf_20_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_781_p0 <= ap_sig_allocacmp_out_buf_16_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_781_p0 <= ap_sig_allocacmp_out_buf_13_load_1;
        else 
            grp_fu_781_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_781_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, mul24_1_reg_2052, mul24_4_reg_2087, mul24_8_reg_2127, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_781_p1 <= mul24_8_reg_2127;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_781_p1 <= mul24_4_reg_2087;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_781_p1 <= mul24_1_reg_2052;
        else 
            grp_fu_781_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_785_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_785_ce <= ap_const_logic_1;
        else 
            grp_fu_785_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_785_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_sig_allocacmp_out_buf_14_load_1, ap_sig_allocacmp_out_buf_17_load_1, ap_sig_allocacmp_out_buf_21_load_1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_785_p0 <= ap_sig_allocacmp_out_buf_21_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_785_p0 <= ap_sig_allocacmp_out_buf_17_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_785_p0 <= ap_sig_allocacmp_out_buf_14_load_1;
        else 
            grp_fu_785_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_785_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, mul24_2_reg_2057, mul24_5_reg_2092, mul24_9_reg_2132, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_785_p1 <= mul24_9_reg_2132;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_785_p1 <= mul24_5_reg_2092;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_785_p1 <= mul24_2_reg_2057;
        else 
            grp_fu_785_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_789_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_789_ce <= ap_const_logic_1;
        else 
            grp_fu_789_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_789_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_sig_allocacmp_out_buf_15_load_1, ap_sig_allocacmp_out_buf_18_load_1, ap_sig_allocacmp_out_buf_22_load_1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_789_p0 <= ap_sig_allocacmp_out_buf_22_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_789_p0 <= ap_sig_allocacmp_out_buf_18_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_789_p0 <= ap_sig_allocacmp_out_buf_15_load_1;
        else 
            grp_fu_789_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_789_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, mul24_3_reg_2062, mul24_6_reg_2097, mul24_s_reg_2137, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_789_p1 <= mul24_s_reg_2137;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_789_p1 <= mul24_6_reg_2097;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_789_p1 <= mul24_3_reg_2062;
        else 
            grp_fu_789_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_793_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_793_ce <= ap_const_logic_1;
        else 
            grp_fu_793_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_793_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_sig_allocacmp_out_buf_19_load_1, ap_sig_allocacmp_out_buf_23_load_1)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_793_p0 <= ap_sig_allocacmp_out_buf_23_load_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_793_p0 <= ap_sig_allocacmp_out_buf_19_load_1;
            else 
                grp_fu_793_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_793_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_793_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, mul24_7_reg_2102, mul24_10_reg_2142, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_793_p1 <= mul24_10_reg_2142;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_793_p1 <= mul24_7_reg_2102;
            else 
                grp_fu_793_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_793_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_797_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_797_ce <= ap_const_logic_1;
        else 
            grp_fu_797_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_797_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_25_fu_1389_p1, tmp_25_reg_2024, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_797_p0 <= tmp_25_reg_2024;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_797_p0 <= tmp_25_fu_1389_p1;
        else 
            grp_fu_797_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_797_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_reg_1919, tmp_4_reg_1939, tmp_8_reg_1959, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_797_p1 <= tmp_8_reg_1959;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_797_p1 <= tmp_4_reg_1939;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_797_p1 <= tmp_reg_1919;
        else 
            grp_fu_797_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_801_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_801_ce <= ap_const_logic_1;
        else 
            grp_fu_801_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_801_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_25_fu_1389_p1, tmp_25_reg_2024, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_801_p0 <= tmp_25_reg_2024;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_801_p0 <= tmp_25_fu_1389_p1;
        else 
            grp_fu_801_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_801_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_1_reg_1924, tmp_5_reg_1944, tmp_9_reg_2032, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_801_p1 <= tmp_9_reg_2032;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_801_p1 <= tmp_5_reg_1944;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_801_p1 <= tmp_1_reg_1924;
        else 
            grp_fu_801_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_805_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_805_ce <= ap_const_logic_1;
        else 
            grp_fu_805_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_805_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_25_fu_1389_p1, tmp_25_reg_2024, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_805_p0 <= tmp_25_reg_2024;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_805_p0 <= tmp_25_fu_1389_p1;
        else 
            grp_fu_805_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_805_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_2_reg_1929, tmp_6_reg_1949, tmp_s_reg_2037, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_805_p1 <= tmp_s_reg_2037;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_805_p1 <= tmp_6_reg_1949;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_805_p1 <= tmp_2_reg_1929;
        else 
            grp_fu_805_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_809_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_809_ce <= ap_const_logic_1;
        else 
            grp_fu_809_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_809_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_25_fu_1389_p1, tmp_25_reg_2024, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_809_p0 <= tmp_25_reg_2024;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_809_p0 <= tmp_25_fu_1389_p1;
        else 
            grp_fu_809_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_809_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_3_reg_1934, tmp_7_reg_1954, tmp_10_reg_2042, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_809_p1 <= tmp_10_reg_2042;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_809_p1 <= tmp_7_reg_1954;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_809_p1 <= tmp_3_reg_1934;
        else 
            grp_fu_809_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln16_fu_881_p2 <= "1" when (ap_sig_allocacmp_ic_1 = ap_const_lv3_4) else "0";
    icmp_ln22_fu_901_p2 <= "1" when (signed(ap_sig_allocacmp_ic_1) > signed(ap_const_lv3_0)) else "0";
    mul_ln22_1_fu_1189_p0 <= mul_ln22_1_fu_1189_p00(6 - 1 downto 0);
    mul_ln22_1_fu_1189_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_1_fu_1179_p2),13));
    mul_ln22_1_fu_1189_p1 <= ap_const_lv13_4F(8 - 1 downto 0);
    mul_ln22_2_fu_1332_p0 <= mul_ln22_2_fu_1332_p00(6 - 1 downto 0);
    mul_ln22_2_fu_1332_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln22_19_cast_fu_1321_p3),13));
    mul_ln22_2_fu_1332_p1 <= ap_const_lv13_4F(8 - 1 downto 0);
    mul_ln22_3_fu_1365_p0 <= mul_ln22_3_fu_1365_p00(6 - 1 downto 0);
    mul_ln22_3_fu_1365_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_2_fu_1356_p2),13));
    mul_ln22_3_fu_1365_p1 <= ap_const_lv13_4F(8 - 1 downto 0);
    mul_ln22_fu_1155_p0 <= mul_ln22_fu_1155_p00(6 - 1 downto 0);
    mul_ln22_fu_1155_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln22_17_cast_fu_1143_p3),13));
    mul_ln22_fu_1155_p1 <= ap_const_lv13_4F(8 - 1 downto 0);
        sext_ln22_1_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_fu_1039_p4),8));

        sext_ln22_2_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_18_fu_1087_p3),10));

        sext_ln22_3_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_19_fu_1103_p3),8));

        sext_ln22_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_fu_1021_p4),10));

    tmp_11_fu_973_p3 <= (add_ln22_fu_967_p2 & ap_const_lv5_0);
    tmp_12_fu_949_p4 <= add_ln22_3_fu_943_p2(10 downto 9);
    tmp_13_fu_985_p3 <= (add_ln22_fu_967_p2 & ap_const_lv3_0);
    tmp_14_fu_1003_p4 <= add_ln22_4_fu_997_p2(10 downto 9);
    tmp_15_fu_1021_p4 <= ((ap_const_lv1_1 & ap_sig_allocacmp_ic_1) & ap_const_lv5_0);
    tmp_16_fu_1039_p4 <= ((ap_const_lv1_1 & ap_sig_allocacmp_ic_1) & ap_const_lv3_0);
    tmp_17_fu_1063_p4 <= add_ln22_5_fu_1057_p2(10 downto 9);
    tmp_18_fu_1087_p3 <= (xor_ln22_fu_1081_p2 & ap_const_lv5_0);
    tmp_19_fu_1103_p3 <= (xor_ln22_fu_1081_p2 & ap_const_lv3_0);
    tmp_20_fu_1125_p4 <= add_ln22_6_fu_1119_p2(10 downto 9);
    tmp_21_fu_1161_p4 <= mul_ln22_fu_1155_p2(12 downto 10);
    tmp_22_fu_1195_p4 <= mul_ln22_1_fu_1189_p2(12 downto 10);
    tmp_23_fu_1338_p4 <= mul_ln22_2_fu_1332_p2(12 downto 10);
    tmp_24_fu_1371_p4 <= mul_ln22_3_fu_1365_p2(12 downto 10);
    tmp_25_fu_1389_p1 <= depth2_o77_read_reg_1914;

    weights_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_5_reg_1898, ap_block_pp0_stage0, zext_ln22_2_fu_1073_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_0_address0 <= zext_ln22_5_reg_1898(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_0_address0 <= zext_ln22_2_fu_1073_p1(2 - 1 downto 0);
            else 
                weights_0_address0 <= "XX";
            end if;
        else 
            weights_0_address0 <= "XX";
        end if; 
    end process;

    weights_0_address1 <= zext_ln22_8_fu_907_p1(2 - 1 downto 0);

    weights_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_0_ce0 <= ap_const_logic_1;
        else 
            weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_0_ce1 <= ap_const_logic_1;
        else 
            weights_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_10_address0 <= zext_ln22_5_fu_1205_p1(2 - 1 downto 0);
    weights_10_address1 <= zext_ln22_1_fu_1013_p1(2 - 1 downto 0);

    weights_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_10_ce0 <= ap_const_logic_1;
        else 
            weights_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_10_ce1 <= ap_const_logic_1;
        else 
            weights_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_11_address0 <= zext_ln22_5_fu_1205_p1(2 - 1 downto 0);
    weights_11_address1 <= zext_ln22_2_fu_1073_p1(2 - 1 downto 0);

    weights_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_11_ce0 <= ap_const_logic_1;
        else 
            weights_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_11_ce1 <= ap_const_logic_1;
        else 
            weights_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_12_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_5_reg_1898, ap_block_pp0_stage0, zext_ln22_2_fu_1073_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_12_address0 <= zext_ln22_5_reg_1898(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_12_address0 <= zext_ln22_2_fu_1073_p1(2 - 1 downto 0);
            else 
                weights_12_address0 <= "XX";
            end if;
        else 
            weights_12_address0 <= "XX";
        end if; 
    end process;

    weights_12_address1 <= zext_ln22_8_fu_907_p1(2 - 1 downto 0);

    weights_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_12_ce0 <= ap_const_logic_1;
        else 
            weights_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_12_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_12_ce1 <= ap_const_logic_1;
        else 
            weights_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln22_2_fu_1073_p1, zext_ln22_6_fu_1348_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_1_address0 <= zext_ln22_6_fu_1348_p1(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_1_address0 <= zext_ln22_2_fu_1073_p1(2 - 1 downto 0);
            else 
                weights_1_address0 <= "XX";
            end if;
        else 
            weights_1_address0 <= "XX";
        end if; 
    end process;

    weights_1_address1 <= zext_ln22_8_fu_907_p1(2 - 1 downto 0);

    weights_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_1_ce0 <= ap_const_logic_1;
        else 
            weights_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_1_ce1 <= ap_const_logic_1;
        else 
            weights_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln22_3_fu_1135_p1, zext_ln22_6_fu_1348_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_2_address0 <= zext_ln22_6_fu_1348_p1(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_2_address0 <= zext_ln22_3_fu_1135_p1(2 - 1 downto 0);
            else 
                weights_2_address0 <= "XX";
            end if;
        else 
            weights_2_address0 <= "XX";
        end if; 
    end process;

    weights_2_address1 <= zext_ln22_8_fu_907_p1(2 - 1 downto 0);

    weights_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_2_ce0 <= ap_const_logic_1;
        else 
            weights_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_2_ce1 <= ap_const_logic_1;
        else 
            weights_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln22_3_fu_1135_p1, zext_ln22_6_fu_1348_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_3_address0 <= zext_ln22_6_fu_1348_p1(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_3_address0 <= zext_ln22_3_fu_1135_p1(2 - 1 downto 0);
            else 
                weights_3_address0 <= "XX";
            end if;
        else 
            weights_3_address0 <= "XX";
        end if; 
    end process;

    weights_3_address1 <= zext_ln22_fu_959_p1(2 - 1 downto 0);

    weights_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_3_ce0 <= ap_const_logic_1;
        else 
            weights_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_3_ce1 <= ap_const_logic_1;
        else 
            weights_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln22_3_fu_1135_p1, zext_ln22_6_fu_1348_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_4_address0 <= zext_ln22_6_fu_1348_p1(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_4_address0 <= zext_ln22_3_fu_1135_p1(2 - 1 downto 0);
            else 
                weights_4_address0 <= "XX";
            end if;
        else 
            weights_4_address0 <= "XX";
        end if; 
    end process;

    weights_4_address1 <= zext_ln22_fu_959_p1(2 - 1 downto 0);

    weights_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_4_ce0 <= ap_const_logic_1;
        else 
            weights_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_4_ce1 <= ap_const_logic_1;
        else 
            weights_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln22_3_fu_1135_p1, zext_ln22_7_fu_1381_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_5_address0 <= zext_ln22_7_fu_1381_p1(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_5_address0 <= zext_ln22_3_fu_1135_p1(2 - 1 downto 0);
            else 
                weights_5_address0 <= "XX";
            end if;
        else 
            weights_5_address0 <= "XX";
        end if; 
    end process;

    weights_5_address1 <= zext_ln22_fu_959_p1(2 - 1 downto 0);

    weights_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_5_ce0 <= ap_const_logic_1;
        else 
            weights_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_5_ce1 <= ap_const_logic_1;
        else 
            weights_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln22_4_fu_1171_p1, zext_ln22_7_fu_1381_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_6_address0 <= zext_ln22_7_fu_1381_p1(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_6_address0 <= zext_ln22_4_fu_1171_p1(2 - 1 downto 0);
            else 
                weights_6_address0 <= "XX";
            end if;
        else 
            weights_6_address0 <= "XX";
        end if; 
    end process;

    weights_6_address1 <= zext_ln22_fu_959_p1(2 - 1 downto 0);

    weights_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_6_ce0 <= ap_const_logic_1;
        else 
            weights_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_6_ce1 <= ap_const_logic_1;
        else 
            weights_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln22_4_fu_1171_p1, zext_ln22_7_fu_1381_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_7_address0 <= zext_ln22_7_fu_1381_p1(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_7_address0 <= zext_ln22_4_fu_1171_p1(2 - 1 downto 0);
            else 
                weights_7_address0 <= "XX";
            end if;
        else 
            weights_7_address0 <= "XX";
        end if; 
    end process;

    weights_7_address1 <= zext_ln22_1_fu_1013_p1(2 - 1 downto 0);

    weights_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_7_ce0 <= ap_const_logic_1;
        else 
            weights_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_7_ce1 <= ap_const_logic_1;
        else 
            weights_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_8_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln22_4_fu_1171_p1, zext_ln22_7_fu_1381_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_8_address0 <= zext_ln22_7_fu_1381_p1(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_8_address0 <= zext_ln22_4_fu_1171_p1(2 - 1 downto 0);
            else 
                weights_8_address0 <= "XX";
            end if;
        else 
            weights_8_address0 <= "XX";
        end if; 
    end process;

    weights_8_address1 <= zext_ln22_1_fu_1013_p1(2 - 1 downto 0);

    weights_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_8_ce0 <= ap_const_logic_1;
        else 
            weights_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_8_ce1 <= ap_const_logic_1;
        else 
            weights_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_9_address0 <= zext_ln22_4_fu_1171_p1(2 - 1 downto 0);
    weights_9_address1 <= zext_ln22_1_fu_1013_p1(2 - 1 downto 0);

    weights_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_9_ce0 <= ap_const_logic_1;
        else 
            weights_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_9_ce1 <= ap_const_logic_1;
        else 
            weights_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln22_fu_1081_p2 <= (ap_sig_allocacmp_ic_1 xor ap_const_lv3_4);
    zext_ln16_1_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_ic_1),5));
    zext_ln16_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_ic_1),6));
    zext_ln22_10_cast_fu_929_p4 <= ((ap_const_lv2_2 & ap_sig_allocacmp_ic_1) & ap_const_lv3_0);
    zext_ln22_10_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln22_10_cast_fu_929_p4),11));
    zext_ln22_11_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_973_p3),11));
    zext_ln22_12_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_985_p3),11));
    zext_ln22_13_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln22_fu_1031_p1),11));
    zext_ln22_14_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln22_1_fu_1049_p1),11));
    zext_ln22_15_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln22_2_fu_1095_p1),11));
    zext_ln22_16_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln22_3_fu_1111_p1),11));
    zext_ln22_17_cast_fu_1143_p3 <= (ap_const_lv3_4 & ap_sig_allocacmp_ic_1);
    zext_ln22_19_cast_fu_1321_p3 <= (ap_const_lv3_5 & ic_1_reg_1752);
    zext_ln22_1_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_1003_p4),64));
    zext_ln22_2_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_1063_p4),64));
    zext_ln22_3_fu_1135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_1125_p4),64));
    zext_ln22_4_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1161_p4),64));
    zext_ln22_5_fu_1205_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_1195_p4),64));
    zext_ln22_6_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_1338_p4),64));
    zext_ln22_7_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_1371_p4),64));
    zext_ln22_8_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln22_fu_901_p2),64));
    zext_ln22_9_cast_fu_915_p4 <= ((ap_const_lv2_2 & ap_sig_allocacmp_ic_1) & ap_const_lv5_0);
    zext_ln22_9_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln22_9_cast_fu_915_p4),11));
    zext_ln22_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_949_p4),64));
end behav;
