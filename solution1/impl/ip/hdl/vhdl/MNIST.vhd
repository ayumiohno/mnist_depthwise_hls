-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MNIST is
generic (
    C_S_AXI_CONTROL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    istrm_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    istrm_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    istrm_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    istrm_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    istrm_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    istrm_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    istrm_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    wstrm_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    wstrm_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    wstrm_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    wstrm_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    wstrm_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    wstrm_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    wstrm_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    ostrm_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    ostrm_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    ostrm_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    ostrm_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    ostrm_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ostrm_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    ostrm_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    wstrm_TVALID : IN STD_LOGIC;
    wstrm_TREADY : OUT STD_LOGIC;
    istrm_TVALID : IN STD_LOGIC;
    istrm_TREADY : OUT STD_LOGIC;
    ostrm_TVALID : OUT STD_LOGIC;
    ostrm_TREADY : IN STD_LOGIC );
end;


architecture behav of MNIST is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "MNIST_MNIST,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.331000,HLS_SYN_LAT=1735,HLS_SYN_TPT=1297,HLS_SYN_MEM=30,HLS_SYN_DSP=0,HLS_SYN_FF=30761,HLS_SYN_LUT=28240,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal depth1_w_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth1_w_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth1_w_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth1_w_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point1_w_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point1_w_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point1_w_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point1_w_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth2_w_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth2_w_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth2_w_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth2_w_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_1_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_1_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_1_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_1_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_2_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_2_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_2_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_2_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_3_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_3_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_3_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_3_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_4_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_4_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_4_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_4_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_5_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_5_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_5_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_5_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_6_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_6_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_6_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_6_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_7_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_7_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_7_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_7_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_8_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_8_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_8_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_8_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_9_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_9_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_9_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_9_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_10_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_10_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_10_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_10_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_11_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_11_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_11_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_11_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_12_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_12_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_12_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_w_12_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_1_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_1_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_1_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_1_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_2_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_2_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_2_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_2_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_3_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_3_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_3_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_3_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_4_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_4_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_4_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_4_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_5_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_5_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_5_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_5_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_6_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_6_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_6_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_6_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_7_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_7_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_7_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_w_7_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_1_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_1_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_1_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_1_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_2_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_2_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_2_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_2_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_3_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_3_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_3_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_3_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_4_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_4_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_4_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_4_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_5_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_5_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_5_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_5_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_6_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_6_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_6_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_6_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_7_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_7_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_7_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_7_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_8_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_8_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_8_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_8_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_9_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_9_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_9_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_9_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_10_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_10_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_10_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_w_10_t_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal LoadWeights_U0_ap_start : STD_LOGIC;
    signal LoadWeights_U0_ap_done : STD_LOGIC;
    signal LoadWeights_U0_ap_continue : STD_LOGIC;
    signal LoadWeights_U0_ap_idle : STD_LOGIC;
    signal LoadWeights_U0_ap_ready : STD_LOGIC;
    signal LoadWeights_U0_wstrm_TREADY : STD_LOGIC;
    signal LoadWeights_U0_depth1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_depth1_ce0 : STD_LOGIC;
    signal LoadWeights_U0_depth1_we0 : STD_LOGIC;
    signal LoadWeights_U0_depth1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point1_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point1_we0 : STD_LOGIC;
    signal LoadWeights_U0_point1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_depth2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal LoadWeights_U0_depth2_ce0 : STD_LOGIC;
    signal LoadWeights_U0_depth2_we0 : STD_LOGIC;
    signal LoadWeights_U0_depth2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_0_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_0_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_1_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_1_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_2_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_2_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_3_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_3_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_3_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_4_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_4_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_4_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_5_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_5_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_5_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_6_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_6_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_6_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_7_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_7_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_7_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_8_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_8_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_8_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_9_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_9_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_9_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_10_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_10_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_10_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_11_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_11_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_11_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point2_12_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadWeights_U0_point2_12_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point2_12_we0 : STD_LOGIC;
    signal LoadWeights_U0_point2_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_depth3_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal LoadWeights_U0_depth3_0_ce0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_0_we0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_depth3_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal LoadWeights_U0_depth3_1_ce0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_1_we0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_depth3_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal LoadWeights_U0_depth3_2_ce0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_2_we0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_depth3_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal LoadWeights_U0_depth3_3_ce0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_3_we0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_depth3_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal LoadWeights_U0_depth3_4_ce0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_4_we0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_depth3_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal LoadWeights_U0_depth3_5_ce0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_5_we0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_depth3_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal LoadWeights_U0_depth3_6_ce0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_6_we0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_depth3_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal LoadWeights_U0_depth3_7_ce0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_7_we0 : STD_LOGIC;
    signal LoadWeights_U0_depth3_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_0_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_0_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_1_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_1_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_2_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_2_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_3_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_3_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_4_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_4_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_5_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_5_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_6_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_6_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_7_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_7_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_8_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_8_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_9_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_9_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadWeights_U0_point3_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadWeights_U0_point3_10_ce0 : STD_LOGIC;
    signal LoadWeights_U0_point3_10_we0 : STD_LOGIC;
    signal LoadWeights_U0_point3_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_point3_w_10 : STD_LOGIC;
    signal LoadWeights_U0_point3_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w_10 : STD_LOGIC;
    signal ap_channel_done_point3_w_9 : STD_LOGIC;
    signal LoadWeights_U0_point3_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w_9 : STD_LOGIC;
    signal ap_channel_done_point3_w_8 : STD_LOGIC;
    signal LoadWeights_U0_point3_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w_8 : STD_LOGIC;
    signal ap_channel_done_point3_w_7 : STD_LOGIC;
    signal LoadWeights_U0_point3_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w_7 : STD_LOGIC;
    signal ap_channel_done_point3_w_6 : STD_LOGIC;
    signal LoadWeights_U0_point3_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w_6 : STD_LOGIC;
    signal ap_channel_done_point3_w_5 : STD_LOGIC;
    signal LoadWeights_U0_point3_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w_5 : STD_LOGIC;
    signal ap_channel_done_point3_w_4 : STD_LOGIC;
    signal LoadWeights_U0_point3_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w_4 : STD_LOGIC;
    signal ap_channel_done_point3_w_3 : STD_LOGIC;
    signal LoadWeights_U0_point3_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w_3 : STD_LOGIC;
    signal ap_channel_done_point3_w_2 : STD_LOGIC;
    signal LoadWeights_U0_point3_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w_2 : STD_LOGIC;
    signal ap_channel_done_point3_w_1 : STD_LOGIC;
    signal LoadWeights_U0_point3_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w_1 : STD_LOGIC;
    signal ap_channel_done_point3_w : STD_LOGIC;
    signal LoadWeights_U0_point3_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point3_w : STD_LOGIC := '0';
    signal ap_sync_channel_write_point3_w : STD_LOGIC;
    signal ap_channel_done_depth3_w_7 : STD_LOGIC;
    signal LoadWeights_U0_depth3_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_depth3_w_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_depth3_w_7 : STD_LOGIC;
    signal ap_channel_done_depth3_w_6 : STD_LOGIC;
    signal LoadWeights_U0_depth3_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_depth3_w_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_depth3_w_6 : STD_LOGIC;
    signal ap_channel_done_depth3_w_5 : STD_LOGIC;
    signal LoadWeights_U0_depth3_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_depth3_w_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_depth3_w_5 : STD_LOGIC;
    signal ap_channel_done_depth3_w_4 : STD_LOGIC;
    signal LoadWeights_U0_depth3_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_depth3_w_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_depth3_w_4 : STD_LOGIC;
    signal ap_channel_done_depth3_w_3 : STD_LOGIC;
    signal LoadWeights_U0_depth3_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_depth3_w_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_depth3_w_3 : STD_LOGIC;
    signal ap_channel_done_depth3_w_2 : STD_LOGIC;
    signal LoadWeights_U0_depth3_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_depth3_w_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_depth3_w_2 : STD_LOGIC;
    signal ap_channel_done_depth3_w_1 : STD_LOGIC;
    signal LoadWeights_U0_depth3_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_depth3_w_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_depth3_w_1 : STD_LOGIC;
    signal ap_channel_done_depth3_w : STD_LOGIC;
    signal LoadWeights_U0_depth3_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_depth3_w : STD_LOGIC := '0';
    signal ap_sync_channel_write_depth3_w : STD_LOGIC;
    signal ap_channel_done_point2_w_12 : STD_LOGIC;
    signal LoadWeights_U0_point2_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_12 : STD_LOGIC;
    signal ap_channel_done_point2_w_11 : STD_LOGIC;
    signal LoadWeights_U0_point2_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_11 : STD_LOGIC;
    signal ap_channel_done_point2_w_10 : STD_LOGIC;
    signal LoadWeights_U0_point2_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_10 : STD_LOGIC;
    signal ap_channel_done_point2_w_9 : STD_LOGIC;
    signal LoadWeights_U0_point2_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_9 : STD_LOGIC;
    signal ap_channel_done_point2_w_8 : STD_LOGIC;
    signal LoadWeights_U0_point2_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_8 : STD_LOGIC;
    signal ap_channel_done_point2_w_7 : STD_LOGIC;
    signal LoadWeights_U0_point2_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_7 : STD_LOGIC;
    signal ap_channel_done_point2_w_6 : STD_LOGIC;
    signal LoadWeights_U0_point2_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_6 : STD_LOGIC;
    signal ap_channel_done_point2_w_5 : STD_LOGIC;
    signal LoadWeights_U0_point2_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_5 : STD_LOGIC;
    signal ap_channel_done_point2_w_4 : STD_LOGIC;
    signal LoadWeights_U0_point2_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_4 : STD_LOGIC;
    signal ap_channel_done_point2_w_3 : STD_LOGIC;
    signal LoadWeights_U0_point2_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_3 : STD_LOGIC;
    signal ap_channel_done_point2_w_2 : STD_LOGIC;
    signal LoadWeights_U0_point2_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_2 : STD_LOGIC;
    signal ap_channel_done_point2_w_1 : STD_LOGIC;
    signal LoadWeights_U0_point2_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w_1 : STD_LOGIC;
    signal ap_channel_done_point2_w : STD_LOGIC;
    signal LoadWeights_U0_point2_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point2_w : STD_LOGIC := '0';
    signal ap_sync_channel_write_point2_w : STD_LOGIC;
    signal ap_channel_done_depth2_w : STD_LOGIC;
    signal LoadWeights_U0_depth2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_depth2_w : STD_LOGIC := '0';
    signal ap_sync_channel_write_depth2_w : STD_LOGIC;
    signal ap_channel_done_point1_w : STD_LOGIC;
    signal LoadWeights_U0_point1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_point1_w : STD_LOGIC := '0';
    signal ap_sync_channel_write_point1_w : STD_LOGIC;
    signal ap_channel_done_depth1_w : STD_LOGIC;
    signal LoadWeights_U0_depth1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_depth1_w : STD_LOGIC := '0';
    signal ap_sync_channel_write_depth1_w : STD_LOGIC;
    signal LoadInput_U0_ap_start : STD_LOGIC;
    signal LoadInput_U0_ap_done : STD_LOGIC;
    signal LoadInput_U0_ap_continue : STD_LOGIC;
    signal LoadInput_U0_ap_idle : STD_LOGIC;
    signal LoadInput_U0_ap_ready : STD_LOGIC;
    signal LoadInput_U0_input74_din : STD_LOGIC_VECTOR (31 downto 0);
    signal LoadInput_U0_input74_write : STD_LOGIC;
    signal LoadInput_U0_istrm_TREADY : STD_LOGIC;
    signal LoadInput_U0_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadInput_U0_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal LoadInput_U0_ap_return_2 : STD_LOGIC_VECTOR (1 downto 0);
    signal LoadInput_U0_ap_return_3 : STD_LOGIC_VECTOR (4 downto 0);
    signal LoadInput_U0_ap_return_4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_channel_done_pix_dest_V : STD_LOGIC;
    signal pix_dest_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_pix_dest_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_pix_dest_V : STD_LOGIC;
    signal ap_channel_done_pix_id_V : STD_LOGIC;
    signal pix_id_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_pix_id_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_pix_id_V : STD_LOGIC;
    signal ap_channel_done_pix_user_V : STD_LOGIC;
    signal pix_user_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_pix_user_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_pix_user_V : STD_LOGIC;
    signal ap_channel_done_pix_strb_V : STD_LOGIC;
    signal pix_strb_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_pix_strb_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_pix_strb_V : STD_LOGIC;
    signal ap_channel_done_pix_keep_V : STD_LOGIC;
    signal pix_keep_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_pix_keep_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_pix_keep_V : STD_LOGIC;
    signal DepthwiseConv2d_28_10_1_3_U0_ap_start : STD_LOGIC;
    signal DepthwiseConv2d_28_10_1_3_U0_ap_done : STD_LOGIC;
    signal DepthwiseConv2d_28_10_1_3_U0_ap_continue : STD_LOGIC;
    signal DepthwiseConv2d_28_10_1_3_U0_ap_idle : STD_LOGIC;
    signal DepthwiseConv2d_28_10_1_3_U0_ap_ready : STD_LOGIC;
    signal DepthwiseConv2d_28_10_1_3_U0_input74_read : STD_LOGIC;
    signal DepthwiseConv2d_28_10_1_3_U0_weights_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal DepthwiseConv2d_28_10_1_3_U0_weights_ce0 : STD_LOGIC;
    signal DepthwiseConv2d_28_10_1_3_U0_weights_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal DepthwiseConv2d_28_10_1_3_U0_weights_ce1 : STD_LOGIC;
    signal DepthwiseConv2d_28_10_1_3_U0_depth1_o75_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DepthwiseConv2d_28_10_1_3_U0_depth1_o75_write : STD_LOGIC;
    signal PointwiseConv2d_10_1_4_U0_ap_start : STD_LOGIC;
    signal PointwiseConv2d_10_1_4_U0_ap_done : STD_LOGIC;
    signal PointwiseConv2d_10_1_4_U0_ap_continue : STD_LOGIC;
    signal PointwiseConv2d_10_1_4_U0_ap_idle : STD_LOGIC;
    signal PointwiseConv2d_10_1_4_U0_ap_ready : STD_LOGIC;
    signal PointwiseConv2d_10_1_4_U0_depth1_o75_read : STD_LOGIC;
    signal PointwiseConv2d_10_1_4_U0_weights_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_10_1_4_U0_weights_ce0 : STD_LOGIC;
    signal PointwiseConv2d_10_1_4_U0_weights_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_10_1_4_U0_weights_ce1 : STD_LOGIC;
    signal PointwiseConv2d_10_1_4_U0_point1_o76_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PointwiseConv2d_10_1_4_U0_point1_o76_write : STD_LOGIC;
    signal DepthwiseConv2d_10_4_4_3_U0_ap_start : STD_LOGIC;
    signal DepthwiseConv2d_10_4_4_3_U0_ap_done : STD_LOGIC;
    signal DepthwiseConv2d_10_4_4_3_U0_ap_continue : STD_LOGIC;
    signal DepthwiseConv2d_10_4_4_3_U0_ap_idle : STD_LOGIC;
    signal DepthwiseConv2d_10_4_4_3_U0_ap_ready : STD_LOGIC;
    signal DepthwiseConv2d_10_4_4_3_U0_point1_o76_read : STD_LOGIC;
    signal DepthwiseConv2d_10_4_4_3_U0_weights_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DepthwiseConv2d_10_4_4_3_U0_weights_ce0 : STD_LOGIC;
    signal DepthwiseConv2d_10_4_4_3_U0_weights_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal DepthwiseConv2d_10_4_4_3_U0_weights_ce1 : STD_LOGIC;
    signal DepthwiseConv2d_10_4_4_3_U0_depth2_o77_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DepthwiseConv2d_10_4_4_3_U0_depth2_o77_write : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_ap_start : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_ap_done : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_ap_continue : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_ap_idle : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_ap_ready : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_depth2_o77_read : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_0_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_0_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_0_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_1_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_1_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_1_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_2_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_2_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_2_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_3_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_3_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_3_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_3_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_4_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_4_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_4_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_4_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_5_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_5_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_5_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_5_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_6_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_6_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_6_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_6_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_7_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_7_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_7_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_7_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_8_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_8_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_8_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_8_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_9_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_9_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_9_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_9_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_10_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_10_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_10_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_10_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_11_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_11_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_11_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_11_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_12_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_12_ce0 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_weights_12_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal PointwiseConv2d_4_4_12_U0_weights_12_ce1 : STD_LOGIC;
    signal PointwiseConv2d_4_4_12_U0_point2_o78_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PointwiseConv2d_4_4_12_U0_point2_o78_write : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_ap_start : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_ap_done : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_ap_continue : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_ap_idle : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_point2_o78_read : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce0 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce1 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce0 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce1 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce0 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce1 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce0 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce1 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce0 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce1 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce0 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce1 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce0 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce1 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce0 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce1 : STD_LOGIC;
    signal DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_write : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_ap_start : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_ap_done : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_ap_continue : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_ap_idle : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_ap_ready : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_depth3_o79_read : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_0_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_0_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_0_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_1_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_1_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_2_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_2_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_3_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_3_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_3_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_4_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_4_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_4_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_5_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_5_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_5_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_6_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_6_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_6_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_7_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_7_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_7_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_8_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_8_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_8_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_9_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_9_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_9_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_10_ce0 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_weights_10_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal PointwiseConv2d_1_12_10_U0_weights_10_ce1 : STD_LOGIC;
    signal PointwiseConv2d_1_12_10_U0_point3_o80_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PointwiseConv2d_1_12_10_U0_point3_o80_write : STD_LOGIC;
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_226_1_proc6_U0_point3_o_read : STD_LOGIC;
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TUSER : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TID : STD_LOGIC_VECTOR (4 downto 0);
    signal Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDEST : STD_LOGIC_VECTOR (5 downto 0);
    signal depth1_w_i_full_n : STD_LOGIC;
    signal depth1_w_t_empty_n : STD_LOGIC;
    signal point1_w_i_full_n : STD_LOGIC;
    signal point1_w_t_empty_n : STD_LOGIC;
    signal depth2_w_i_full_n : STD_LOGIC;
    signal depth2_w_t_empty_n : STD_LOGIC;
    signal point2_w_i_full_n : STD_LOGIC;
    signal point2_w_t_empty_n : STD_LOGIC;
    signal point2_w_1_i_full_n : STD_LOGIC;
    signal point2_w_1_t_empty_n : STD_LOGIC;
    signal point2_w_2_i_full_n : STD_LOGIC;
    signal point2_w_2_t_empty_n : STD_LOGIC;
    signal point2_w_3_i_full_n : STD_LOGIC;
    signal point2_w_3_t_empty_n : STD_LOGIC;
    signal point2_w_4_i_full_n : STD_LOGIC;
    signal point2_w_4_t_empty_n : STD_LOGIC;
    signal point2_w_5_i_full_n : STD_LOGIC;
    signal point2_w_5_t_empty_n : STD_LOGIC;
    signal point2_w_6_i_full_n : STD_LOGIC;
    signal point2_w_6_t_empty_n : STD_LOGIC;
    signal point2_w_7_i_full_n : STD_LOGIC;
    signal point2_w_7_t_empty_n : STD_LOGIC;
    signal point2_w_8_i_full_n : STD_LOGIC;
    signal point2_w_8_t_empty_n : STD_LOGIC;
    signal point2_w_9_i_full_n : STD_LOGIC;
    signal point2_w_9_t_empty_n : STD_LOGIC;
    signal point2_w_10_i_full_n : STD_LOGIC;
    signal point2_w_10_t_empty_n : STD_LOGIC;
    signal point2_w_11_i_full_n : STD_LOGIC;
    signal point2_w_11_t_empty_n : STD_LOGIC;
    signal point2_w_12_i_full_n : STD_LOGIC;
    signal point2_w_12_t_empty_n : STD_LOGIC;
    signal depth3_w_i_full_n : STD_LOGIC;
    signal depth3_w_t_empty_n : STD_LOGIC;
    signal depth3_w_1_i_full_n : STD_LOGIC;
    signal depth3_w_1_t_empty_n : STD_LOGIC;
    signal depth3_w_2_i_full_n : STD_LOGIC;
    signal depth3_w_2_t_empty_n : STD_LOGIC;
    signal depth3_w_3_i_full_n : STD_LOGIC;
    signal depth3_w_3_t_empty_n : STD_LOGIC;
    signal depth3_w_4_i_full_n : STD_LOGIC;
    signal depth3_w_4_t_empty_n : STD_LOGIC;
    signal depth3_w_5_i_full_n : STD_LOGIC;
    signal depth3_w_5_t_empty_n : STD_LOGIC;
    signal depth3_w_6_i_full_n : STD_LOGIC;
    signal depth3_w_6_t_empty_n : STD_LOGIC;
    signal depth3_w_7_i_full_n : STD_LOGIC;
    signal depth3_w_7_t_empty_n : STD_LOGIC;
    signal point3_w_i_full_n : STD_LOGIC;
    signal point3_w_t_empty_n : STD_LOGIC;
    signal point3_w_1_i_full_n : STD_LOGIC;
    signal point3_w_1_t_empty_n : STD_LOGIC;
    signal point3_w_2_i_full_n : STD_LOGIC;
    signal point3_w_2_t_empty_n : STD_LOGIC;
    signal point3_w_3_i_full_n : STD_LOGIC;
    signal point3_w_3_t_empty_n : STD_LOGIC;
    signal point3_w_4_i_full_n : STD_LOGIC;
    signal point3_w_4_t_empty_n : STD_LOGIC;
    signal point3_w_5_i_full_n : STD_LOGIC;
    signal point3_w_5_t_empty_n : STD_LOGIC;
    signal point3_w_6_i_full_n : STD_LOGIC;
    signal point3_w_6_t_empty_n : STD_LOGIC;
    signal point3_w_7_i_full_n : STD_LOGIC;
    signal point3_w_7_t_empty_n : STD_LOGIC;
    signal point3_w_8_i_full_n : STD_LOGIC;
    signal point3_w_8_t_empty_n : STD_LOGIC;
    signal point3_w_9_i_full_n : STD_LOGIC;
    signal point3_w_9_t_empty_n : STD_LOGIC;
    signal point3_w_10_i_full_n : STD_LOGIC;
    signal point3_w_10_t_empty_n : STD_LOGIC;
    signal input_full_n : STD_LOGIC;
    signal input_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal input_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal input_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal input_empty_n : STD_LOGIC;
    signal pix_keep_V_dout : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_keep_V_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_keep_V_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_keep_V_empty_n : STD_LOGIC;
    signal pix_strb_V_dout : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_strb_V_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_strb_V_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_strb_V_empty_n : STD_LOGIC;
    signal pix_user_V_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal pix_user_V_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_user_V_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_user_V_empty_n : STD_LOGIC;
    signal pix_id_V_dout : STD_LOGIC_VECTOR (4 downto 0);
    signal pix_id_V_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_id_V_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_id_V_empty_n : STD_LOGIC;
    signal pix_dest_V_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal pix_dest_V_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_dest_V_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal pix_dest_V_empty_n : STD_LOGIC;
    signal depth1_o_full_n : STD_LOGIC;
    signal depth1_o_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal depth1_o_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal depth1_o_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal depth1_o_empty_n : STD_LOGIC;
    signal point1_o_full_n : STD_LOGIC;
    signal point1_o_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal point1_o_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal point1_o_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal point1_o_empty_n : STD_LOGIC;
    signal depth2_o_full_n : STD_LOGIC;
    signal depth2_o_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal depth2_o_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal depth2_o_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal depth2_o_empty_n : STD_LOGIC;
    signal point2_o_full_n : STD_LOGIC;
    signal point2_o_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal point2_o_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal point2_o_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal point2_o_empty_n : STD_LOGIC;
    signal depth3_o_full_n : STD_LOGIC;
    signal depth3_o_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal depth3_o_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal depth3_o_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal depth3_o_empty_n : STD_LOGIC;
    signal point3_o_full_n : STD_LOGIC;
    signal point3_o_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal point3_o_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal point3_o_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal point3_o_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_LoadWeights_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_LoadWeights_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_LoadInput_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_LoadInput_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component MNIST_LoadWeights IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wstrm_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        wstrm_TVALID : IN STD_LOGIC;
        wstrm_TREADY : OUT STD_LOGIC;
        wstrm_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        wstrm_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        wstrm_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
        wstrm_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        wstrm_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        wstrm_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
        depth1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        depth1_ce0 : OUT STD_LOGIC;
        depth1_we0 : OUT STD_LOGIC;
        depth1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point1_ce0 : OUT STD_LOGIC;
        point1_we0 : OUT STD_LOGIC;
        point1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        depth2_ce0 : OUT STD_LOGIC;
        depth2_we0 : OUT STD_LOGIC;
        depth2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_0_ce0 : OUT STD_LOGIC;
        point2_0_we0 : OUT STD_LOGIC;
        point2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_1_ce0 : OUT STD_LOGIC;
        point2_1_we0 : OUT STD_LOGIC;
        point2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_2_ce0 : OUT STD_LOGIC;
        point2_2_we0 : OUT STD_LOGIC;
        point2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_3_ce0 : OUT STD_LOGIC;
        point2_3_we0 : OUT STD_LOGIC;
        point2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_4_ce0 : OUT STD_LOGIC;
        point2_4_we0 : OUT STD_LOGIC;
        point2_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_5_ce0 : OUT STD_LOGIC;
        point2_5_we0 : OUT STD_LOGIC;
        point2_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_6_ce0 : OUT STD_LOGIC;
        point2_6_we0 : OUT STD_LOGIC;
        point2_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_7_ce0 : OUT STD_LOGIC;
        point2_7_we0 : OUT STD_LOGIC;
        point2_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_8_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_8_ce0 : OUT STD_LOGIC;
        point2_8_we0 : OUT STD_LOGIC;
        point2_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_9_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_9_ce0 : OUT STD_LOGIC;
        point2_9_we0 : OUT STD_LOGIC;
        point2_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_10_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_10_ce0 : OUT STD_LOGIC;
        point2_10_we0 : OUT STD_LOGIC;
        point2_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_11_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_11_ce0 : OUT STD_LOGIC;
        point2_11_we0 : OUT STD_LOGIC;
        point2_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_12_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        point2_12_ce0 : OUT STD_LOGIC;
        point2_12_we0 : OUT STD_LOGIC;
        point2_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        depth3_0_ce0 : OUT STD_LOGIC;
        depth3_0_we0 : OUT STD_LOGIC;
        depth3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth3_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        depth3_1_ce0 : OUT STD_LOGIC;
        depth3_1_we0 : OUT STD_LOGIC;
        depth3_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth3_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        depth3_2_ce0 : OUT STD_LOGIC;
        depth3_2_we0 : OUT STD_LOGIC;
        depth3_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth3_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        depth3_3_ce0 : OUT STD_LOGIC;
        depth3_3_we0 : OUT STD_LOGIC;
        depth3_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth3_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        depth3_4_ce0 : OUT STD_LOGIC;
        depth3_4_we0 : OUT STD_LOGIC;
        depth3_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth3_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        depth3_5_ce0 : OUT STD_LOGIC;
        depth3_5_we0 : OUT STD_LOGIC;
        depth3_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth3_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        depth3_6_ce0 : OUT STD_LOGIC;
        depth3_6_we0 : OUT STD_LOGIC;
        depth3_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth3_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        depth3_7_ce0 : OUT STD_LOGIC;
        depth3_7_we0 : OUT STD_LOGIC;
        depth3_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_0_ce0 : OUT STD_LOGIC;
        point3_0_we0 : OUT STD_LOGIC;
        point3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_1_ce0 : OUT STD_LOGIC;
        point3_1_we0 : OUT STD_LOGIC;
        point3_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_2_ce0 : OUT STD_LOGIC;
        point3_2_we0 : OUT STD_LOGIC;
        point3_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_3_ce0 : OUT STD_LOGIC;
        point3_3_we0 : OUT STD_LOGIC;
        point3_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_4_ce0 : OUT STD_LOGIC;
        point3_4_we0 : OUT STD_LOGIC;
        point3_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_5_ce0 : OUT STD_LOGIC;
        point3_5_we0 : OUT STD_LOGIC;
        point3_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_6_ce0 : OUT STD_LOGIC;
        point3_6_we0 : OUT STD_LOGIC;
        point3_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_7_ce0 : OUT STD_LOGIC;
        point3_7_we0 : OUT STD_LOGIC;
        point3_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_8_ce0 : OUT STD_LOGIC;
        point3_8_we0 : OUT STD_LOGIC;
        point3_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_9_ce0 : OUT STD_LOGIC;
        point3_9_we0 : OUT STD_LOGIC;
        point3_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        point3_10_ce0 : OUT STD_LOGIC;
        point3_10_we0 : OUT STD_LOGIC;
        point3_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_LoadInput IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        istrm_TVALID : IN STD_LOGIC;
        input74_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        input74_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        input74_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        input74_full_n : IN STD_LOGIC;
        input74_write : OUT STD_LOGIC;
        istrm_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        istrm_TREADY : OUT STD_LOGIC;
        istrm_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        istrm_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        istrm_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
        istrm_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        istrm_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        istrm_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (1 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component MNIST_DepthwiseConv2d_28_10_1_3_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input74_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        input74_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        input74_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        input74_empty_n : IN STD_LOGIC;
        input74_read : OUT STD_LOGIC;
        weights_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_ce0 : OUT STD_LOGIC;
        weights_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_ce1 : OUT STD_LOGIC;
        weights_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        depth1_o75_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth1_o75_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        depth1_o75_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        depth1_o75_full_n : IN STD_LOGIC;
        depth1_o75_write : OUT STD_LOGIC );
    end component;


    component MNIST_PointwiseConv2d_10_1_4_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        depth1_o75_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        depth1_o75_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        depth1_o75_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        depth1_o75_empty_n : IN STD_LOGIC;
        depth1_o75_read : OUT STD_LOGIC;
        weights_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_ce0 : OUT STD_LOGIC;
        weights_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_ce1 : OUT STD_LOGIC;
        weights_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        point1_o76_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        point1_o76_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        point1_o76_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        point1_o76_full_n : IN STD_LOGIC;
        point1_o76_write : OUT STD_LOGIC );
    end component;


    component MNIST_DepthwiseConv2d_10_4_4_3_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        point1_o76_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        point1_o76_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        point1_o76_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        point1_o76_empty_n : IN STD_LOGIC;
        point1_o76_read : OUT STD_LOGIC;
        weights_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        weights_ce0 : OUT STD_LOGIC;
        weights_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        weights_ce1 : OUT STD_LOGIC;
        weights_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        depth2_o77_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth2_o77_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        depth2_o77_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        depth2_o77_full_n : IN STD_LOGIC;
        depth2_o77_write : OUT STD_LOGIC );
    end component;


    component MNIST_PointwiseConv2d_4_4_12_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        depth2_o77_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        depth2_o77_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        depth2_o77_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        depth2_o77_empty_n : IN STD_LOGIC;
        depth2_o77_read : OUT STD_LOGIC;
        weights_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_0_ce0 : OUT STD_LOGIC;
        weights_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_0_ce1 : OUT STD_LOGIC;
        weights_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_1_ce0 : OUT STD_LOGIC;
        weights_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_1_ce1 : OUT STD_LOGIC;
        weights_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_2_ce0 : OUT STD_LOGIC;
        weights_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_2_ce1 : OUT STD_LOGIC;
        weights_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_3_ce0 : OUT STD_LOGIC;
        weights_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_3_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_3_ce1 : OUT STD_LOGIC;
        weights_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_4_ce0 : OUT STD_LOGIC;
        weights_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_4_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_4_ce1 : OUT STD_LOGIC;
        weights_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_5_ce0 : OUT STD_LOGIC;
        weights_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_5_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_5_ce1 : OUT STD_LOGIC;
        weights_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_6_ce0 : OUT STD_LOGIC;
        weights_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_6_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_6_ce1 : OUT STD_LOGIC;
        weights_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_7_ce0 : OUT STD_LOGIC;
        weights_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_7_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_7_ce1 : OUT STD_LOGIC;
        weights_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_8_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_8_ce0 : OUT STD_LOGIC;
        weights_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_8_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_8_ce1 : OUT STD_LOGIC;
        weights_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_9_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_9_ce0 : OUT STD_LOGIC;
        weights_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_9_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_9_ce1 : OUT STD_LOGIC;
        weights_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_10_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_10_ce0 : OUT STD_LOGIC;
        weights_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_10_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_10_ce1 : OUT STD_LOGIC;
        weights_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_11_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_11_ce0 : OUT STD_LOGIC;
        weights_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_11_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_11_ce1 : OUT STD_LOGIC;
        weights_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_12_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_12_ce0 : OUT STD_LOGIC;
        weights_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_12_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_12_ce1 : OUT STD_LOGIC;
        weights_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        point2_o78_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        point2_o78_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        point2_o78_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        point2_o78_full_n : IN STD_LOGIC;
        point2_o78_write : OUT STD_LOGIC );
    end component;


    component MNIST_DepthwiseConv2dFinal_4_1_12_4_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        point2_o78_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        point2_o78_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        point2_o78_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        point2_o78_empty_n : IN STD_LOGIC;
        point2_o78_read : OUT STD_LOGIC;
        weights_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_0_ce0 : OUT STD_LOGIC;
        weights_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_0_ce1 : OUT STD_LOGIC;
        weights_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_1_ce0 : OUT STD_LOGIC;
        weights_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_1_ce1 : OUT STD_LOGIC;
        weights_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_2_ce0 : OUT STD_LOGIC;
        weights_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_2_ce1 : OUT STD_LOGIC;
        weights_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_3_ce0 : OUT STD_LOGIC;
        weights_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_3_ce1 : OUT STD_LOGIC;
        weights_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_4_ce0 : OUT STD_LOGIC;
        weights_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_4_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_4_ce1 : OUT STD_LOGIC;
        weights_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_5_ce0 : OUT STD_LOGIC;
        weights_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_5_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_5_ce1 : OUT STD_LOGIC;
        weights_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_6_ce0 : OUT STD_LOGIC;
        weights_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_6_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_6_ce1 : OUT STD_LOGIC;
        weights_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_7_ce0 : OUT STD_LOGIC;
        weights_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_7_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        weights_7_ce1 : OUT STD_LOGIC;
        weights_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        depth3_o79_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        depth3_o79_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        depth3_o79_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        depth3_o79_full_n : IN STD_LOGIC;
        depth3_o79_write : OUT STD_LOGIC );
    end component;


    component MNIST_PointwiseConv2d_1_12_10_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        depth3_o79_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        depth3_o79_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        depth3_o79_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        depth3_o79_empty_n : IN STD_LOGIC;
        depth3_o79_read : OUT STD_LOGIC;
        weights_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_0_ce0 : OUT STD_LOGIC;
        weights_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_0_ce1 : OUT STD_LOGIC;
        weights_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_1_ce0 : OUT STD_LOGIC;
        weights_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_1_ce1 : OUT STD_LOGIC;
        weights_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_2_ce0 : OUT STD_LOGIC;
        weights_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_2_ce1 : OUT STD_LOGIC;
        weights_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_3_ce0 : OUT STD_LOGIC;
        weights_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_3_ce1 : OUT STD_LOGIC;
        weights_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_4_ce0 : OUT STD_LOGIC;
        weights_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_4_ce1 : OUT STD_LOGIC;
        weights_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_5_ce0 : OUT STD_LOGIC;
        weights_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_5_ce1 : OUT STD_LOGIC;
        weights_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_6_ce0 : OUT STD_LOGIC;
        weights_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_6_ce1 : OUT STD_LOGIC;
        weights_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_7_ce0 : OUT STD_LOGIC;
        weights_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_7_ce1 : OUT STD_LOGIC;
        weights_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_8_ce0 : OUT STD_LOGIC;
        weights_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_8_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_8_ce1 : OUT STD_LOGIC;
        weights_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_9_ce0 : OUT STD_LOGIC;
        weights_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_9_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_9_ce1 : OUT STD_LOGIC;
        weights_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_10_ce0 : OUT STD_LOGIC;
        weights_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_10_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_10_ce1 : OUT STD_LOGIC;
        weights_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        point3_o80_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        point3_o80_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        point3_o80_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        point3_o80_full_n : IN STD_LOGIC;
        point3_o80_write : OUT STD_LOGIC );
    end component;


    component MNIST_Loop_VITIS_LOOP_226_1_proc6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        point3_o_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        point3_o_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        point3_o_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        point3_o_empty_n : IN STD_LOGIC;
        point3_o_read : OUT STD_LOGIC;
        ostrm_TREADY : IN STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (3 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (3 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (4 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (5 downto 0);
        ostrm_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        ostrm_TVALID : OUT STD_LOGIC;
        ostrm_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        ostrm_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        ostrm_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
        ostrm_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        ostrm_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
        ostrm_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component MNIST_depth1_w_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component MNIST_point1_w_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component MNIST_depth2_w_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component MNIST_depth3_w_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component MNIST_point3_w_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component MNIST_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component MNIST_fifo_w4_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (3 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component MNIST_fifo_w2_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component MNIST_fifo_w5_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (4 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component MNIST_fifo_w6_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (5 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component MNIST_CONTROL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    depth1_w_U : component MNIST_depth1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_depth1_address0,
        i_ce0 => LoadWeights_U0_depth1_ce0,
        i_we0 => LoadWeights_U0_depth1_we0,
        i_d0 => LoadWeights_U0_depth1_d0,
        i_q0 => depth1_w_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => depth1_w_i_q1,
        t_address0 => DepthwiseConv2d_28_10_1_3_U0_weights_address0,
        t_ce0 => DepthwiseConv2d_28_10_1_3_U0_weights_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => depth1_w_t_q0,
        t_address1 => DepthwiseConv2d_28_10_1_3_U0_weights_address1,
        t_ce1 => DepthwiseConv2d_28_10_1_3_U0_weights_ce1,
        t_q1 => depth1_w_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => depth1_w_i_full_n,
        i_write => ap_channel_done_depth1_w,
        t_empty_n => depth1_w_t_empty_n,
        t_read => DepthwiseConv2d_28_10_1_3_U0_ap_ready);

    point1_w_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point1_address0,
        i_ce0 => LoadWeights_U0_point1_ce0,
        i_we0 => LoadWeights_U0_point1_we0,
        i_d0 => LoadWeights_U0_point1_d0,
        i_q0 => point1_w_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point1_w_i_q1,
        t_address0 => PointwiseConv2d_10_1_4_U0_weights_address0,
        t_ce0 => PointwiseConv2d_10_1_4_U0_weights_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point1_w_t_q0,
        t_address1 => PointwiseConv2d_10_1_4_U0_weights_address1,
        t_ce1 => PointwiseConv2d_10_1_4_U0_weights_ce1,
        t_q1 => point1_w_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point1_w_i_full_n,
        i_write => ap_channel_done_point1_w,
        t_empty_n => point1_w_t_empty_n,
        t_read => PointwiseConv2d_10_1_4_U0_ap_ready);

    depth2_w_U : component MNIST_depth2_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_depth2_address0,
        i_ce0 => LoadWeights_U0_depth2_ce0,
        i_we0 => LoadWeights_U0_depth2_we0,
        i_d0 => LoadWeights_U0_depth2_d0,
        i_q0 => depth2_w_i_q0,
        i_address1 => ap_const_lv6_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => depth2_w_i_q1,
        t_address0 => DepthwiseConv2d_10_4_4_3_U0_weights_address0,
        t_ce0 => DepthwiseConv2d_10_4_4_3_U0_weights_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => depth2_w_t_q0,
        t_address1 => DepthwiseConv2d_10_4_4_3_U0_weights_address1,
        t_ce1 => DepthwiseConv2d_10_4_4_3_U0_weights_ce1,
        t_q1 => depth2_w_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => depth2_w_i_full_n,
        i_write => ap_channel_done_depth2_w,
        t_empty_n => depth2_w_t_empty_n,
        t_read => DepthwiseConv2d_10_4_4_3_U0_ap_ready);

    point2_w_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_0_address0,
        i_ce0 => LoadWeights_U0_point2_0_ce0,
        i_we0 => LoadWeights_U0_point2_0_we0,
        i_d0 => LoadWeights_U0_point2_0_d0,
        i_q0 => point2_w_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_0_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_0_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_0_ce1,
        t_q1 => point2_w_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_i_full_n,
        i_write => ap_channel_done_point2_w,
        t_empty_n => point2_w_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_1_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_1_address0,
        i_ce0 => LoadWeights_U0_point2_1_ce0,
        i_we0 => LoadWeights_U0_point2_1_we0,
        i_d0 => LoadWeights_U0_point2_1_d0,
        i_q0 => point2_w_1_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_1_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_1_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_1_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_1_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_1_ce1,
        t_q1 => point2_w_1_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_1_i_full_n,
        i_write => ap_channel_done_point2_w_1,
        t_empty_n => point2_w_1_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_2_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_2_address0,
        i_ce0 => LoadWeights_U0_point2_2_ce0,
        i_we0 => LoadWeights_U0_point2_2_we0,
        i_d0 => LoadWeights_U0_point2_2_d0,
        i_q0 => point2_w_2_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_2_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_2_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_2_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_2_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_2_ce1,
        t_q1 => point2_w_2_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_2_i_full_n,
        i_write => ap_channel_done_point2_w_2,
        t_empty_n => point2_w_2_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_3_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_3_address0,
        i_ce0 => LoadWeights_U0_point2_3_ce0,
        i_we0 => LoadWeights_U0_point2_3_we0,
        i_d0 => LoadWeights_U0_point2_3_d0,
        i_q0 => point2_w_3_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_3_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_3_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_3_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_3_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_3_ce1,
        t_q1 => point2_w_3_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_3_i_full_n,
        i_write => ap_channel_done_point2_w_3,
        t_empty_n => point2_w_3_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_4_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_4_address0,
        i_ce0 => LoadWeights_U0_point2_4_ce0,
        i_we0 => LoadWeights_U0_point2_4_we0,
        i_d0 => LoadWeights_U0_point2_4_d0,
        i_q0 => point2_w_4_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_4_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_4_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_4_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_4_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_4_ce1,
        t_q1 => point2_w_4_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_4_i_full_n,
        i_write => ap_channel_done_point2_w_4,
        t_empty_n => point2_w_4_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_5_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_5_address0,
        i_ce0 => LoadWeights_U0_point2_5_ce0,
        i_we0 => LoadWeights_U0_point2_5_we0,
        i_d0 => LoadWeights_U0_point2_5_d0,
        i_q0 => point2_w_5_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_5_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_5_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_5_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_5_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_5_ce1,
        t_q1 => point2_w_5_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_5_i_full_n,
        i_write => ap_channel_done_point2_w_5,
        t_empty_n => point2_w_5_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_6_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_6_address0,
        i_ce0 => LoadWeights_U0_point2_6_ce0,
        i_we0 => LoadWeights_U0_point2_6_we0,
        i_d0 => LoadWeights_U0_point2_6_d0,
        i_q0 => point2_w_6_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_6_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_6_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_6_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_6_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_6_ce1,
        t_q1 => point2_w_6_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_6_i_full_n,
        i_write => ap_channel_done_point2_w_6,
        t_empty_n => point2_w_6_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_7_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_7_address0,
        i_ce0 => LoadWeights_U0_point2_7_ce0,
        i_we0 => LoadWeights_U0_point2_7_we0,
        i_d0 => LoadWeights_U0_point2_7_d0,
        i_q0 => point2_w_7_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_7_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_7_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_7_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_7_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_7_ce1,
        t_q1 => point2_w_7_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_7_i_full_n,
        i_write => ap_channel_done_point2_w_7,
        t_empty_n => point2_w_7_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_8_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_8_address0,
        i_ce0 => LoadWeights_U0_point2_8_ce0,
        i_we0 => LoadWeights_U0_point2_8_we0,
        i_d0 => LoadWeights_U0_point2_8_d0,
        i_q0 => point2_w_8_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_8_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_8_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_8_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_8_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_8_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_8_ce1,
        t_q1 => point2_w_8_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_8_i_full_n,
        i_write => ap_channel_done_point2_w_8,
        t_empty_n => point2_w_8_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_9_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_9_address0,
        i_ce0 => LoadWeights_U0_point2_9_ce0,
        i_we0 => LoadWeights_U0_point2_9_we0,
        i_d0 => LoadWeights_U0_point2_9_d0,
        i_q0 => point2_w_9_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_9_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_9_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_9_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_9_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_9_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_9_ce1,
        t_q1 => point2_w_9_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_9_i_full_n,
        i_write => ap_channel_done_point2_w_9,
        t_empty_n => point2_w_9_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_10_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_10_address0,
        i_ce0 => LoadWeights_U0_point2_10_ce0,
        i_we0 => LoadWeights_U0_point2_10_we0,
        i_d0 => LoadWeights_U0_point2_10_d0,
        i_q0 => point2_w_10_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_10_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_10_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_10_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_10_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_10_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_10_ce1,
        t_q1 => point2_w_10_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_10_i_full_n,
        i_write => ap_channel_done_point2_w_10,
        t_empty_n => point2_w_10_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_11_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_11_address0,
        i_ce0 => LoadWeights_U0_point2_11_ce0,
        i_we0 => LoadWeights_U0_point2_11_we0,
        i_d0 => LoadWeights_U0_point2_11_d0,
        i_q0 => point2_w_11_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_11_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_11_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_11_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_11_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_11_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_11_ce1,
        t_q1 => point2_w_11_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_11_i_full_n,
        i_write => ap_channel_done_point2_w_11,
        t_empty_n => point2_w_11_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    point2_w_12_U : component MNIST_point1_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point2_12_address0,
        i_ce0 => LoadWeights_U0_point2_12_ce0,
        i_we0 => LoadWeights_U0_point2_12_we0,
        i_d0 => LoadWeights_U0_point2_12_d0,
        i_q0 => point2_w_12_i_q0,
        i_address1 => ap_const_lv2_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point2_w_12_i_q1,
        t_address0 => PointwiseConv2d_4_4_12_U0_weights_12_address0,
        t_ce0 => PointwiseConv2d_4_4_12_U0_weights_12_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point2_w_12_t_q0,
        t_address1 => PointwiseConv2d_4_4_12_U0_weights_12_address1,
        t_ce1 => PointwiseConv2d_4_4_12_U0_weights_12_ce1,
        t_q1 => point2_w_12_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point2_w_12_i_full_n,
        i_write => ap_channel_done_point2_w_12,
        t_empty_n => point2_w_12_t_empty_n,
        t_read => PointwiseConv2d_4_4_12_U0_ap_ready);

    depth3_w_U : component MNIST_depth3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_depth3_0_address0,
        i_ce0 => LoadWeights_U0_depth3_0_ce0,
        i_we0 => LoadWeights_U0_depth3_0_we0,
        i_d0 => LoadWeights_U0_depth3_0_d0,
        i_q0 => depth3_w_i_q0,
        i_address1 => ap_const_lv5_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => depth3_w_i_q1,
        t_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address0,
        t_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => depth3_w_t_q0,
        t_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address1,
        t_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce1,
        t_q1 => depth3_w_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => depth3_w_i_full_n,
        i_write => ap_channel_done_depth3_w,
        t_empty_n => depth3_w_t_empty_n,
        t_read => DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready);

    depth3_w_1_U : component MNIST_depth3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_depth3_1_address0,
        i_ce0 => LoadWeights_U0_depth3_1_ce0,
        i_we0 => LoadWeights_U0_depth3_1_we0,
        i_d0 => LoadWeights_U0_depth3_1_d0,
        i_q0 => depth3_w_1_i_q0,
        i_address1 => ap_const_lv5_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => depth3_w_1_i_q1,
        t_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address0,
        t_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => depth3_w_1_t_q0,
        t_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address1,
        t_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce1,
        t_q1 => depth3_w_1_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => depth3_w_1_i_full_n,
        i_write => ap_channel_done_depth3_w_1,
        t_empty_n => depth3_w_1_t_empty_n,
        t_read => DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready);

    depth3_w_2_U : component MNIST_depth3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_depth3_2_address0,
        i_ce0 => LoadWeights_U0_depth3_2_ce0,
        i_we0 => LoadWeights_U0_depth3_2_we0,
        i_d0 => LoadWeights_U0_depth3_2_d0,
        i_q0 => depth3_w_2_i_q0,
        i_address1 => ap_const_lv5_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => depth3_w_2_i_q1,
        t_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address0,
        t_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => depth3_w_2_t_q0,
        t_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address1,
        t_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce1,
        t_q1 => depth3_w_2_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => depth3_w_2_i_full_n,
        i_write => ap_channel_done_depth3_w_2,
        t_empty_n => depth3_w_2_t_empty_n,
        t_read => DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready);

    depth3_w_3_U : component MNIST_depth3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_depth3_3_address0,
        i_ce0 => LoadWeights_U0_depth3_3_ce0,
        i_we0 => LoadWeights_U0_depth3_3_we0,
        i_d0 => LoadWeights_U0_depth3_3_d0,
        i_q0 => depth3_w_3_i_q0,
        i_address1 => ap_const_lv5_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => depth3_w_3_i_q1,
        t_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address0,
        t_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => depth3_w_3_t_q0,
        t_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address1,
        t_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce1,
        t_q1 => depth3_w_3_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => depth3_w_3_i_full_n,
        i_write => ap_channel_done_depth3_w_3,
        t_empty_n => depth3_w_3_t_empty_n,
        t_read => DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready);

    depth3_w_4_U : component MNIST_depth3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_depth3_4_address0,
        i_ce0 => LoadWeights_U0_depth3_4_ce0,
        i_we0 => LoadWeights_U0_depth3_4_we0,
        i_d0 => LoadWeights_U0_depth3_4_d0,
        i_q0 => depth3_w_4_i_q0,
        i_address1 => ap_const_lv5_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => depth3_w_4_i_q1,
        t_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address0,
        t_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => depth3_w_4_t_q0,
        t_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address1,
        t_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce1,
        t_q1 => depth3_w_4_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => depth3_w_4_i_full_n,
        i_write => ap_channel_done_depth3_w_4,
        t_empty_n => depth3_w_4_t_empty_n,
        t_read => DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready);

    depth3_w_5_U : component MNIST_depth3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_depth3_5_address0,
        i_ce0 => LoadWeights_U0_depth3_5_ce0,
        i_we0 => LoadWeights_U0_depth3_5_we0,
        i_d0 => LoadWeights_U0_depth3_5_d0,
        i_q0 => depth3_w_5_i_q0,
        i_address1 => ap_const_lv5_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => depth3_w_5_i_q1,
        t_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address0,
        t_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => depth3_w_5_t_q0,
        t_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address1,
        t_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce1,
        t_q1 => depth3_w_5_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => depth3_w_5_i_full_n,
        i_write => ap_channel_done_depth3_w_5,
        t_empty_n => depth3_w_5_t_empty_n,
        t_read => DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready);

    depth3_w_6_U : component MNIST_depth3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_depth3_6_address0,
        i_ce0 => LoadWeights_U0_depth3_6_ce0,
        i_we0 => LoadWeights_U0_depth3_6_we0,
        i_d0 => LoadWeights_U0_depth3_6_d0,
        i_q0 => depth3_w_6_i_q0,
        i_address1 => ap_const_lv5_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => depth3_w_6_i_q1,
        t_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address0,
        t_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => depth3_w_6_t_q0,
        t_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address1,
        t_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce1,
        t_q1 => depth3_w_6_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => depth3_w_6_i_full_n,
        i_write => ap_channel_done_depth3_w_6,
        t_empty_n => depth3_w_6_t_empty_n,
        t_read => DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready);

    depth3_w_7_U : component MNIST_depth3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_depth3_7_address0,
        i_ce0 => LoadWeights_U0_depth3_7_ce0,
        i_we0 => LoadWeights_U0_depth3_7_we0,
        i_d0 => LoadWeights_U0_depth3_7_d0,
        i_q0 => depth3_w_7_i_q0,
        i_address1 => ap_const_lv5_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => depth3_w_7_i_q1,
        t_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address0,
        t_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => depth3_w_7_t_q0,
        t_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address1,
        t_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce1,
        t_q1 => depth3_w_7_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => depth3_w_7_i_full_n,
        i_write => ap_channel_done_depth3_w_7,
        t_empty_n => depth3_w_7_t_empty_n,
        t_read => DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready);

    point3_w_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_0_address0,
        i_ce0 => LoadWeights_U0_point3_0_ce0,
        i_we0 => LoadWeights_U0_point3_0_we0,
        i_d0 => LoadWeights_U0_point3_0_d0,
        i_q0 => point3_w_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_0_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_0_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_0_ce1,
        t_q1 => point3_w_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_i_full_n,
        i_write => ap_channel_done_point3_w,
        t_empty_n => point3_w_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    point3_w_1_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_1_address0,
        i_ce0 => LoadWeights_U0_point3_1_ce0,
        i_we0 => LoadWeights_U0_point3_1_we0,
        i_d0 => LoadWeights_U0_point3_1_d0,
        i_q0 => point3_w_1_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_1_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_1_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_1_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_1_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_1_ce1,
        t_q1 => point3_w_1_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_1_i_full_n,
        i_write => ap_channel_done_point3_w_1,
        t_empty_n => point3_w_1_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    point3_w_2_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_2_address0,
        i_ce0 => LoadWeights_U0_point3_2_ce0,
        i_we0 => LoadWeights_U0_point3_2_we0,
        i_d0 => LoadWeights_U0_point3_2_d0,
        i_q0 => point3_w_2_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_2_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_2_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_2_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_2_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_2_ce1,
        t_q1 => point3_w_2_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_2_i_full_n,
        i_write => ap_channel_done_point3_w_2,
        t_empty_n => point3_w_2_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    point3_w_3_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_3_address0,
        i_ce0 => LoadWeights_U0_point3_3_ce0,
        i_we0 => LoadWeights_U0_point3_3_we0,
        i_d0 => LoadWeights_U0_point3_3_d0,
        i_q0 => point3_w_3_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_3_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_3_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_3_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_3_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_3_ce1,
        t_q1 => point3_w_3_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_3_i_full_n,
        i_write => ap_channel_done_point3_w_3,
        t_empty_n => point3_w_3_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    point3_w_4_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_4_address0,
        i_ce0 => LoadWeights_U0_point3_4_ce0,
        i_we0 => LoadWeights_U0_point3_4_we0,
        i_d0 => LoadWeights_U0_point3_4_d0,
        i_q0 => point3_w_4_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_4_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_4_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_4_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_4_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_4_ce1,
        t_q1 => point3_w_4_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_4_i_full_n,
        i_write => ap_channel_done_point3_w_4,
        t_empty_n => point3_w_4_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    point3_w_5_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_5_address0,
        i_ce0 => LoadWeights_U0_point3_5_ce0,
        i_we0 => LoadWeights_U0_point3_5_we0,
        i_d0 => LoadWeights_U0_point3_5_d0,
        i_q0 => point3_w_5_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_5_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_5_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_5_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_5_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_5_ce1,
        t_q1 => point3_w_5_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_5_i_full_n,
        i_write => ap_channel_done_point3_w_5,
        t_empty_n => point3_w_5_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    point3_w_6_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_6_address0,
        i_ce0 => LoadWeights_U0_point3_6_ce0,
        i_we0 => LoadWeights_U0_point3_6_we0,
        i_d0 => LoadWeights_U0_point3_6_d0,
        i_q0 => point3_w_6_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_6_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_6_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_6_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_6_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_6_ce1,
        t_q1 => point3_w_6_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_6_i_full_n,
        i_write => ap_channel_done_point3_w_6,
        t_empty_n => point3_w_6_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    point3_w_7_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_7_address0,
        i_ce0 => LoadWeights_U0_point3_7_ce0,
        i_we0 => LoadWeights_U0_point3_7_we0,
        i_d0 => LoadWeights_U0_point3_7_d0,
        i_q0 => point3_w_7_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_7_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_7_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_7_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_7_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_7_ce1,
        t_q1 => point3_w_7_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_7_i_full_n,
        i_write => ap_channel_done_point3_w_7,
        t_empty_n => point3_w_7_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    point3_w_8_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_8_address0,
        i_ce0 => LoadWeights_U0_point3_8_ce0,
        i_we0 => LoadWeights_U0_point3_8_we0,
        i_d0 => LoadWeights_U0_point3_8_d0,
        i_q0 => point3_w_8_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_8_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_8_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_8_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_8_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_8_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_8_ce1,
        t_q1 => point3_w_8_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_8_i_full_n,
        i_write => ap_channel_done_point3_w_8,
        t_empty_n => point3_w_8_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    point3_w_9_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_9_address0,
        i_ce0 => LoadWeights_U0_point3_9_ce0,
        i_we0 => LoadWeights_U0_point3_9_we0,
        i_d0 => LoadWeights_U0_point3_9_d0,
        i_q0 => point3_w_9_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_9_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_9_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_9_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_9_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_9_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_9_ce1,
        t_q1 => point3_w_9_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_9_i_full_n,
        i_write => ap_channel_done_point3_w_9,
        t_empty_n => point3_w_9_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    point3_w_10_U : component MNIST_point3_w_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => LoadWeights_U0_point3_10_address0,
        i_ce0 => LoadWeights_U0_point3_10_ce0,
        i_we0 => LoadWeights_U0_point3_10_we0,
        i_d0 => LoadWeights_U0_point3_10_d0,
        i_q0 => point3_w_10_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => point3_w_10_i_q1,
        t_address0 => PointwiseConv2d_1_12_10_U0_weights_10_address0,
        t_ce0 => PointwiseConv2d_1_12_10_U0_weights_10_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => point3_w_10_t_q0,
        t_address1 => PointwiseConv2d_1_12_10_U0_weights_10_address1,
        t_ce1 => PointwiseConv2d_1_12_10_U0_weights_10_ce1,
        t_q1 => point3_w_10_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => point3_w_10_i_full_n,
        i_write => ap_channel_done_point3_w_10,
        t_empty_n => point3_w_10_t_empty_n,
        t_read => PointwiseConv2d_1_12_10_U0_ap_ready);

    CONTROL_BUS_s_axi_U : component MNIST_CONTROL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_BUS_AWVALID,
        AWREADY => s_axi_CONTROL_BUS_AWREADY,
        AWADDR => s_axi_CONTROL_BUS_AWADDR,
        WVALID => s_axi_CONTROL_BUS_WVALID,
        WREADY => s_axi_CONTROL_BUS_WREADY,
        WDATA => s_axi_CONTROL_BUS_WDATA,
        WSTRB => s_axi_CONTROL_BUS_WSTRB,
        ARVALID => s_axi_CONTROL_BUS_ARVALID,
        ARREADY => s_axi_CONTROL_BUS_ARREADY,
        ARADDR => s_axi_CONTROL_BUS_ARADDR,
        RVALID => s_axi_CONTROL_BUS_RVALID,
        RREADY => s_axi_CONTROL_BUS_RREADY,
        RDATA => s_axi_CONTROL_BUS_RDATA,
        RRESP => s_axi_CONTROL_BUS_RRESP,
        BVALID => s_axi_CONTROL_BUS_BVALID,
        BREADY => s_axi_CONTROL_BUS_BREADY,
        BRESP => s_axi_CONTROL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    LoadWeights_U0 : component MNIST_LoadWeights
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => LoadWeights_U0_ap_start,
        ap_done => LoadWeights_U0_ap_done,
        ap_continue => LoadWeights_U0_ap_continue,
        ap_idle => LoadWeights_U0_ap_idle,
        ap_ready => LoadWeights_U0_ap_ready,
        wstrm_TDATA => wstrm_TDATA,
        wstrm_TVALID => wstrm_TVALID,
        wstrm_TREADY => LoadWeights_U0_wstrm_TREADY,
        wstrm_TKEEP => wstrm_TKEEP,
        wstrm_TSTRB => wstrm_TSTRB,
        wstrm_TUSER => wstrm_TUSER,
        wstrm_TLAST => wstrm_TLAST,
        wstrm_TID => wstrm_TID,
        wstrm_TDEST => wstrm_TDEST,
        depth1_address0 => LoadWeights_U0_depth1_address0,
        depth1_ce0 => LoadWeights_U0_depth1_ce0,
        depth1_we0 => LoadWeights_U0_depth1_we0,
        depth1_d0 => LoadWeights_U0_depth1_d0,
        point1_address0 => LoadWeights_U0_point1_address0,
        point1_ce0 => LoadWeights_U0_point1_ce0,
        point1_we0 => LoadWeights_U0_point1_we0,
        point1_d0 => LoadWeights_U0_point1_d0,
        depth2_address0 => LoadWeights_U0_depth2_address0,
        depth2_ce0 => LoadWeights_U0_depth2_ce0,
        depth2_we0 => LoadWeights_U0_depth2_we0,
        depth2_d0 => LoadWeights_U0_depth2_d0,
        point2_0_address0 => LoadWeights_U0_point2_0_address0,
        point2_0_ce0 => LoadWeights_U0_point2_0_ce0,
        point2_0_we0 => LoadWeights_U0_point2_0_we0,
        point2_0_d0 => LoadWeights_U0_point2_0_d0,
        point2_1_address0 => LoadWeights_U0_point2_1_address0,
        point2_1_ce0 => LoadWeights_U0_point2_1_ce0,
        point2_1_we0 => LoadWeights_U0_point2_1_we0,
        point2_1_d0 => LoadWeights_U0_point2_1_d0,
        point2_2_address0 => LoadWeights_U0_point2_2_address0,
        point2_2_ce0 => LoadWeights_U0_point2_2_ce0,
        point2_2_we0 => LoadWeights_U0_point2_2_we0,
        point2_2_d0 => LoadWeights_U0_point2_2_d0,
        point2_3_address0 => LoadWeights_U0_point2_3_address0,
        point2_3_ce0 => LoadWeights_U0_point2_3_ce0,
        point2_3_we0 => LoadWeights_U0_point2_3_we0,
        point2_3_d0 => LoadWeights_U0_point2_3_d0,
        point2_4_address0 => LoadWeights_U0_point2_4_address0,
        point2_4_ce0 => LoadWeights_U0_point2_4_ce0,
        point2_4_we0 => LoadWeights_U0_point2_4_we0,
        point2_4_d0 => LoadWeights_U0_point2_4_d0,
        point2_5_address0 => LoadWeights_U0_point2_5_address0,
        point2_5_ce0 => LoadWeights_U0_point2_5_ce0,
        point2_5_we0 => LoadWeights_U0_point2_5_we0,
        point2_5_d0 => LoadWeights_U0_point2_5_d0,
        point2_6_address0 => LoadWeights_U0_point2_6_address0,
        point2_6_ce0 => LoadWeights_U0_point2_6_ce0,
        point2_6_we0 => LoadWeights_U0_point2_6_we0,
        point2_6_d0 => LoadWeights_U0_point2_6_d0,
        point2_7_address0 => LoadWeights_U0_point2_7_address0,
        point2_7_ce0 => LoadWeights_U0_point2_7_ce0,
        point2_7_we0 => LoadWeights_U0_point2_7_we0,
        point2_7_d0 => LoadWeights_U0_point2_7_d0,
        point2_8_address0 => LoadWeights_U0_point2_8_address0,
        point2_8_ce0 => LoadWeights_U0_point2_8_ce0,
        point2_8_we0 => LoadWeights_U0_point2_8_we0,
        point2_8_d0 => LoadWeights_U0_point2_8_d0,
        point2_9_address0 => LoadWeights_U0_point2_9_address0,
        point2_9_ce0 => LoadWeights_U0_point2_9_ce0,
        point2_9_we0 => LoadWeights_U0_point2_9_we0,
        point2_9_d0 => LoadWeights_U0_point2_9_d0,
        point2_10_address0 => LoadWeights_U0_point2_10_address0,
        point2_10_ce0 => LoadWeights_U0_point2_10_ce0,
        point2_10_we0 => LoadWeights_U0_point2_10_we0,
        point2_10_d0 => LoadWeights_U0_point2_10_d0,
        point2_11_address0 => LoadWeights_U0_point2_11_address0,
        point2_11_ce0 => LoadWeights_U0_point2_11_ce0,
        point2_11_we0 => LoadWeights_U0_point2_11_we0,
        point2_11_d0 => LoadWeights_U0_point2_11_d0,
        point2_12_address0 => LoadWeights_U0_point2_12_address0,
        point2_12_ce0 => LoadWeights_U0_point2_12_ce0,
        point2_12_we0 => LoadWeights_U0_point2_12_we0,
        point2_12_d0 => LoadWeights_U0_point2_12_d0,
        depth3_0_address0 => LoadWeights_U0_depth3_0_address0,
        depth3_0_ce0 => LoadWeights_U0_depth3_0_ce0,
        depth3_0_we0 => LoadWeights_U0_depth3_0_we0,
        depth3_0_d0 => LoadWeights_U0_depth3_0_d0,
        depth3_1_address0 => LoadWeights_U0_depth3_1_address0,
        depth3_1_ce0 => LoadWeights_U0_depth3_1_ce0,
        depth3_1_we0 => LoadWeights_U0_depth3_1_we0,
        depth3_1_d0 => LoadWeights_U0_depth3_1_d0,
        depth3_2_address0 => LoadWeights_U0_depth3_2_address0,
        depth3_2_ce0 => LoadWeights_U0_depth3_2_ce0,
        depth3_2_we0 => LoadWeights_U0_depth3_2_we0,
        depth3_2_d0 => LoadWeights_U0_depth3_2_d0,
        depth3_3_address0 => LoadWeights_U0_depth3_3_address0,
        depth3_3_ce0 => LoadWeights_U0_depth3_3_ce0,
        depth3_3_we0 => LoadWeights_U0_depth3_3_we0,
        depth3_3_d0 => LoadWeights_U0_depth3_3_d0,
        depth3_4_address0 => LoadWeights_U0_depth3_4_address0,
        depth3_4_ce0 => LoadWeights_U0_depth3_4_ce0,
        depth3_4_we0 => LoadWeights_U0_depth3_4_we0,
        depth3_4_d0 => LoadWeights_U0_depth3_4_d0,
        depth3_5_address0 => LoadWeights_U0_depth3_5_address0,
        depth3_5_ce0 => LoadWeights_U0_depth3_5_ce0,
        depth3_5_we0 => LoadWeights_U0_depth3_5_we0,
        depth3_5_d0 => LoadWeights_U0_depth3_5_d0,
        depth3_6_address0 => LoadWeights_U0_depth3_6_address0,
        depth3_6_ce0 => LoadWeights_U0_depth3_6_ce0,
        depth3_6_we0 => LoadWeights_U0_depth3_6_we0,
        depth3_6_d0 => LoadWeights_U0_depth3_6_d0,
        depth3_7_address0 => LoadWeights_U0_depth3_7_address0,
        depth3_7_ce0 => LoadWeights_U0_depth3_7_ce0,
        depth3_7_we0 => LoadWeights_U0_depth3_7_we0,
        depth3_7_d0 => LoadWeights_U0_depth3_7_d0,
        point3_0_address0 => LoadWeights_U0_point3_0_address0,
        point3_0_ce0 => LoadWeights_U0_point3_0_ce0,
        point3_0_we0 => LoadWeights_U0_point3_0_we0,
        point3_0_d0 => LoadWeights_U0_point3_0_d0,
        point3_1_address0 => LoadWeights_U0_point3_1_address0,
        point3_1_ce0 => LoadWeights_U0_point3_1_ce0,
        point3_1_we0 => LoadWeights_U0_point3_1_we0,
        point3_1_d0 => LoadWeights_U0_point3_1_d0,
        point3_2_address0 => LoadWeights_U0_point3_2_address0,
        point3_2_ce0 => LoadWeights_U0_point3_2_ce0,
        point3_2_we0 => LoadWeights_U0_point3_2_we0,
        point3_2_d0 => LoadWeights_U0_point3_2_d0,
        point3_3_address0 => LoadWeights_U0_point3_3_address0,
        point3_3_ce0 => LoadWeights_U0_point3_3_ce0,
        point3_3_we0 => LoadWeights_U0_point3_3_we0,
        point3_3_d0 => LoadWeights_U0_point3_3_d0,
        point3_4_address0 => LoadWeights_U0_point3_4_address0,
        point3_4_ce0 => LoadWeights_U0_point3_4_ce0,
        point3_4_we0 => LoadWeights_U0_point3_4_we0,
        point3_4_d0 => LoadWeights_U0_point3_4_d0,
        point3_5_address0 => LoadWeights_U0_point3_5_address0,
        point3_5_ce0 => LoadWeights_U0_point3_5_ce0,
        point3_5_we0 => LoadWeights_U0_point3_5_we0,
        point3_5_d0 => LoadWeights_U0_point3_5_d0,
        point3_6_address0 => LoadWeights_U0_point3_6_address0,
        point3_6_ce0 => LoadWeights_U0_point3_6_ce0,
        point3_6_we0 => LoadWeights_U0_point3_6_we0,
        point3_6_d0 => LoadWeights_U0_point3_6_d0,
        point3_7_address0 => LoadWeights_U0_point3_7_address0,
        point3_7_ce0 => LoadWeights_U0_point3_7_ce0,
        point3_7_we0 => LoadWeights_U0_point3_7_we0,
        point3_7_d0 => LoadWeights_U0_point3_7_d0,
        point3_8_address0 => LoadWeights_U0_point3_8_address0,
        point3_8_ce0 => LoadWeights_U0_point3_8_ce0,
        point3_8_we0 => LoadWeights_U0_point3_8_we0,
        point3_8_d0 => LoadWeights_U0_point3_8_d0,
        point3_9_address0 => LoadWeights_U0_point3_9_address0,
        point3_9_ce0 => LoadWeights_U0_point3_9_ce0,
        point3_9_we0 => LoadWeights_U0_point3_9_we0,
        point3_9_d0 => LoadWeights_U0_point3_9_d0,
        point3_10_address0 => LoadWeights_U0_point3_10_address0,
        point3_10_ce0 => LoadWeights_U0_point3_10_ce0,
        point3_10_we0 => LoadWeights_U0_point3_10_we0,
        point3_10_d0 => LoadWeights_U0_point3_10_d0);

    LoadInput_U0 : component MNIST_LoadInput
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => LoadInput_U0_ap_start,
        ap_done => LoadInput_U0_ap_done,
        ap_continue => LoadInput_U0_ap_continue,
        ap_idle => LoadInput_U0_ap_idle,
        ap_ready => LoadInput_U0_ap_ready,
        istrm_TVALID => istrm_TVALID,
        input74_din => LoadInput_U0_input74_din,
        input74_num_data_valid => input_num_data_valid,
        input74_fifo_cap => input_fifo_cap,
        input74_full_n => input_full_n,
        input74_write => LoadInput_U0_input74_write,
        istrm_TDATA => istrm_TDATA,
        istrm_TREADY => LoadInput_U0_istrm_TREADY,
        istrm_TKEEP => istrm_TKEEP,
        istrm_TSTRB => istrm_TSTRB,
        istrm_TUSER => istrm_TUSER,
        istrm_TLAST => istrm_TLAST,
        istrm_TID => istrm_TID,
        istrm_TDEST => istrm_TDEST,
        ap_return_0 => LoadInput_U0_ap_return_0,
        ap_return_1 => LoadInput_U0_ap_return_1,
        ap_return_2 => LoadInput_U0_ap_return_2,
        ap_return_3 => LoadInput_U0_ap_return_3,
        ap_return_4 => LoadInput_U0_ap_return_4);

    DepthwiseConv2d_28_10_1_3_U0 : component MNIST_DepthwiseConv2d_28_10_1_3_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => DepthwiseConv2d_28_10_1_3_U0_ap_start,
        ap_done => DepthwiseConv2d_28_10_1_3_U0_ap_done,
        ap_continue => DepthwiseConv2d_28_10_1_3_U0_ap_continue,
        ap_idle => DepthwiseConv2d_28_10_1_3_U0_ap_idle,
        ap_ready => DepthwiseConv2d_28_10_1_3_U0_ap_ready,
        input74_dout => input_dout,
        input74_num_data_valid => input_num_data_valid,
        input74_fifo_cap => input_fifo_cap,
        input74_empty_n => input_empty_n,
        input74_read => DepthwiseConv2d_28_10_1_3_U0_input74_read,
        weights_address0 => DepthwiseConv2d_28_10_1_3_U0_weights_address0,
        weights_ce0 => DepthwiseConv2d_28_10_1_3_U0_weights_ce0,
        weights_q0 => depth1_w_t_q0,
        weights_address1 => DepthwiseConv2d_28_10_1_3_U0_weights_address1,
        weights_ce1 => DepthwiseConv2d_28_10_1_3_U0_weights_ce1,
        weights_q1 => depth1_w_t_q1,
        depth1_o75_din => DepthwiseConv2d_28_10_1_3_U0_depth1_o75_din,
        depth1_o75_num_data_valid => depth1_o_num_data_valid,
        depth1_o75_fifo_cap => depth1_o_fifo_cap,
        depth1_o75_full_n => depth1_o_full_n,
        depth1_o75_write => DepthwiseConv2d_28_10_1_3_U0_depth1_o75_write);

    PointwiseConv2d_10_1_4_U0 : component MNIST_PointwiseConv2d_10_1_4_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PointwiseConv2d_10_1_4_U0_ap_start,
        ap_done => PointwiseConv2d_10_1_4_U0_ap_done,
        ap_continue => PointwiseConv2d_10_1_4_U0_ap_continue,
        ap_idle => PointwiseConv2d_10_1_4_U0_ap_idle,
        ap_ready => PointwiseConv2d_10_1_4_U0_ap_ready,
        depth1_o75_dout => depth1_o_dout,
        depth1_o75_num_data_valid => depth1_o_num_data_valid,
        depth1_o75_fifo_cap => depth1_o_fifo_cap,
        depth1_o75_empty_n => depth1_o_empty_n,
        depth1_o75_read => PointwiseConv2d_10_1_4_U0_depth1_o75_read,
        weights_address0 => PointwiseConv2d_10_1_4_U0_weights_address0,
        weights_ce0 => PointwiseConv2d_10_1_4_U0_weights_ce0,
        weights_q0 => point1_w_t_q0,
        weights_address1 => PointwiseConv2d_10_1_4_U0_weights_address1,
        weights_ce1 => PointwiseConv2d_10_1_4_U0_weights_ce1,
        weights_q1 => point1_w_t_q1,
        point1_o76_din => PointwiseConv2d_10_1_4_U0_point1_o76_din,
        point1_o76_num_data_valid => point1_o_num_data_valid,
        point1_o76_fifo_cap => point1_o_fifo_cap,
        point1_o76_full_n => point1_o_full_n,
        point1_o76_write => PointwiseConv2d_10_1_4_U0_point1_o76_write);

    DepthwiseConv2d_10_4_4_3_U0 : component MNIST_DepthwiseConv2d_10_4_4_3_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => DepthwiseConv2d_10_4_4_3_U0_ap_start,
        ap_done => DepthwiseConv2d_10_4_4_3_U0_ap_done,
        ap_continue => DepthwiseConv2d_10_4_4_3_U0_ap_continue,
        ap_idle => DepthwiseConv2d_10_4_4_3_U0_ap_idle,
        ap_ready => DepthwiseConv2d_10_4_4_3_U0_ap_ready,
        point1_o76_dout => point1_o_dout,
        point1_o76_num_data_valid => point1_o_num_data_valid,
        point1_o76_fifo_cap => point1_o_fifo_cap,
        point1_o76_empty_n => point1_o_empty_n,
        point1_o76_read => DepthwiseConv2d_10_4_4_3_U0_point1_o76_read,
        weights_address0 => DepthwiseConv2d_10_4_4_3_U0_weights_address0,
        weights_ce0 => DepthwiseConv2d_10_4_4_3_U0_weights_ce0,
        weights_q0 => depth2_w_t_q0,
        weights_address1 => DepthwiseConv2d_10_4_4_3_U0_weights_address1,
        weights_ce1 => DepthwiseConv2d_10_4_4_3_U0_weights_ce1,
        weights_q1 => depth2_w_t_q1,
        depth2_o77_din => DepthwiseConv2d_10_4_4_3_U0_depth2_o77_din,
        depth2_o77_num_data_valid => depth2_o_num_data_valid,
        depth2_o77_fifo_cap => depth2_o_fifo_cap,
        depth2_o77_full_n => depth2_o_full_n,
        depth2_o77_write => DepthwiseConv2d_10_4_4_3_U0_depth2_o77_write);

    PointwiseConv2d_4_4_12_U0 : component MNIST_PointwiseConv2d_4_4_12_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PointwiseConv2d_4_4_12_U0_ap_start,
        ap_done => PointwiseConv2d_4_4_12_U0_ap_done,
        ap_continue => PointwiseConv2d_4_4_12_U0_ap_continue,
        ap_idle => PointwiseConv2d_4_4_12_U0_ap_idle,
        ap_ready => PointwiseConv2d_4_4_12_U0_ap_ready,
        depth2_o77_dout => depth2_o_dout,
        depth2_o77_num_data_valid => depth2_o_num_data_valid,
        depth2_o77_fifo_cap => depth2_o_fifo_cap,
        depth2_o77_empty_n => depth2_o_empty_n,
        depth2_o77_read => PointwiseConv2d_4_4_12_U0_depth2_o77_read,
        weights_0_address0 => PointwiseConv2d_4_4_12_U0_weights_0_address0,
        weights_0_ce0 => PointwiseConv2d_4_4_12_U0_weights_0_ce0,
        weights_0_q0 => point2_w_t_q0,
        weights_0_address1 => PointwiseConv2d_4_4_12_U0_weights_0_address1,
        weights_0_ce1 => PointwiseConv2d_4_4_12_U0_weights_0_ce1,
        weights_0_q1 => point2_w_t_q1,
        weights_1_address0 => PointwiseConv2d_4_4_12_U0_weights_1_address0,
        weights_1_ce0 => PointwiseConv2d_4_4_12_U0_weights_1_ce0,
        weights_1_q0 => point2_w_1_t_q0,
        weights_1_address1 => PointwiseConv2d_4_4_12_U0_weights_1_address1,
        weights_1_ce1 => PointwiseConv2d_4_4_12_U0_weights_1_ce1,
        weights_1_q1 => point2_w_1_t_q1,
        weights_2_address0 => PointwiseConv2d_4_4_12_U0_weights_2_address0,
        weights_2_ce0 => PointwiseConv2d_4_4_12_U0_weights_2_ce0,
        weights_2_q0 => point2_w_2_t_q0,
        weights_2_address1 => PointwiseConv2d_4_4_12_U0_weights_2_address1,
        weights_2_ce1 => PointwiseConv2d_4_4_12_U0_weights_2_ce1,
        weights_2_q1 => point2_w_2_t_q1,
        weights_3_address0 => PointwiseConv2d_4_4_12_U0_weights_3_address0,
        weights_3_ce0 => PointwiseConv2d_4_4_12_U0_weights_3_ce0,
        weights_3_q0 => point2_w_3_t_q0,
        weights_3_address1 => PointwiseConv2d_4_4_12_U0_weights_3_address1,
        weights_3_ce1 => PointwiseConv2d_4_4_12_U0_weights_3_ce1,
        weights_3_q1 => point2_w_3_t_q1,
        weights_4_address0 => PointwiseConv2d_4_4_12_U0_weights_4_address0,
        weights_4_ce0 => PointwiseConv2d_4_4_12_U0_weights_4_ce0,
        weights_4_q0 => point2_w_4_t_q0,
        weights_4_address1 => PointwiseConv2d_4_4_12_U0_weights_4_address1,
        weights_4_ce1 => PointwiseConv2d_4_4_12_U0_weights_4_ce1,
        weights_4_q1 => point2_w_4_t_q1,
        weights_5_address0 => PointwiseConv2d_4_4_12_U0_weights_5_address0,
        weights_5_ce0 => PointwiseConv2d_4_4_12_U0_weights_5_ce0,
        weights_5_q0 => point2_w_5_t_q0,
        weights_5_address1 => PointwiseConv2d_4_4_12_U0_weights_5_address1,
        weights_5_ce1 => PointwiseConv2d_4_4_12_U0_weights_5_ce1,
        weights_5_q1 => point2_w_5_t_q1,
        weights_6_address0 => PointwiseConv2d_4_4_12_U0_weights_6_address0,
        weights_6_ce0 => PointwiseConv2d_4_4_12_U0_weights_6_ce0,
        weights_6_q0 => point2_w_6_t_q0,
        weights_6_address1 => PointwiseConv2d_4_4_12_U0_weights_6_address1,
        weights_6_ce1 => PointwiseConv2d_4_4_12_U0_weights_6_ce1,
        weights_6_q1 => point2_w_6_t_q1,
        weights_7_address0 => PointwiseConv2d_4_4_12_U0_weights_7_address0,
        weights_7_ce0 => PointwiseConv2d_4_4_12_U0_weights_7_ce0,
        weights_7_q0 => point2_w_7_t_q0,
        weights_7_address1 => PointwiseConv2d_4_4_12_U0_weights_7_address1,
        weights_7_ce1 => PointwiseConv2d_4_4_12_U0_weights_7_ce1,
        weights_7_q1 => point2_w_7_t_q1,
        weights_8_address0 => PointwiseConv2d_4_4_12_U0_weights_8_address0,
        weights_8_ce0 => PointwiseConv2d_4_4_12_U0_weights_8_ce0,
        weights_8_q0 => point2_w_8_t_q0,
        weights_8_address1 => PointwiseConv2d_4_4_12_U0_weights_8_address1,
        weights_8_ce1 => PointwiseConv2d_4_4_12_U0_weights_8_ce1,
        weights_8_q1 => point2_w_8_t_q1,
        weights_9_address0 => PointwiseConv2d_4_4_12_U0_weights_9_address0,
        weights_9_ce0 => PointwiseConv2d_4_4_12_U0_weights_9_ce0,
        weights_9_q0 => point2_w_9_t_q0,
        weights_9_address1 => PointwiseConv2d_4_4_12_U0_weights_9_address1,
        weights_9_ce1 => PointwiseConv2d_4_4_12_U0_weights_9_ce1,
        weights_9_q1 => point2_w_9_t_q1,
        weights_10_address0 => PointwiseConv2d_4_4_12_U0_weights_10_address0,
        weights_10_ce0 => PointwiseConv2d_4_4_12_U0_weights_10_ce0,
        weights_10_q0 => point2_w_10_t_q0,
        weights_10_address1 => PointwiseConv2d_4_4_12_U0_weights_10_address1,
        weights_10_ce1 => PointwiseConv2d_4_4_12_U0_weights_10_ce1,
        weights_10_q1 => point2_w_10_t_q1,
        weights_11_address0 => PointwiseConv2d_4_4_12_U0_weights_11_address0,
        weights_11_ce0 => PointwiseConv2d_4_4_12_U0_weights_11_ce0,
        weights_11_q0 => point2_w_11_t_q0,
        weights_11_address1 => PointwiseConv2d_4_4_12_U0_weights_11_address1,
        weights_11_ce1 => PointwiseConv2d_4_4_12_U0_weights_11_ce1,
        weights_11_q1 => point2_w_11_t_q1,
        weights_12_address0 => PointwiseConv2d_4_4_12_U0_weights_12_address0,
        weights_12_ce0 => PointwiseConv2d_4_4_12_U0_weights_12_ce0,
        weights_12_q0 => point2_w_12_t_q0,
        weights_12_address1 => PointwiseConv2d_4_4_12_U0_weights_12_address1,
        weights_12_ce1 => PointwiseConv2d_4_4_12_U0_weights_12_ce1,
        weights_12_q1 => point2_w_12_t_q1,
        point2_o78_din => PointwiseConv2d_4_4_12_U0_point2_o78_din,
        point2_o78_num_data_valid => point2_o_num_data_valid,
        point2_o78_fifo_cap => point2_o_fifo_cap,
        point2_o78_full_n => point2_o_full_n,
        point2_o78_write => PointwiseConv2d_4_4_12_U0_point2_o78_write);

    DepthwiseConv2dFinal_4_1_12_4_U0 : component MNIST_DepthwiseConv2dFinal_4_1_12_4_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => DepthwiseConv2dFinal_4_1_12_4_U0_ap_start,
        ap_done => DepthwiseConv2dFinal_4_1_12_4_U0_ap_done,
        ap_continue => DepthwiseConv2dFinal_4_1_12_4_U0_ap_continue,
        ap_idle => DepthwiseConv2dFinal_4_1_12_4_U0_ap_idle,
        ap_ready => DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready,
        point2_o78_dout => point2_o_dout,
        point2_o78_num_data_valid => point2_o_num_data_valid,
        point2_o78_fifo_cap => point2_o_fifo_cap,
        point2_o78_empty_n => point2_o_empty_n,
        point2_o78_read => DepthwiseConv2dFinal_4_1_12_4_U0_point2_o78_read,
        weights_0_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address0,
        weights_0_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce0,
        weights_0_q0 => depth3_w_t_q0,
        weights_0_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address1,
        weights_0_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce1,
        weights_0_q1 => depth3_w_t_q1,
        weights_1_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address0,
        weights_1_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce0,
        weights_1_q0 => depth3_w_1_t_q0,
        weights_1_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address1,
        weights_1_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce1,
        weights_1_q1 => depth3_w_1_t_q1,
        weights_2_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address0,
        weights_2_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce0,
        weights_2_q0 => depth3_w_2_t_q0,
        weights_2_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address1,
        weights_2_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce1,
        weights_2_q1 => depth3_w_2_t_q1,
        weights_3_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address0,
        weights_3_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce0,
        weights_3_q0 => depth3_w_3_t_q0,
        weights_3_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address1,
        weights_3_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce1,
        weights_3_q1 => depth3_w_3_t_q1,
        weights_4_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address0,
        weights_4_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce0,
        weights_4_q0 => depth3_w_4_t_q0,
        weights_4_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address1,
        weights_4_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce1,
        weights_4_q1 => depth3_w_4_t_q1,
        weights_5_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address0,
        weights_5_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce0,
        weights_5_q0 => depth3_w_5_t_q0,
        weights_5_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address1,
        weights_5_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce1,
        weights_5_q1 => depth3_w_5_t_q1,
        weights_6_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address0,
        weights_6_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce0,
        weights_6_q0 => depth3_w_6_t_q0,
        weights_6_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address1,
        weights_6_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce1,
        weights_6_q1 => depth3_w_6_t_q1,
        weights_7_address0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address0,
        weights_7_ce0 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce0,
        weights_7_q0 => depth3_w_7_t_q0,
        weights_7_address1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address1,
        weights_7_ce1 => DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce1,
        weights_7_q1 => depth3_w_7_t_q1,
        depth3_o79_din => DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_din,
        depth3_o79_num_data_valid => depth3_o_num_data_valid,
        depth3_o79_fifo_cap => depth3_o_fifo_cap,
        depth3_o79_full_n => depth3_o_full_n,
        depth3_o79_write => DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_write);

    PointwiseConv2d_1_12_10_U0 : component MNIST_PointwiseConv2d_1_12_10_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PointwiseConv2d_1_12_10_U0_ap_start,
        ap_done => PointwiseConv2d_1_12_10_U0_ap_done,
        ap_continue => PointwiseConv2d_1_12_10_U0_ap_continue,
        ap_idle => PointwiseConv2d_1_12_10_U0_ap_idle,
        ap_ready => PointwiseConv2d_1_12_10_U0_ap_ready,
        depth3_o79_dout => depth3_o_dout,
        depth3_o79_num_data_valid => depth3_o_num_data_valid,
        depth3_o79_fifo_cap => depth3_o_fifo_cap,
        depth3_o79_empty_n => depth3_o_empty_n,
        depth3_o79_read => PointwiseConv2d_1_12_10_U0_depth3_o79_read,
        weights_0_address0 => PointwiseConv2d_1_12_10_U0_weights_0_address0,
        weights_0_ce0 => PointwiseConv2d_1_12_10_U0_weights_0_ce0,
        weights_0_q0 => point3_w_t_q0,
        weights_0_address1 => PointwiseConv2d_1_12_10_U0_weights_0_address1,
        weights_0_ce1 => PointwiseConv2d_1_12_10_U0_weights_0_ce1,
        weights_0_q1 => point3_w_t_q1,
        weights_1_address0 => PointwiseConv2d_1_12_10_U0_weights_1_address0,
        weights_1_ce0 => PointwiseConv2d_1_12_10_U0_weights_1_ce0,
        weights_1_q0 => point3_w_1_t_q0,
        weights_1_address1 => PointwiseConv2d_1_12_10_U0_weights_1_address1,
        weights_1_ce1 => PointwiseConv2d_1_12_10_U0_weights_1_ce1,
        weights_1_q1 => point3_w_1_t_q1,
        weights_2_address0 => PointwiseConv2d_1_12_10_U0_weights_2_address0,
        weights_2_ce0 => PointwiseConv2d_1_12_10_U0_weights_2_ce0,
        weights_2_q0 => point3_w_2_t_q0,
        weights_2_address1 => PointwiseConv2d_1_12_10_U0_weights_2_address1,
        weights_2_ce1 => PointwiseConv2d_1_12_10_U0_weights_2_ce1,
        weights_2_q1 => point3_w_2_t_q1,
        weights_3_address0 => PointwiseConv2d_1_12_10_U0_weights_3_address0,
        weights_3_ce0 => PointwiseConv2d_1_12_10_U0_weights_3_ce0,
        weights_3_q0 => point3_w_3_t_q0,
        weights_3_address1 => PointwiseConv2d_1_12_10_U0_weights_3_address1,
        weights_3_ce1 => PointwiseConv2d_1_12_10_U0_weights_3_ce1,
        weights_3_q1 => point3_w_3_t_q1,
        weights_4_address0 => PointwiseConv2d_1_12_10_U0_weights_4_address0,
        weights_4_ce0 => PointwiseConv2d_1_12_10_U0_weights_4_ce0,
        weights_4_q0 => point3_w_4_t_q0,
        weights_4_address1 => PointwiseConv2d_1_12_10_U0_weights_4_address1,
        weights_4_ce1 => PointwiseConv2d_1_12_10_U0_weights_4_ce1,
        weights_4_q1 => point3_w_4_t_q1,
        weights_5_address0 => PointwiseConv2d_1_12_10_U0_weights_5_address0,
        weights_5_ce0 => PointwiseConv2d_1_12_10_U0_weights_5_ce0,
        weights_5_q0 => point3_w_5_t_q0,
        weights_5_address1 => PointwiseConv2d_1_12_10_U0_weights_5_address1,
        weights_5_ce1 => PointwiseConv2d_1_12_10_U0_weights_5_ce1,
        weights_5_q1 => point3_w_5_t_q1,
        weights_6_address0 => PointwiseConv2d_1_12_10_U0_weights_6_address0,
        weights_6_ce0 => PointwiseConv2d_1_12_10_U0_weights_6_ce0,
        weights_6_q0 => point3_w_6_t_q0,
        weights_6_address1 => PointwiseConv2d_1_12_10_U0_weights_6_address1,
        weights_6_ce1 => PointwiseConv2d_1_12_10_U0_weights_6_ce1,
        weights_6_q1 => point3_w_6_t_q1,
        weights_7_address0 => PointwiseConv2d_1_12_10_U0_weights_7_address0,
        weights_7_ce0 => PointwiseConv2d_1_12_10_U0_weights_7_ce0,
        weights_7_q0 => point3_w_7_t_q0,
        weights_7_address1 => PointwiseConv2d_1_12_10_U0_weights_7_address1,
        weights_7_ce1 => PointwiseConv2d_1_12_10_U0_weights_7_ce1,
        weights_7_q1 => point3_w_7_t_q1,
        weights_8_address0 => PointwiseConv2d_1_12_10_U0_weights_8_address0,
        weights_8_ce0 => PointwiseConv2d_1_12_10_U0_weights_8_ce0,
        weights_8_q0 => point3_w_8_t_q0,
        weights_8_address1 => PointwiseConv2d_1_12_10_U0_weights_8_address1,
        weights_8_ce1 => PointwiseConv2d_1_12_10_U0_weights_8_ce1,
        weights_8_q1 => point3_w_8_t_q1,
        weights_9_address0 => PointwiseConv2d_1_12_10_U0_weights_9_address0,
        weights_9_ce0 => PointwiseConv2d_1_12_10_U0_weights_9_ce0,
        weights_9_q0 => point3_w_9_t_q0,
        weights_9_address1 => PointwiseConv2d_1_12_10_U0_weights_9_address1,
        weights_9_ce1 => PointwiseConv2d_1_12_10_U0_weights_9_ce1,
        weights_9_q1 => point3_w_9_t_q1,
        weights_10_address0 => PointwiseConv2d_1_12_10_U0_weights_10_address0,
        weights_10_ce0 => PointwiseConv2d_1_12_10_U0_weights_10_ce0,
        weights_10_q0 => point3_w_10_t_q0,
        weights_10_address1 => PointwiseConv2d_1_12_10_U0_weights_10_address1,
        weights_10_ce1 => PointwiseConv2d_1_12_10_U0_weights_10_ce1,
        weights_10_q1 => point3_w_10_t_q1,
        point3_o80_din => PointwiseConv2d_1_12_10_U0_point3_o80_din,
        point3_o80_num_data_valid => point3_o_num_data_valid,
        point3_o80_fifo_cap => point3_o_fifo_cap,
        point3_o80_full_n => point3_o_full_n,
        point3_o80_write => PointwiseConv2d_1_12_10_U0_point3_o80_write);

    Loop_VITIS_LOOP_226_1_proc6_U0 : component MNIST_Loop_VITIS_LOOP_226_1_proc6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_226_1_proc6_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_226_1_proc6_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_226_1_proc6_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_226_1_proc6_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready,
        point3_o_dout => point3_o_dout,
        point3_o_num_data_valid => point3_o_num_data_valid,
        point3_o_fifo_cap => point3_o_fifo_cap,
        point3_o_empty_n => point3_o_empty_n,
        point3_o_read => Loop_VITIS_LOOP_226_1_proc6_U0_point3_o_read,
        ostrm_TREADY => ostrm_TREADY,
        p_read => pix_keep_V_dout,
        p_read1 => pix_strb_V_dout,
        p_read2 => pix_user_V_dout,
        p_read3 => pix_id_V_dout,
        p_read4 => pix_dest_V_dout,
        ostrm_TDATA => Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDATA,
        ostrm_TVALID => Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TVALID,
        ostrm_TKEEP => Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TKEEP,
        ostrm_TSTRB => Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TSTRB,
        ostrm_TUSER => Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TUSER,
        ostrm_TLAST => Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TLAST,
        ostrm_TID => Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TID,
        ostrm_TDEST => Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDEST);

    input_U : component MNIST_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => LoadInput_U0_input74_din,
        if_full_n => input_full_n,
        if_write => LoadInput_U0_input74_write,
        if_dout => input_dout,
        if_num_data_valid => input_num_data_valid,
        if_fifo_cap => input_fifo_cap,
        if_empty_n => input_empty_n,
        if_read => DepthwiseConv2d_28_10_1_3_U0_input74_read);

    pix_keep_V_U : component MNIST_fifo_w4_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => LoadInput_U0_ap_return_0,
        if_full_n => pix_keep_V_full_n,
        if_write => ap_channel_done_pix_keep_V,
        if_dout => pix_keep_V_dout,
        if_num_data_valid => pix_keep_V_num_data_valid,
        if_fifo_cap => pix_keep_V_fifo_cap,
        if_empty_n => pix_keep_V_empty_n,
        if_read => Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready);

    pix_strb_V_U : component MNIST_fifo_w4_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => LoadInput_U0_ap_return_1,
        if_full_n => pix_strb_V_full_n,
        if_write => ap_channel_done_pix_strb_V,
        if_dout => pix_strb_V_dout,
        if_num_data_valid => pix_strb_V_num_data_valid,
        if_fifo_cap => pix_strb_V_fifo_cap,
        if_empty_n => pix_strb_V_empty_n,
        if_read => Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready);

    pix_user_V_U : component MNIST_fifo_w2_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => LoadInput_U0_ap_return_2,
        if_full_n => pix_user_V_full_n,
        if_write => ap_channel_done_pix_user_V,
        if_dout => pix_user_V_dout,
        if_num_data_valid => pix_user_V_num_data_valid,
        if_fifo_cap => pix_user_V_fifo_cap,
        if_empty_n => pix_user_V_empty_n,
        if_read => Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready);

    pix_id_V_U : component MNIST_fifo_w5_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => LoadInput_U0_ap_return_3,
        if_full_n => pix_id_V_full_n,
        if_write => ap_channel_done_pix_id_V,
        if_dout => pix_id_V_dout,
        if_num_data_valid => pix_id_V_num_data_valid,
        if_fifo_cap => pix_id_V_fifo_cap,
        if_empty_n => pix_id_V_empty_n,
        if_read => Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready);

    pix_dest_V_U : component MNIST_fifo_w6_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => LoadInput_U0_ap_return_4,
        if_full_n => pix_dest_V_full_n,
        if_write => ap_channel_done_pix_dest_V,
        if_dout => pix_dest_V_dout,
        if_num_data_valid => pix_dest_V_num_data_valid,
        if_fifo_cap => pix_dest_V_fifo_cap,
        if_empty_n => pix_dest_V_empty_n,
        if_read => Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready);

    depth1_o_U : component MNIST_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => DepthwiseConv2d_28_10_1_3_U0_depth1_o75_din,
        if_full_n => depth1_o_full_n,
        if_write => DepthwiseConv2d_28_10_1_3_U0_depth1_o75_write,
        if_dout => depth1_o_dout,
        if_num_data_valid => depth1_o_num_data_valid,
        if_fifo_cap => depth1_o_fifo_cap,
        if_empty_n => depth1_o_empty_n,
        if_read => PointwiseConv2d_10_1_4_U0_depth1_o75_read);

    point1_o_U : component MNIST_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PointwiseConv2d_10_1_4_U0_point1_o76_din,
        if_full_n => point1_o_full_n,
        if_write => PointwiseConv2d_10_1_4_U0_point1_o76_write,
        if_dout => point1_o_dout,
        if_num_data_valid => point1_o_num_data_valid,
        if_fifo_cap => point1_o_fifo_cap,
        if_empty_n => point1_o_empty_n,
        if_read => DepthwiseConv2d_10_4_4_3_U0_point1_o76_read);

    depth2_o_U : component MNIST_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => DepthwiseConv2d_10_4_4_3_U0_depth2_o77_din,
        if_full_n => depth2_o_full_n,
        if_write => DepthwiseConv2d_10_4_4_3_U0_depth2_o77_write,
        if_dout => depth2_o_dout,
        if_num_data_valid => depth2_o_num_data_valid,
        if_fifo_cap => depth2_o_fifo_cap,
        if_empty_n => depth2_o_empty_n,
        if_read => PointwiseConv2d_4_4_12_U0_depth2_o77_read);

    point2_o_U : component MNIST_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PointwiseConv2d_4_4_12_U0_point2_o78_din,
        if_full_n => point2_o_full_n,
        if_write => PointwiseConv2d_4_4_12_U0_point2_o78_write,
        if_dout => point2_o_dout,
        if_num_data_valid => point2_o_num_data_valid,
        if_fifo_cap => point2_o_fifo_cap,
        if_empty_n => point2_o_empty_n,
        if_read => DepthwiseConv2dFinal_4_1_12_4_U0_point2_o78_read);

    depth3_o_U : component MNIST_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_din,
        if_full_n => depth3_o_full_n,
        if_write => DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_write,
        if_dout => depth3_o_dout,
        if_num_data_valid => depth3_o_num_data_valid,
        if_fifo_cap => depth3_o_fifo_cap,
        if_empty_n => depth3_o_empty_n,
        if_read => PointwiseConv2d_1_12_10_U0_depth3_o79_read);

    point3_o_U : component MNIST_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PointwiseConv2d_1_12_10_U0_point3_o80_din,
        if_full_n => point3_o_full_n,
        if_write => PointwiseConv2d_1_12_10_U0_point3_o80_write,
        if_dout => point3_o_dout,
        if_num_data_valid => point3_o_num_data_valid,
        if_fifo_cap => point3_o_fifo_cap,
        if_empty_n => point3_o_empty_n,
        if_read => Loop_VITIS_LOOP_226_1_proc6_U0_point3_o_read);





    ap_sync_reg_LoadInput_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_LoadInput_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_LoadInput_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_LoadInput_U0_ap_ready <= ap_sync_LoadInput_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_LoadWeights_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_LoadWeights_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_LoadWeights_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_LoadWeights_U0_ap_ready <= ap_sync_LoadWeights_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_depth1_w_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_depth1_w <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_depth1_w <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_depth1_w <= ap_sync_channel_write_depth1_w;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_depth2_w_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_depth2_w <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_depth2_w <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_depth2_w <= ap_sync_channel_write_depth2_w;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_depth3_w_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_depth3_w <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_depth3_w <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_depth3_w <= ap_sync_channel_write_depth3_w;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_depth3_w_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_depth3_w_1 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_depth3_w_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_depth3_w_1 <= ap_sync_channel_write_depth3_w_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_depth3_w_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_depth3_w_2 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_depth3_w_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_depth3_w_2 <= ap_sync_channel_write_depth3_w_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_depth3_w_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_depth3_w_3 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_depth3_w_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_depth3_w_3 <= ap_sync_channel_write_depth3_w_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_depth3_w_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_depth3_w_4 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_depth3_w_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_depth3_w_4 <= ap_sync_channel_write_depth3_w_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_depth3_w_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_depth3_w_5 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_depth3_w_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_depth3_w_5 <= ap_sync_channel_write_depth3_w_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_depth3_w_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_depth3_w_6 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_depth3_w_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_depth3_w_6 <= ap_sync_channel_write_depth3_w_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_depth3_w_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_depth3_w_7 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_depth3_w_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_depth3_w_7 <= ap_sync_channel_write_depth3_w_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_pix_dest_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_pix_dest_V <= ap_const_logic_0;
            else
                if (((LoadInput_U0_ap_done and LoadInput_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_pix_dest_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_pix_dest_V <= ap_sync_channel_write_pix_dest_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_pix_id_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_pix_id_V <= ap_const_logic_0;
            else
                if (((LoadInput_U0_ap_done and LoadInput_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_pix_id_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_pix_id_V <= ap_sync_channel_write_pix_id_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_pix_keep_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_pix_keep_V <= ap_const_logic_0;
            else
                if (((LoadInput_U0_ap_done and LoadInput_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_pix_keep_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_pix_keep_V <= ap_sync_channel_write_pix_keep_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_pix_strb_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_pix_strb_V <= ap_const_logic_0;
            else
                if (((LoadInput_U0_ap_done and LoadInput_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_pix_strb_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_pix_strb_V <= ap_sync_channel_write_pix_strb_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_pix_user_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_pix_user_V <= ap_const_logic_0;
            else
                if (((LoadInput_U0_ap_done and LoadInput_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_pix_user_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_pix_user_V <= ap_sync_channel_write_pix_user_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point1_w_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point1_w <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point1_w <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point1_w <= ap_sync_channel_write_point1_w;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w <= ap_sync_channel_write_point2_w;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_1 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_1 <= ap_sync_channel_write_point2_w_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_10 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_10 <= ap_sync_channel_write_point2_w_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_11 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_11 <= ap_sync_channel_write_point2_w_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_12 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_12 <= ap_sync_channel_write_point2_w_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_2 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_2 <= ap_sync_channel_write_point2_w_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_3 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_3 <= ap_sync_channel_write_point2_w_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_4 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_4 <= ap_sync_channel_write_point2_w_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_5 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_5 <= ap_sync_channel_write_point2_w_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_6 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_6 <= ap_sync_channel_write_point2_w_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_7 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_7 <= ap_sync_channel_write_point2_w_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_8 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_8 <= ap_sync_channel_write_point2_w_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point2_w_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point2_w_9 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point2_w_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point2_w_9 <= ap_sync_channel_write_point2_w_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w <= ap_sync_channel_write_point3_w;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w_1 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w_1 <= ap_sync_channel_write_point3_w_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w_10 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w_10 <= ap_sync_channel_write_point3_w_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w_2 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w_2 <= ap_sync_channel_write_point3_w_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w_3 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w_3 <= ap_sync_channel_write_point3_w_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w_4 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w_4 <= ap_sync_channel_write_point3_w_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w_5 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w_5 <= ap_sync_channel_write_point3_w_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w_6 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w_6 <= ap_sync_channel_write_point3_w_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w_7 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w_7 <= ap_sync_channel_write_point3_w_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w_8 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w_8 <= ap_sync_channel_write_point3_w_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_point3_w_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_point3_w_9 <= ap_const_logic_0;
            else
                if (((LoadWeights_U0_ap_done and LoadWeights_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_point3_w_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_point3_w_9 <= ap_sync_channel_write_point3_w_9;
                end if; 
            end if;
        end if;
    end process;

    DepthwiseConv2dFinal_4_1_12_4_U0_ap_continue <= ap_const_logic_1;
    DepthwiseConv2dFinal_4_1_12_4_U0_ap_start <= (depth3_w_t_empty_n and depth3_w_7_t_empty_n and depth3_w_6_t_empty_n and depth3_w_5_t_empty_n and depth3_w_4_t_empty_n and depth3_w_3_t_empty_n and depth3_w_2_t_empty_n and depth3_w_1_t_empty_n);
    DepthwiseConv2d_10_4_4_3_U0_ap_continue <= ap_const_logic_1;
    DepthwiseConv2d_10_4_4_3_U0_ap_start <= depth2_w_t_empty_n;
    DepthwiseConv2d_28_10_1_3_U0_ap_continue <= ap_const_logic_1;
    DepthwiseConv2d_28_10_1_3_U0_ap_start <= depth1_w_t_empty_n;
    LoadInput_U0_ap_continue <= (ap_sync_channel_write_pix_user_V and ap_sync_channel_write_pix_strb_V and ap_sync_channel_write_pix_keep_V and ap_sync_channel_write_pix_id_V and ap_sync_channel_write_pix_dest_V);
    LoadInput_U0_ap_start <= ((ap_sync_reg_LoadInput_U0_ap_ready xor ap_const_logic_1) and ap_start);
    LoadWeights_U0_ap_continue <= (ap_sync_channel_write_point3_w_9 and ap_sync_channel_write_point3_w_8 and ap_sync_channel_write_point3_w_7 and ap_sync_channel_write_point3_w_6 and ap_sync_channel_write_point3_w_5 and ap_sync_channel_write_point3_w_4 and ap_sync_channel_write_point3_w_3 and ap_sync_channel_write_point3_w_2 and ap_sync_channel_write_point3_w_10 and ap_sync_channel_write_point3_w_1 and ap_sync_channel_write_point3_w and ap_sync_channel_write_point2_w_9 and ap_sync_channel_write_point2_w_8 and ap_sync_channel_write_point2_w_7 and ap_sync_channel_write_point2_w_6 and ap_sync_channel_write_point2_w_5 and ap_sync_channel_write_point2_w_4 and ap_sync_channel_write_point2_w_3 and ap_sync_channel_write_point2_w_2 and ap_sync_channel_write_point2_w_12 and ap_sync_channel_write_point2_w_11 and ap_sync_channel_write_point2_w_10 and ap_sync_channel_write_point2_w_1 and ap_sync_channel_write_point2_w and ap_sync_channel_write_point1_w and ap_sync_channel_write_depth3_w_7 and ap_sync_channel_write_depth3_w_6 and ap_sync_channel_write_depth3_w_5 and ap_sync_channel_write_depth3_w_4 and ap_sync_channel_write_depth3_w_3 and ap_sync_channel_write_depth3_w_2 and ap_sync_channel_write_depth3_w_1 and ap_sync_channel_write_depth3_w and ap_sync_channel_write_depth2_w and ap_sync_channel_write_depth1_w);
    LoadWeights_U0_ap_start <= ((ap_sync_reg_LoadWeights_U0_ap_ready xor ap_const_logic_1) and ap_start);
    LoadWeights_U0_depth1_full_n <= depth1_w_i_full_n;
    LoadWeights_U0_depth2_full_n <= depth2_w_i_full_n;
    LoadWeights_U0_depth3_0_full_n <= depth3_w_i_full_n;
    LoadWeights_U0_depth3_1_full_n <= depth3_w_1_i_full_n;
    LoadWeights_U0_depth3_2_full_n <= depth3_w_2_i_full_n;
    LoadWeights_U0_depth3_3_full_n <= depth3_w_3_i_full_n;
    LoadWeights_U0_depth3_4_full_n <= depth3_w_4_i_full_n;
    LoadWeights_U0_depth3_5_full_n <= depth3_w_5_i_full_n;
    LoadWeights_U0_depth3_6_full_n <= depth3_w_6_i_full_n;
    LoadWeights_U0_depth3_7_full_n <= depth3_w_7_i_full_n;
    LoadWeights_U0_point1_full_n <= point1_w_i_full_n;
    LoadWeights_U0_point2_0_full_n <= point2_w_i_full_n;
    LoadWeights_U0_point2_10_full_n <= point2_w_10_i_full_n;
    LoadWeights_U0_point2_11_full_n <= point2_w_11_i_full_n;
    LoadWeights_U0_point2_12_full_n <= point2_w_12_i_full_n;
    LoadWeights_U0_point2_1_full_n <= point2_w_1_i_full_n;
    LoadWeights_U0_point2_2_full_n <= point2_w_2_i_full_n;
    LoadWeights_U0_point2_3_full_n <= point2_w_3_i_full_n;
    LoadWeights_U0_point2_4_full_n <= point2_w_4_i_full_n;
    LoadWeights_U0_point2_5_full_n <= point2_w_5_i_full_n;
    LoadWeights_U0_point2_6_full_n <= point2_w_6_i_full_n;
    LoadWeights_U0_point2_7_full_n <= point2_w_7_i_full_n;
    LoadWeights_U0_point2_8_full_n <= point2_w_8_i_full_n;
    LoadWeights_U0_point2_9_full_n <= point2_w_9_i_full_n;
    LoadWeights_U0_point3_0_full_n <= point3_w_i_full_n;
    LoadWeights_U0_point3_10_full_n <= point3_w_10_i_full_n;
    LoadWeights_U0_point3_1_full_n <= point3_w_1_i_full_n;
    LoadWeights_U0_point3_2_full_n <= point3_w_2_i_full_n;
    LoadWeights_U0_point3_3_full_n <= point3_w_3_i_full_n;
    LoadWeights_U0_point3_4_full_n <= point3_w_4_i_full_n;
    LoadWeights_U0_point3_5_full_n <= point3_w_5_i_full_n;
    LoadWeights_U0_point3_6_full_n <= point3_w_6_i_full_n;
    LoadWeights_U0_point3_7_full_n <= point3_w_7_i_full_n;
    LoadWeights_U0_point3_8_full_n <= point3_w_8_i_full_n;
    LoadWeights_U0_point3_9_full_n <= point3_w_9_i_full_n;
    Loop_VITIS_LOOP_226_1_proc6_U0_ap_continue <= ap_const_logic_1;
    Loop_VITIS_LOOP_226_1_proc6_U0_ap_start <= (pix_user_V_empty_n and pix_strb_V_empty_n and pix_keep_V_empty_n and pix_id_V_empty_n and pix_dest_V_empty_n);
    PointwiseConv2d_10_1_4_U0_ap_continue <= ap_const_logic_1;
    PointwiseConv2d_10_1_4_U0_ap_start <= point1_w_t_empty_n;
    PointwiseConv2d_1_12_10_U0_ap_continue <= ap_const_logic_1;
    PointwiseConv2d_1_12_10_U0_ap_start <= (point3_w_t_empty_n and point3_w_9_t_empty_n and point3_w_8_t_empty_n and point3_w_7_t_empty_n and point3_w_6_t_empty_n and point3_w_5_t_empty_n and point3_w_4_t_empty_n and point3_w_3_t_empty_n and point3_w_2_t_empty_n and point3_w_1_t_empty_n and point3_w_10_t_empty_n);
    PointwiseConv2d_4_4_12_U0_ap_continue <= ap_const_logic_1;
    PointwiseConv2d_4_4_12_U0_ap_start <= (point2_w_t_empty_n and point2_w_9_t_empty_n and point2_w_8_t_empty_n and point2_w_7_t_empty_n and point2_w_6_t_empty_n and point2_w_5_t_empty_n and point2_w_4_t_empty_n and point2_w_3_t_empty_n and point2_w_2_t_empty_n and point2_w_1_t_empty_n and point2_w_12_t_empty_n and point2_w_11_t_empty_n and point2_w_10_t_empty_n);
    ap_channel_done_depth1_w <= ((ap_sync_reg_channel_write_depth1_w xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_depth2_w <= ((ap_sync_reg_channel_write_depth2_w xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_depth3_w <= ((ap_sync_reg_channel_write_depth3_w xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_depth3_w_1 <= ((ap_sync_reg_channel_write_depth3_w_1 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_depth3_w_2 <= ((ap_sync_reg_channel_write_depth3_w_2 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_depth3_w_3 <= ((ap_sync_reg_channel_write_depth3_w_3 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_depth3_w_4 <= ((ap_sync_reg_channel_write_depth3_w_4 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_depth3_w_5 <= ((ap_sync_reg_channel_write_depth3_w_5 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_depth3_w_6 <= ((ap_sync_reg_channel_write_depth3_w_6 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_depth3_w_7 <= ((ap_sync_reg_channel_write_depth3_w_7 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_pix_dest_V <= ((ap_sync_reg_channel_write_pix_dest_V xor ap_const_logic_1) and LoadInput_U0_ap_done);
    ap_channel_done_pix_id_V <= ((ap_sync_reg_channel_write_pix_id_V xor ap_const_logic_1) and LoadInput_U0_ap_done);
    ap_channel_done_pix_keep_V <= ((ap_sync_reg_channel_write_pix_keep_V xor ap_const_logic_1) and LoadInput_U0_ap_done);
    ap_channel_done_pix_strb_V <= ((ap_sync_reg_channel_write_pix_strb_V xor ap_const_logic_1) and LoadInput_U0_ap_done);
    ap_channel_done_pix_user_V <= ((ap_sync_reg_channel_write_pix_user_V xor ap_const_logic_1) and LoadInput_U0_ap_done);
    ap_channel_done_point1_w <= ((ap_sync_reg_channel_write_point1_w xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w <= ((ap_sync_reg_channel_write_point2_w xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_1 <= ((ap_sync_reg_channel_write_point2_w_1 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_10 <= ((ap_sync_reg_channel_write_point2_w_10 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_11 <= ((ap_sync_reg_channel_write_point2_w_11 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_12 <= ((ap_sync_reg_channel_write_point2_w_12 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_2 <= ((ap_sync_reg_channel_write_point2_w_2 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_3 <= ((ap_sync_reg_channel_write_point2_w_3 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_4 <= ((ap_sync_reg_channel_write_point2_w_4 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_5 <= ((ap_sync_reg_channel_write_point2_w_5 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_6 <= ((ap_sync_reg_channel_write_point2_w_6 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_7 <= ((ap_sync_reg_channel_write_point2_w_7 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_8 <= ((ap_sync_reg_channel_write_point2_w_8 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point2_w_9 <= ((ap_sync_reg_channel_write_point2_w_9 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w <= ((ap_sync_reg_channel_write_point3_w xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w_1 <= ((ap_sync_reg_channel_write_point3_w_1 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w_10 <= ((ap_sync_reg_channel_write_point3_w_10 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w_2 <= ((ap_sync_reg_channel_write_point3_w_2 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w_3 <= ((ap_sync_reg_channel_write_point3_w_3 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w_4 <= ((ap_sync_reg_channel_write_point3_w_4 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w_5 <= ((ap_sync_reg_channel_write_point3_w_5 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w_6 <= ((ap_sync_reg_channel_write_point3_w_6 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w_7 <= ((ap_sync_reg_channel_write_point3_w_7 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w_8 <= ((ap_sync_reg_channel_write_point3_w_8 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_channel_done_point3_w_9 <= ((ap_sync_reg_channel_write_point3_w_9 xor ap_const_logic_1) and LoadWeights_U0_ap_done);
    ap_done <= Loop_VITIS_LOOP_226_1_proc6_U0_ap_done;
    ap_idle <= ((pix_dest_V_empty_n xor ap_const_logic_1) and (pix_id_V_empty_n xor ap_const_logic_1) and (pix_user_V_empty_n xor ap_const_logic_1) and (pix_strb_V_empty_n xor ap_const_logic_1) and (pix_keep_V_empty_n xor ap_const_logic_1) and (point3_w_10_t_empty_n xor ap_const_logic_1) and (point3_w_9_t_empty_n xor ap_const_logic_1) and (point3_w_8_t_empty_n xor ap_const_logic_1) and (point3_w_7_t_empty_n xor ap_const_logic_1) and (point3_w_6_t_empty_n xor ap_const_logic_1) and (point3_w_5_t_empty_n xor ap_const_logic_1) and (point3_w_4_t_empty_n xor ap_const_logic_1) and (point3_w_3_t_empty_n xor ap_const_logic_1) and (point3_w_2_t_empty_n xor ap_const_logic_1) and (point3_w_1_t_empty_n xor ap_const_logic_1) and (point3_w_t_empty_n xor ap_const_logic_1) and (depth3_w_7_t_empty_n xor ap_const_logic_1) and (depth3_w_6_t_empty_n xor ap_const_logic_1) and (depth3_w_5_t_empty_n xor ap_const_logic_1) and (depth3_w_4_t_empty_n xor ap_const_logic_1) and (depth3_w_3_t_empty_n xor ap_const_logic_1) and (depth3_w_2_t_empty_n xor ap_const_logic_1) and (depth3_w_1_t_empty_n xor ap_const_logic_1) and (depth3_w_t_empty_n xor ap_const_logic_1) and (point2_w_12_t_empty_n xor ap_const_logic_1) and (point2_w_11_t_empty_n xor ap_const_logic_1) and (point2_w_10_t_empty_n xor ap_const_logic_1) and (point2_w_9_t_empty_n xor ap_const_logic_1) and (point2_w_8_t_empty_n xor ap_const_logic_1) and (point2_w_7_t_empty_n xor ap_const_logic_1) and (point2_w_6_t_empty_n xor ap_const_logic_1) and (point2_w_5_t_empty_n xor ap_const_logic_1) and (point2_w_4_t_empty_n xor ap_const_logic_1) and (point2_w_3_t_empty_n xor ap_const_logic_1) and (point2_w_2_t_empty_n xor ap_const_logic_1) and (point2_w_1_t_empty_n xor ap_const_logic_1) and (point2_w_t_empty_n xor ap_const_logic_1) and (depth2_w_t_empty_n xor ap_const_logic_1) and (point1_w_t_empty_n xor ap_const_logic_1) and (depth1_w_t_empty_n xor ap_const_logic_1) and PointwiseConv2d_4_4_12_U0_ap_idle and PointwiseConv2d_1_12_10_U0_ap_idle and PointwiseConv2d_10_1_4_U0_ap_idle and Loop_VITIS_LOOP_226_1_proc6_U0_ap_idle and LoadWeights_U0_ap_idle and LoadInput_U0_ap_idle and DepthwiseConv2d_28_10_1_3_U0_ap_idle and DepthwiseConv2d_10_4_4_3_U0_ap_idle and DepthwiseConv2dFinal_4_1_12_4_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_LoadInput_U0_ap_ready <= (ap_sync_reg_LoadInput_U0_ap_ready or LoadInput_U0_ap_ready);
    ap_sync_LoadWeights_U0_ap_ready <= (ap_sync_reg_LoadWeights_U0_ap_ready or LoadWeights_U0_ap_ready);
    ap_sync_channel_write_depth1_w <= ((ap_channel_done_depth1_w and LoadWeights_U0_depth1_full_n) or ap_sync_reg_channel_write_depth1_w);
    ap_sync_channel_write_depth2_w <= ((ap_channel_done_depth2_w and LoadWeights_U0_depth2_full_n) or ap_sync_reg_channel_write_depth2_w);
    ap_sync_channel_write_depth3_w <= ((ap_channel_done_depth3_w and LoadWeights_U0_depth3_0_full_n) or ap_sync_reg_channel_write_depth3_w);
    ap_sync_channel_write_depth3_w_1 <= ((ap_channel_done_depth3_w_1 and LoadWeights_U0_depth3_1_full_n) or ap_sync_reg_channel_write_depth3_w_1);
    ap_sync_channel_write_depth3_w_2 <= ((ap_channel_done_depth3_w_2 and LoadWeights_U0_depth3_2_full_n) or ap_sync_reg_channel_write_depth3_w_2);
    ap_sync_channel_write_depth3_w_3 <= ((ap_channel_done_depth3_w_3 and LoadWeights_U0_depth3_3_full_n) or ap_sync_reg_channel_write_depth3_w_3);
    ap_sync_channel_write_depth3_w_4 <= ((ap_channel_done_depth3_w_4 and LoadWeights_U0_depth3_4_full_n) or ap_sync_reg_channel_write_depth3_w_4);
    ap_sync_channel_write_depth3_w_5 <= ((ap_channel_done_depth3_w_5 and LoadWeights_U0_depth3_5_full_n) or ap_sync_reg_channel_write_depth3_w_5);
    ap_sync_channel_write_depth3_w_6 <= ((ap_channel_done_depth3_w_6 and LoadWeights_U0_depth3_6_full_n) or ap_sync_reg_channel_write_depth3_w_6);
    ap_sync_channel_write_depth3_w_7 <= ((ap_channel_done_depth3_w_7 and LoadWeights_U0_depth3_7_full_n) or ap_sync_reg_channel_write_depth3_w_7);
    ap_sync_channel_write_pix_dest_V <= ((pix_dest_V_full_n and ap_channel_done_pix_dest_V) or ap_sync_reg_channel_write_pix_dest_V);
    ap_sync_channel_write_pix_id_V <= ((pix_id_V_full_n and ap_channel_done_pix_id_V) or ap_sync_reg_channel_write_pix_id_V);
    ap_sync_channel_write_pix_keep_V <= ((pix_keep_V_full_n and ap_channel_done_pix_keep_V) or ap_sync_reg_channel_write_pix_keep_V);
    ap_sync_channel_write_pix_strb_V <= ((pix_strb_V_full_n and ap_channel_done_pix_strb_V) or ap_sync_reg_channel_write_pix_strb_V);
    ap_sync_channel_write_pix_user_V <= ((pix_user_V_full_n and ap_channel_done_pix_user_V) or ap_sync_reg_channel_write_pix_user_V);
    ap_sync_channel_write_point1_w <= ((ap_channel_done_point1_w and LoadWeights_U0_point1_full_n) or ap_sync_reg_channel_write_point1_w);
    ap_sync_channel_write_point2_w <= ((ap_channel_done_point2_w and LoadWeights_U0_point2_0_full_n) or ap_sync_reg_channel_write_point2_w);
    ap_sync_channel_write_point2_w_1 <= ((ap_channel_done_point2_w_1 and LoadWeights_U0_point2_1_full_n) or ap_sync_reg_channel_write_point2_w_1);
    ap_sync_channel_write_point2_w_10 <= ((ap_channel_done_point2_w_10 and LoadWeights_U0_point2_10_full_n) or ap_sync_reg_channel_write_point2_w_10);
    ap_sync_channel_write_point2_w_11 <= ((ap_channel_done_point2_w_11 and LoadWeights_U0_point2_11_full_n) or ap_sync_reg_channel_write_point2_w_11);
    ap_sync_channel_write_point2_w_12 <= ((ap_channel_done_point2_w_12 and LoadWeights_U0_point2_12_full_n) or ap_sync_reg_channel_write_point2_w_12);
    ap_sync_channel_write_point2_w_2 <= ((ap_channel_done_point2_w_2 and LoadWeights_U0_point2_2_full_n) or ap_sync_reg_channel_write_point2_w_2);
    ap_sync_channel_write_point2_w_3 <= ((ap_channel_done_point2_w_3 and LoadWeights_U0_point2_3_full_n) or ap_sync_reg_channel_write_point2_w_3);
    ap_sync_channel_write_point2_w_4 <= ((ap_channel_done_point2_w_4 and LoadWeights_U0_point2_4_full_n) or ap_sync_reg_channel_write_point2_w_4);
    ap_sync_channel_write_point2_w_5 <= ((ap_channel_done_point2_w_5 and LoadWeights_U0_point2_5_full_n) or ap_sync_reg_channel_write_point2_w_5);
    ap_sync_channel_write_point2_w_6 <= ((ap_channel_done_point2_w_6 and LoadWeights_U0_point2_6_full_n) or ap_sync_reg_channel_write_point2_w_6);
    ap_sync_channel_write_point2_w_7 <= ((ap_channel_done_point2_w_7 and LoadWeights_U0_point2_7_full_n) or ap_sync_reg_channel_write_point2_w_7);
    ap_sync_channel_write_point2_w_8 <= ((ap_channel_done_point2_w_8 and LoadWeights_U0_point2_8_full_n) or ap_sync_reg_channel_write_point2_w_8);
    ap_sync_channel_write_point2_w_9 <= ((ap_channel_done_point2_w_9 and LoadWeights_U0_point2_9_full_n) or ap_sync_reg_channel_write_point2_w_9);
    ap_sync_channel_write_point3_w <= ((ap_channel_done_point3_w and LoadWeights_U0_point3_0_full_n) or ap_sync_reg_channel_write_point3_w);
    ap_sync_channel_write_point3_w_1 <= ((ap_channel_done_point3_w_1 and LoadWeights_U0_point3_1_full_n) or ap_sync_reg_channel_write_point3_w_1);
    ap_sync_channel_write_point3_w_10 <= ((ap_channel_done_point3_w_10 and LoadWeights_U0_point3_10_full_n) or ap_sync_reg_channel_write_point3_w_10);
    ap_sync_channel_write_point3_w_2 <= ((ap_channel_done_point3_w_2 and LoadWeights_U0_point3_2_full_n) or ap_sync_reg_channel_write_point3_w_2);
    ap_sync_channel_write_point3_w_3 <= ((ap_channel_done_point3_w_3 and LoadWeights_U0_point3_3_full_n) or ap_sync_reg_channel_write_point3_w_3);
    ap_sync_channel_write_point3_w_4 <= ((ap_channel_done_point3_w_4 and LoadWeights_U0_point3_4_full_n) or ap_sync_reg_channel_write_point3_w_4);
    ap_sync_channel_write_point3_w_5 <= ((ap_channel_done_point3_w_5 and LoadWeights_U0_point3_5_full_n) or ap_sync_reg_channel_write_point3_w_5);
    ap_sync_channel_write_point3_w_6 <= ((ap_channel_done_point3_w_6 and LoadWeights_U0_point3_6_full_n) or ap_sync_reg_channel_write_point3_w_6);
    ap_sync_channel_write_point3_w_7 <= ((ap_channel_done_point3_w_7 and LoadWeights_U0_point3_7_full_n) or ap_sync_reg_channel_write_point3_w_7);
    ap_sync_channel_write_point3_w_8 <= ((ap_channel_done_point3_w_8 and LoadWeights_U0_point3_8_full_n) or ap_sync_reg_channel_write_point3_w_8);
    ap_sync_channel_write_point3_w_9 <= ((ap_channel_done_point3_w_9 and LoadWeights_U0_point3_9_full_n) or ap_sync_reg_channel_write_point3_w_9);
    ap_sync_ready <= (ap_sync_LoadWeights_U0_ap_ready and ap_sync_LoadInput_U0_ap_ready);
    istrm_TREADY <= LoadInput_U0_istrm_TREADY;
    ostrm_TDATA <= Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDATA;
    ostrm_TDEST <= Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDEST;
    ostrm_TID <= Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TID;
    ostrm_TKEEP <= Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TKEEP;
    ostrm_TLAST <= Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TLAST;
    ostrm_TSTRB <= Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TSTRB;
    ostrm_TUSER <= Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TUSER;
    ostrm_TVALID <= Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TVALID;
    wstrm_TREADY <= LoadWeights_U0_wstrm_TREADY;
end behav;
