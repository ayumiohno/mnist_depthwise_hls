-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MNIST_DepthwiseConv2d_28_10_1_3_Pipeline_px is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input74_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input74_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    input74_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    input74_empty_n : IN STD_LOGIC;
    input74_read : OUT STD_LOGIC;
    depth1_o75_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    depth1_o75_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    depth1_o75_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    depth1_o75_full_n : IN STD_LOGIC;
    depth1_o75_write : OUT STD_LOGIC;
    weights_load : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_load_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_load_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_load_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_load_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_load_8 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_load_9 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_load_10 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_load_11 : IN STD_LOGIC_VECTOR (31 downto 0);
    cmp164 : IN STD_LOGIC_VECTOR (0 downto 0);
    line_buf_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    line_buf_ce0 : OUT STD_LOGIC;
    line_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    line_buf_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    line_buf_1_ce0 : OUT STD_LOGIC;
    line_buf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MNIST_DepthwiseConv2d_28_10_1_3_Pipeline_px is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal icmp_ln75_reg_448 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op102_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state30_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state33_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_state36_pp0_stage2_iter11 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter12 : BOOLEAN;
    signal ap_block_state42_pp0_stage2_iter13 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal depth1_o75_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal input74_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal or_ln85_reg_468 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_ln86_reg_472 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp164_read_read_fu_82_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op113_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln75_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_149_fu_313_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_149_reg_452 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln85_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buf_load_reg_476 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op90_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state41_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal line_buf_1_load_reg_486 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_365_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_buf_load_1_reg_501 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal line_buf_1_load_1_reg_511 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_buf_load_2_reg_526 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_buf_1_load_2_reg_531 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_384_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_541 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_reg_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_reg_546_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_reg_546_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_reg_546_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_reg_546_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_270_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_reg_551_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_reg_551_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_reg_551_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_reg_551_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_reg_551_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_reg_551_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_reg_551_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_reg_551_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_s_reg_556 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_s_reg_556_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_1_reg_561 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_1_reg_561_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_1_reg_561_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_1_reg_561_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_1_reg_561_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_1_reg_561_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_1_reg_566 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_1_reg_566_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_1_reg_566_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_1_reg_566_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_1_reg_566_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_1_reg_566_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_1_reg_566_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_1_reg_566_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_1_reg_566_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_1_reg_566_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_3_reg_571 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_3_reg_571_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_3_reg_571_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_2_reg_576 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_2_reg_576_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_2_reg_576_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_2_reg_576_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_2_reg_576_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_2_reg_576_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_1_2_reg_576_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul213_2_2_reg_581_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_reg_586 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_16_reg_591 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_17_reg_596 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_18_reg_601 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_19_reg_606 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_20_reg_611 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_258_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_21_reg_616 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_22_reg_621 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_23_reg_626 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_phi_reg_pp0_iter0_empty_147_reg_213 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_146_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_146_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_145_reg_237 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_145_reg_237 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln82_fu_319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln82_1_fu_359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln82_2_fu_374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal px_fu_78 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln75_fu_291_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_px_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal grp_fu_249_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_249_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_254_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_254_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_258_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_258_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_262_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_266_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_270_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_148_fu_301_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_fu_305_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln75_fu_297_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal cmp158_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp160_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_150_fu_354_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_151_fu_369_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_249_ce : STD_LOGIC;
    signal grp_fu_254_ce : STD_LOGIC;
    signal grp_fu_258_ce : STD_LOGIC;
    signal grp_fu_262_ce : STD_LOGIC;
    signal grp_fu_266_ce : STD_LOGIC;
    signal grp_fu_270_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to13 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_379 : BOOLEAN;
    signal ap_condition_778 : BOOLEAN;
    signal ap_condition_384 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component MNIST_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fadd_32ns_32ns_32_4_full_dsp_1_U142 : component MNIST_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_249_p0,
        din1 => grp_fu_249_p1,
        ce => grp_fu_249_ce,
        dout => grp_fu_249_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U143 : component MNIST_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_254_p0,
        din1 => grp_fu_254_p1,
        ce => grp_fu_254_ce,
        dout => grp_fu_254_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U144 : component MNIST_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_258_p0,
        din1 => grp_fu_258_p1,
        ce => grp_fu_258_ce,
        dout => grp_fu_258_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U145 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_262_p0,
        din1 => grp_fu_262_p1,
        ce => grp_fu_262_ce,
        dout => grp_fu_262_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U146 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_266_p0,
        din1 => grp_fu_266_p1,
        ce => grp_fu_266_ce,
        dout => grp_fu_266_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U147 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_270_p0,
        din1 => grp_fu_270_p1,
        ce => grp_fu_270_ce,
        dout => grp_fu_270_p2);

    flow_control_loop_pipe_sequential_init_U : component MNIST_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_empty_147_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_778)) then 
                    ap_phi_reg_pp0_iter0_empty_147_reg_213 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_379)) then 
                    ap_phi_reg_pp0_iter0_empty_147_reg_213 <= tmp_fu_365_p1;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_145_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln75_reg_448 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_ln86_reg_472 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_empty_145_reg_237 <= tmp_41_fu_384_p1;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                ap_phi_reg_pp0_iter1_empty_145_reg_237 <= ap_phi_reg_pp0_iter0_empty_145_reg_237;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_146_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_384)) then
                if (((cmp164 = ap_const_lv1_0) and (icmp_ln75_reg_448 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_146_reg_225 <= tmp_40_fu_380_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_empty_146_reg_225 <= ap_phi_reg_pp0_iter0_empty_146_reg_225;
                end if;
            end if; 
        end if;
    end process;

    px_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln75_fu_285_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    px_fu_78 <= add_ln75_fu_291_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    px_fu_78 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                mul213_1_1_reg_561_pp0_iter2_reg <= mul213_1_1_reg_561;
                mul213_1_1_reg_561_pp0_iter3_reg <= mul213_1_1_reg_561_pp0_iter2_reg;
                mul213_1_1_reg_561_pp0_iter4_reg <= mul213_1_1_reg_561_pp0_iter3_reg;
                mul213_1_1_reg_561_pp0_iter5_reg <= mul213_1_1_reg_561_pp0_iter4_reg;
                mul213_1_1_reg_561_pp0_iter6_reg <= mul213_1_1_reg_561_pp0_iter5_reg;
                mul213_2_1_reg_566_pp0_iter10_reg <= mul213_2_1_reg_566_pp0_iter9_reg;
                mul213_2_1_reg_566_pp0_iter2_reg <= mul213_2_1_reg_566;
                mul213_2_1_reg_566_pp0_iter3_reg <= mul213_2_1_reg_566_pp0_iter2_reg;
                mul213_2_1_reg_566_pp0_iter4_reg <= mul213_2_1_reg_566_pp0_iter3_reg;
                mul213_2_1_reg_566_pp0_iter5_reg <= mul213_2_1_reg_566_pp0_iter4_reg;
                mul213_2_1_reg_566_pp0_iter6_reg <= mul213_2_1_reg_566_pp0_iter5_reg;
                mul213_2_1_reg_566_pp0_iter7_reg <= mul213_2_1_reg_566_pp0_iter6_reg;
                mul213_2_1_reg_566_pp0_iter8_reg <= mul213_2_1_reg_566_pp0_iter7_reg;
                mul213_2_1_reg_566_pp0_iter9_reg <= mul213_2_1_reg_566_pp0_iter8_reg;
                mul213_s_reg_556_pp0_iter2_reg <= mul213_s_reg_556;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln75_fu_285_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_149_reg_452 <= empty_149_fu_313_p2;
                or_ln85_reg_468 <= or_ln85_fu_337_p2;
                or_ln86_reg_472 <= or_ln86_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln75_reg_448 <= icmp_ln75_fu_285_p2;
                mul213_1_2_reg_576_pp0_iter3_reg <= mul213_1_2_reg_576;
                mul213_1_2_reg_576_pp0_iter4_reg <= mul213_1_2_reg_576_pp0_iter3_reg;
                mul213_1_2_reg_576_pp0_iter5_reg <= mul213_1_2_reg_576_pp0_iter4_reg;
                mul213_1_2_reg_576_pp0_iter6_reg <= mul213_1_2_reg_576_pp0_iter5_reg;
                mul213_1_2_reg_576_pp0_iter7_reg <= mul213_1_2_reg_576_pp0_iter6_reg;
                mul213_1_2_reg_576_pp0_iter8_reg <= mul213_1_2_reg_576_pp0_iter7_reg;
                mul213_2_2_reg_581_pp0_iter10_reg <= mul213_2_2_reg_581_pp0_iter9_reg;
                mul213_2_2_reg_581_pp0_iter11_reg <= mul213_2_2_reg_581_pp0_iter10_reg;
                mul213_2_2_reg_581_pp0_iter12_reg <= mul213_2_2_reg_581_pp0_iter11_reg;
                mul213_2_2_reg_581_pp0_iter3_reg <= mul213_2_2_reg_581;
                mul213_2_2_reg_581_pp0_iter4_reg <= mul213_2_2_reg_581_pp0_iter3_reg;
                mul213_2_2_reg_581_pp0_iter5_reg <= mul213_2_2_reg_581_pp0_iter4_reg;
                mul213_2_2_reg_581_pp0_iter6_reg <= mul213_2_2_reg_581_pp0_iter5_reg;
                mul213_2_2_reg_581_pp0_iter7_reg <= mul213_2_2_reg_581_pp0_iter6_reg;
                mul213_2_2_reg_581_pp0_iter8_reg <= mul213_2_2_reg_581_pp0_iter7_reg;
                mul213_2_2_reg_581_pp0_iter9_reg <= mul213_2_2_reg_581_pp0_iter8_reg;
                mul213_3_reg_571_pp0_iter3_reg <= mul213_3_reg_571;
                mul213_3_reg_571_pp0_iter4_reg <= mul213_3_reg_571_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln75_reg_448 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                line_buf_1_load_1_reg_511 <= line_buf_1_q0;
                line_buf_load_1_reg_501 <= line_buf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln75_reg_448 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                line_buf_1_load_2_reg_531 <= line_buf_1_q0;
                line_buf_load_2_reg_526 <= line_buf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln75_reg_448 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                line_buf_1_load_reg_486 <= line_buf_1_q0;
                line_buf_load_reg_476 <= line_buf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul213_1_1_reg_561 <= grp_fu_266_p2;
                mul213_2_1_reg_566 <= grp_fu_270_p2;
                mul213_s_reg_556 <= grp_fu_262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul213_1_2_reg_576 <= grp_fu_266_p2;
                mul213_2_2_reg_581 <= grp_fu_270_p2;
                mul213_3_reg_571 <= grp_fu_262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul213_1_reg_546 <= grp_fu_266_p2;
                mul213_2_reg_551 <= grp_fu_270_p2;
                mul_reg_541 <= grp_fu_262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul213_1_reg_546_pp0_iter2_reg <= mul213_1_reg_546;
                mul213_1_reg_546_pp0_iter3_reg <= mul213_1_reg_546_pp0_iter2_reg;
                mul213_1_reg_546_pp0_iter4_reg <= mul213_1_reg_546_pp0_iter3_reg;
                mul213_1_reg_546_pp0_iter5_reg <= mul213_1_reg_546_pp0_iter4_reg;
                mul213_2_reg_551_pp0_iter2_reg <= mul213_2_reg_551;
                mul213_2_reg_551_pp0_iter3_reg <= mul213_2_reg_551_pp0_iter2_reg;
                mul213_2_reg_551_pp0_iter4_reg <= mul213_2_reg_551_pp0_iter3_reg;
                mul213_2_reg_551_pp0_iter5_reg <= mul213_2_reg_551_pp0_iter4_reg;
                mul213_2_reg_551_pp0_iter6_reg <= mul213_2_reg_551_pp0_iter5_reg;
                mul213_2_reg_551_pp0_iter7_reg <= mul213_2_reg_551_pp0_iter6_reg;
                mul213_2_reg_551_pp0_iter8_reg <= mul213_2_reg_551_pp0_iter7_reg;
                mul213_2_reg_551_pp0_iter9_reg <= mul213_2_reg_551_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                out_16_reg_591 <= grp_fu_249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                out_17_reg_596 <= grp_fu_249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                out_18_reg_601 <= grp_fu_254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                out_19_reg_606 <= grp_fu_254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                out_20_reg_611 <= grp_fu_254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                out_21_reg_616 <= grp_fu_258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                out_22_reg_621 <= grp_fu_258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                out_23_reg_626 <= grp_fu_258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                out_reg_586 <= grp_fu_249_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to13, ap_block_pp0_stage1_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to13 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln75_fu_291_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_px_1) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, input74_empty_n, ap_predicate_op113_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= ((input74_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op113_read_state4 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, input74_empty_n, ap_predicate_op113_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= ((input74_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op113_read_state4 = ap_const_boolean_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, input74_empty_n, ap_predicate_op90_read_state2)
    begin
                ap_block_pp0_stage1_11001 <= ((input74_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, input74_empty_n, ap_predicate_op90_read_state2)
    begin
                ap_block_pp0_stage1_subdone <= ((input74_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter13, input74_empty_n, ap_predicate_op102_read_state3, depth1_o75_full_n)
    begin
                ap_block_pp0_stage2_01001 <= (((ap_predicate_op102_read_state3 = ap_const_boolean_1) and (input74_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (depth1_o75_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter13, input74_empty_n, ap_predicate_op102_read_state3, depth1_o75_full_n)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_predicate_op102_read_state3 = ap_const_boolean_1) and (input74_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (depth1_o75_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter13, input74_empty_n, ap_predicate_op102_read_state3, depth1_o75_full_n)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_predicate_op102_read_state3 = ap_const_boolean_1) and (input74_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (depth1_o75_full_n = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(input74_empty_n, ap_predicate_op90_read_state2)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((input74_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state2 = ap_const_boolean_1));
    end process;

        ap_block_state30_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage2_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage2_iter0_assign_proc : process(input74_empty_n, ap_predicate_op102_read_state3)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((ap_predicate_op102_read_state3 = ap_const_boolean_1) and (input74_empty_n = ap_const_logic_0));
    end process;

        ap_block_state40_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state42_pp0_stage2_iter13_assign_proc : process(depth1_o75_full_n)
    begin
                ap_block_state42_pp0_stage2_iter13 <= (depth1_o75_full_n = ap_const_logic_0);
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(input74_empty_n, ap_predicate_op113_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((input74_empty_n = ap_const_logic_0) and (ap_predicate_op113_read_state4 = ap_const_boolean_1));
    end process;

        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_379_assign_proc : process(icmp_ln75_reg_448, ap_CS_fsm_pp0_stage1, or_ln85_reg_468, ap_block_pp0_stage1_11001)
    begin
                ap_condition_379 <= ((icmp_ln75_reg_448 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln85_reg_468 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_384_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
                ap_condition_384 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001));
    end process;


    ap_condition_778_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln75_fu_285_p2, or_ln85_fu_337_p2)
    begin
                ap_condition_778 <= ((or_ln85_fu_337_p2 = ap_const_lv1_1) and (icmp_ln75_fu_285_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln75_reg_448, ap_block_pp0_stage2_subdone)
    begin
        if (((icmp_ln75_reg_448 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to13_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to13 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to13 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;
    ap_phi_reg_pp0_iter0_empty_145_reg_237 <= ap_const_lv32_0;
    ap_phi_reg_pp0_iter0_empty_146_reg_225 <= ap_const_lv32_0;

    ap_predicate_op102_read_state3_assign_proc : process(icmp_ln75_reg_448, cmp164)
    begin
                ap_predicate_op102_read_state3 <= ((cmp164 = ap_const_lv1_0) and (icmp_ln75_reg_448 = ap_const_lv1_0));
    end process;


    ap_predicate_op113_read_state4_assign_proc : process(icmp_ln75_reg_448, or_ln86_reg_472)
    begin
                ap_predicate_op113_read_state4 <= ((icmp_ln75_reg_448 = ap_const_lv1_0) and (or_ln86_reg_472 = ap_const_lv1_0));
    end process;


    ap_predicate_op90_read_state2_assign_proc : process(icmp_ln75_reg_448, or_ln85_reg_468)
    begin
                ap_predicate_op90_read_state2 <= ((icmp_ln75_reg_448 = ap_const_lv1_0) and (or_ln85_reg_468 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_px_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, px_fu_78, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_px_1 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_px_1 <= px_fu_78;
        end if; 
    end process;

    cmp158_fu_325_p2 <= "1" when (ap_sig_allocacmp_px_1 = ap_const_lv4_0) else "0";
    cmp160_fu_331_p2 <= "1" when (ap_sig_allocacmp_px_1 = ap_const_lv4_9) else "0";
    cmp164_read_read_fu_82_p2 <= cmp164;

    depth1_o75_blk_n_assign_proc : process(ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage2, depth1_o75_full_n, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            depth1_o75_blk_n <= depth1_o75_full_n;
        else 
            depth1_o75_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    depth1_o75_din <= out_23_reg_626;

    depth1_o75_write_assign_proc : process(ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            depth1_o75_write <= ap_const_logic_1;
        else 
            depth1_o75_write <= ap_const_logic_0;
        end if; 
    end process;

    empty_148_fu_301_p1 <= ap_sig_allocacmp_px_1(3 - 1 downto 0);
    empty_149_fu_313_p2 <= std_logic_vector(unsigned(p_shl_fu_305_p3) - unsigned(zext_ln75_fu_297_p1));
    empty_150_fu_354_p2 <= std_logic_vector(unsigned(empty_149_reg_452) + unsigned(ap_const_lv5_1));
    empty_151_fu_369_p2 <= std_logic_vector(unsigned(empty_149_reg_452) + unsigned(ap_const_lv5_2));

    grp_fu_249_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_249_ce <= ap_const_logic_1;
        else 
            grp_fu_249_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_249_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, mul_reg_541, out_reg_586, out_16_reg_591)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_249_p0 <= out_16_reg_591;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_249_p0 <= out_reg_586;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_249_p0 <= mul_reg_541;
        else 
            grp_fu_249_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_249_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, mul213_s_reg_556_pp0_iter2_reg, mul213_3_reg_571_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_249_p1 <= mul213_3_reg_571_pp0_iter4_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_249_p1 <= mul213_s_reg_556_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_249_p1 <= ap_const_lv32_0;
        else 
            grp_fu_249_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_254_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_254_ce <= ap_const_logic_1;
        else 
            grp_fu_254_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_254_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, out_17_reg_596, out_18_reg_601, out_19_reg_606)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_254_p0 <= out_19_reg_606;
        elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_254_p0 <= out_18_reg_601;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_254_p0 <= out_17_reg_596;
        else 
            grp_fu_254_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_254_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, mul213_1_reg_546_pp0_iter5_reg, mul213_1_1_reg_561_pp0_iter6_reg, mul213_1_2_reg_576_pp0_iter8_reg)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_254_p1 <= mul213_1_2_reg_576_pp0_iter8_reg;
        elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_254_p1 <= mul213_1_1_reg_561_pp0_iter6_reg;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_254_p1 <= mul213_1_reg_546_pp0_iter5_reg;
        else 
            grp_fu_254_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_258_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_258_ce <= ap_const_logic_1;
        else 
            grp_fu_258_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_258_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, out_20_reg_611, out_21_reg_616, out_22_reg_621)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_258_p0 <= out_22_reg_621;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_258_p0 <= out_21_reg_616;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_258_p0 <= out_20_reg_611;
        else 
            grp_fu_258_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_258_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, mul213_2_reg_551_pp0_iter9_reg, mul213_2_1_reg_566_pp0_iter10_reg, mul213_2_2_reg_581_pp0_iter12_reg)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_258_p1 <= mul213_2_2_reg_581_pp0_iter12_reg;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_258_p1 <= mul213_2_1_reg_566_pp0_iter10_reg;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_258_p1 <= mul213_2_reg_551_pp0_iter9_reg;
        else 
            grp_fu_258_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_262_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_262_ce <= ap_const_logic_1;
        else 
            grp_fu_262_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_262_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, line_buf_load_reg_476, line_buf_load_1_reg_501, line_buf_load_2_reg_526)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_262_p0 <= line_buf_load_2_reg_526;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_262_p0 <= line_buf_load_1_reg_501;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_262_p0 <= line_buf_load_reg_476;
        else 
            grp_fu_262_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_262_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, weights_load, weights_load_4, weights_load_5, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_262_p1 <= weights_load_5;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_262_p1 <= weights_load_4;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_262_p1 <= weights_load;
        else 
            grp_fu_262_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_266_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_266_ce <= ap_const_logic_1;
        else 
            grp_fu_266_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_266_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, line_buf_1_load_reg_486, line_buf_1_load_1_reg_511, line_buf_1_load_2_reg_531)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_266_p0 <= line_buf_1_load_2_reg_531;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_266_p0 <= line_buf_1_load_1_reg_511;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_266_p0 <= line_buf_1_load_reg_486;
        else 
            grp_fu_266_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_266_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, weights_load_6, weights_load_7, weights_load_8, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_266_p1 <= weights_load_8;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_266_p1 <= weights_load_7;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_266_p1 <= weights_load_6;
        else 
            grp_fu_266_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_270_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_270_ce <= ap_const_logic_1;
        else 
            grp_fu_270_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_270_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter0_empty_147_reg_213, ap_phi_reg_pp0_iter1_empty_146_reg_225, ap_phi_reg_pp0_iter1_empty_145_reg_237)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_270_p0 <= ap_phi_reg_pp0_iter1_empty_145_reg_237;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_270_p0 <= ap_phi_reg_pp0_iter1_empty_146_reg_225;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_270_p0 <= ap_phi_reg_pp0_iter0_empty_147_reg_213;
        else 
            grp_fu_270_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_270_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, weights_load_9, weights_load_10, weights_load_11, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_270_p1 <= weights_load_11;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_270_p1 <= weights_load_10;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_270_p1 <= weights_load_9;
        else 
            grp_fu_270_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln75_fu_285_p2 <= "1" when (ap_sig_allocacmp_px_1 = ap_const_lv4_A) else "0";

    input74_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, input74_empty_n, icmp_ln75_reg_448, ap_predicate_op102_read_state3, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, or_ln85_reg_468, ap_block_pp0_stage0, or_ln86_reg_472)
    begin
        if ((((ap_predicate_op102_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((icmp_ln75_reg_448 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln85_reg_468 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln75_reg_448 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_ln86_reg_472 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            input74_blk_n <= input74_empty_n;
        else 
            input74_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input74_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_predicate_op102_read_state3, ap_CS_fsm_pp0_stage1, ap_predicate_op113_read_state4, ap_block_pp0_stage0_11001, ap_predicate_op90_read_state2, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_predicate_op102_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_predicate_op90_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op113_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input74_read <= ap_const_logic_1;
        else 
            input74_read <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln82_fu_319_p1, zext_ln82_1_fu_359_p1, zext_ln82_2_fu_374_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                line_buf_1_address0 <= zext_ln82_2_fu_374_p1(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                line_buf_1_address0 <= zext_ln82_1_fu_359_p1(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                line_buf_1_address0 <= zext_ln82_fu_319_p1(5 - 1 downto 0);
            else 
                line_buf_1_address0 <= "XXXXX";
            end if;
        else 
            line_buf_1_address0 <= "XXXXX";
        end if; 
    end process;


    line_buf_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buf_1_ce0 <= ap_const_logic_1;
        else 
            line_buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln82_fu_319_p1, zext_ln82_1_fu_359_p1, zext_ln82_2_fu_374_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                line_buf_address0 <= zext_ln82_2_fu_374_p1(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                line_buf_address0 <= zext_ln82_1_fu_359_p1(5 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                line_buf_address0 <= zext_ln82_fu_319_p1(5 - 1 downto 0);
            else 
                line_buf_address0 <= "XXXXX";
            end if;
        else 
            line_buf_address0 <= "XXXXX";
        end if; 
    end process;


    line_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buf_ce0 <= ap_const_logic_1;
        else 
            line_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln85_fu_337_p2 <= (cmp164 or cmp158_fu_325_p2);
    or_ln86_fu_343_p2 <= (cmp164 or cmp160_fu_331_p2);
    p_shl_fu_305_p3 <= (empty_148_fu_301_p1 & ap_const_lv2_0);
    tmp_40_fu_380_p1 <= input74_dout;
    tmp_41_fu_384_p1 <= input74_dout;
    tmp_fu_365_p1 <= input74_dout;
    zext_ln75_fu_297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_px_1),5));
    zext_ln82_1_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_150_fu_354_p2),64));
    zext_ln82_2_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_151_fu_369_p2),64));
    zext_ln82_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_149_fu_313_p2),64));
end behav;
