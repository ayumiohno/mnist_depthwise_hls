-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MNIST_PointwiseConv2d_1_12_10_Pipeline_ic is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    depth3_o79_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    depth3_o79_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    depth3_o79_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    depth3_o79_empty_n : IN STD_LOGIC;
    depth3_o79_read : OUT STD_LOGIC;
    weights_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_0_ce0 : OUT STD_LOGIC;
    weights_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_0_ce1 : OUT STD_LOGIC;
    weights_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_1_ce0 : OUT STD_LOGIC;
    weights_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_1_ce1 : OUT STD_LOGIC;
    weights_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_2_ce0 : OUT STD_LOGIC;
    weights_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_2_ce1 : OUT STD_LOGIC;
    weights_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_3_ce0 : OUT STD_LOGIC;
    weights_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_3_ce1 : OUT STD_LOGIC;
    weights_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_4_ce0 : OUT STD_LOGIC;
    weights_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_4_ce1 : OUT STD_LOGIC;
    weights_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_5_ce0 : OUT STD_LOGIC;
    weights_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_5_ce1 : OUT STD_LOGIC;
    weights_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_6_ce0 : OUT STD_LOGIC;
    weights_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_6_ce1 : OUT STD_LOGIC;
    weights_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_7_ce0 : OUT STD_LOGIC;
    weights_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_7_ce1 : OUT STD_LOGIC;
    weights_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_8_ce0 : OUT STD_LOGIC;
    weights_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_8_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_8_ce1 : OUT STD_LOGIC;
    weights_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_9_ce0 : OUT STD_LOGIC;
    weights_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_9_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_9_ce1 : OUT STD_LOGIC;
    weights_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_10_ce0 : OUT STD_LOGIC;
    weights_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_10_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_10_ce1 : OUT STD_LOGIC;
    weights_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    add27_916_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_916_out_ap_vld : OUT STD_LOGIC;
    add27_815_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_815_out_ap_vld : OUT STD_LOGIC;
    add27_714_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_714_out_ap_vld : OUT STD_LOGIC;
    add27_613_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_613_out_ap_vld : OUT STD_LOGIC;
    add27_512_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_512_out_ap_vld : OUT STD_LOGIC;
    add27_411_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_411_out_ap_vld : OUT STD_LOGIC;
    add27_310_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_310_out_ap_vld : OUT STD_LOGIC;
    add27_29_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_29_out_ap_vld : OUT STD_LOGIC;
    add27_18_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add27_18_out_ap_vld : OUT STD_LOGIC;
    add277_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add277_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of MNIST_PointwiseConv2d_1_12_10_Pipeline_ic is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv13_5E : STD_LOGIC_VECTOR (12 downto 0) := "0000001011110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv7_48 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_const_lv15_BB : STD_LOGIC_VECTOR (14 downto 0) := "000000010111011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv11_2F : STD_LOGIC_VECTOR (10 downto 0) := "00000101111";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal icmp_ln16_reg_2245 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal depth3_o79_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ic_2_reg_2238 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln16_fu_1321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_reg_2245_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_reg_2245_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_reg_2245_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln16_2_fu_1333_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln16_2_reg_2249 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln22_fu_1353_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln22_reg_2255 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln22_reg_2255_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_31_reg_2269 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_32_reg_2274 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln16_fu_1424_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln16_reg_2279 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal depth3_o79_read_reg_2559 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_fu_1557_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2564 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1584_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_2569 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1611_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_2574 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1638_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_2579 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1665_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_2584 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1782_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_2699 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_2699_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1813_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_2762 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1840_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_2767 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1867_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_2772 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1247_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_2832 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1918_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_2837 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1251_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_3_reg_2842 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_4_reg_2847 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_6_reg_2907 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1985_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_2932 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_7_reg_2937 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_8_reg_2942 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_9_reg_2947 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_1_reg_2967 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_2_reg_2977 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_5_reg_2982 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln22_fu_1432_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln22_10_fu_1447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_11_fu_1461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_13_fu_1501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_14_fu_1542_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_15_fu_1723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_16_fu_1767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_8_fu_1798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln22_9_fu_1903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_12_fu_1954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_buf_29_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_29_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal out_buf_30_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1235_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_30_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_31_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1239_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_31_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_32_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_32_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_33_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_33_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_34_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1243_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_34_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_35_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_35_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_36_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_36_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_37_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_37_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_38_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_out_buf_38_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ic_fu_172 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln16_fu_1327_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_ic_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal grp_fu_1235_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1239_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1243_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1243_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1247_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1247_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1251_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1251_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1255_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1259_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1259_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln22_1_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln22_9_fu_1347_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln22_4_fu_1361_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_5_fu_1371_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_5_fu_1371_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln22_5_fu_1371_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln_fu_1387_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln22_fu_1395_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_6_fu_1403_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln22_6_fu_1403_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln22_6_fu_1403_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln22_fu_1427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln22_6_fu_1475_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln22_8_fu_1485_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln22_8_fu_1485_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln22_8_fu_1485_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_34_fu_1491_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln22_7_fu_1516_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln22_9_fu_1526_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln22_9_fu_1526_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln22_9_fu_1526_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_35_fu_1532_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln22_4_fu_1692_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln22_4_fu_1699_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln22_10_fu_1707_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln22_10_fu_1707_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln22_10_fu_1707_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_36_fu_1713_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln22_8_fu_1738_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln22_5_fu_1743_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln22_11_fu_1751_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln22_11_fu_1751_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln22_11_fu_1751_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_37_fu_1757_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_29_fu_1789_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2126_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_fu_1789_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_1894_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_2135_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_30_fu_1894_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_33_fu_1945_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_2143_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_33_fu_1945_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2126_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2126_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2126_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_2135_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2135_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_2135_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2143_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2143_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_2143_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1231_ce : STD_LOGIC;
    signal grp_fu_1235_ce : STD_LOGIC;
    signal grp_fu_1239_ce : STD_LOGIC;
    signal grp_fu_1243_ce : STD_LOGIC;
    signal grp_fu_1247_ce : STD_LOGIC;
    signal grp_fu_1251_ce : STD_LOGIC;
    signal grp_fu_1255_ce : STD_LOGIC;
    signal grp_fu_1259_ce : STD_LOGIC;
    signal grp_fu_2126_ce : STD_LOGIC;
    signal grp_fu_2135_ce : STD_LOGIC;
    signal grp_fu_2143_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to4 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_2126_p00 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln22_10_fu_1707_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln22_11_fu_1751_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln22_5_fu_1371_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln22_6_fu_1403_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln22_8_fu_1485_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln22_9_fu_1526_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_condition_1357 : BOOLEAN;
    signal ap_condition_1369 : BOOLEAN;
    signal ap_condition_1380 : BOOLEAN;
    signal ap_condition_1389 : BOOLEAN;
    signal ap_condition_1397 : BOOLEAN;
    signal ap_condition_1404 : BOOLEAN;
    signal ap_condition_1410 : BOOLEAN;
    signal ap_condition_1424 : BOOLEAN;
    signal ap_condition_1429 : BOOLEAN;
    signal ap_condition_1438 : BOOLEAN;
    signal ap_condition_1443 : BOOLEAN;
    signal ap_condition_1448 : BOOLEAN;
    signal ap_condition_1453 : BOOLEAN;
    signal ap_condition_1457 : BOOLEAN;
    signal ap_condition_1413 : BOOLEAN;
    signal ap_condition_1463 : BOOLEAN;
    signal ap_condition_1475 : BOOLEAN;
    signal ap_condition_1480 : BOOLEAN;
    signal ap_condition_1485 : BOOLEAN;
    signal ap_condition_1490 : BOOLEAN;
    signal ap_condition_1495 : BOOLEAN;
    signal ap_condition_1500 : BOOLEAN;
    signal ap_condition_1505 : BOOLEAN;
    signal ap_condition_1510 : BOOLEAN;
    signal ap_condition_1515 : BOOLEAN;
    signal ap_condition_1520 : BOOLEAN;
    signal ap_condition_1525 : BOOLEAN;
    signal ap_condition_1530 : BOOLEAN;
    signal ap_condition_1498 : BOOLEAN;
    signal ap_condition_1537 : BOOLEAN;
    signal ap_condition_1543 : BOOLEAN;
    signal ap_condition_1549 : BOOLEAN;
    signal ap_condition_1554 : BOOLEAN;
    signal ap_condition_1559 : BOOLEAN;
    signal ap_condition_1565 : BOOLEAN;
    signal ap_condition_1570 : BOOLEAN;
    signal ap_condition_1575 : BOOLEAN;
    signal ap_condition_1580 : BOOLEAN;
    signal ap_condition_1585 : BOOLEAN;
    signal ap_condition_1590 : BOOLEAN;
    signal ap_condition_1595 : BOOLEAN;
    signal ap_condition_1600 : BOOLEAN;
    signal ap_condition_1605 : BOOLEAN;
    signal ap_condition_1610 : BOOLEAN;
    signal ap_condition_1614 : BOOLEAN;
    signal ap_condition_1619 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component MNIST_fadd_32ns_32ns_32_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_mul_6ns_8ns_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component MNIST_mul_7ns_9ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component MNIST_mux_114_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MNIST_am_addmul_4ns_4ns_6ns_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component MNIST_am_addmul_4ns_5ns_7ns_13_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component MNIST_am_addmul_4ns_6ns_8ns_15_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component MNIST_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fadd_32ns_32ns_32_4_no_dsp_1_U442 : component MNIST_fadd_32ns_32ns_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_sig_allocacmp_out_buf_29_load_1,
        din1 => mul_reg_2832,
        ce => grp_fu_1231_ce,
        dout => grp_fu_1231_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U443 : component MNIST_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1235_p0,
        din1 => grp_fu_1235_p1,
        ce => grp_fu_1235_ce,
        dout => grp_fu_1235_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U444 : component MNIST_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1239_p0,
        din1 => grp_fu_1239_p1,
        ce => grp_fu_1239_ce,
        dout => grp_fu_1239_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U445 : component MNIST_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1243_p0,
        din1 => grp_fu_1243_p1,
        ce => grp_fu_1243_ce,
        dout => grp_fu_1243_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U446 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1247_p0,
        din1 => grp_fu_1247_p1,
        ce => grp_fu_1247_ce,
        dout => grp_fu_1247_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U447 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1251_p0,
        din1 => grp_fu_1251_p1,
        ce => grp_fu_1251_ce,
        dout => grp_fu_1251_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U448 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1255_p0,
        din1 => grp_fu_1255_p1,
        ce => grp_fu_1255_ce,
        dout => grp_fu_1255_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U449 : component MNIST_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1259_p0,
        din1 => grp_fu_1259_p1,
        ce => grp_fu_1259_ce,
        dout => grp_fu_1259_p2);

    mul_6ns_8ns_13_1_1_U450 : component MNIST_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln22_5_fu_1371_p0,
        din1 => mul_ln22_5_fu_1371_p1,
        dout => mul_ln22_5_fu_1371_p2);

    mul_6ns_8ns_13_1_1_U451 : component MNIST_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln22_6_fu_1403_p0,
        din1 => mul_ln22_6_fu_1403_p1,
        dout => mul_ln22_6_fu_1403_p2);

    mul_7ns_9ns_15_1_1_U452 : component MNIST_mul_7ns_9ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln22_8_fu_1485_p0,
        din1 => mul_ln22_8_fu_1485_p1,
        dout => mul_ln22_8_fu_1485_p2);

    mul_7ns_9ns_15_1_1_U453 : component MNIST_mul_7ns_9ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln22_9_fu_1526_p0,
        din1 => mul_ln22_9_fu_1526_p1,
        dout => mul_ln22_9_fu_1526_p2);

    mux_114_32_1_1_U454 : component MNIST_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => weights_0_q1,
        din1 => weights_1_q1,
        din2 => weights_2_q1,
        din3 => weights_3_q1,
        din4 => weights_4_q1,
        din5 => weights_5_q1,
        din6 => weights_6_q1,
        din7 => weights_7_q1,
        din8 => weights_8_q1,
        din9 => weights_9_q1,
        din10 => weights_10_q1,
        din11 => select_ln22_reg_2255,
        dout => tmp_fu_1557_p13);

    mux_114_32_1_1_U455 : component MNIST_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => weights_3_q1,
        din1 => weights_4_q1,
        din2 => weights_5_q1,
        din3 => weights_6_q1,
        din4 => weights_7_q1,
        din5 => weights_8_q1,
        din6 => weights_9_q1,
        din7 => weights_10_q1,
        din8 => weights_0_q1,
        din9 => weights_1_q1,
        din10 => weights_2_q1,
        din11 => select_ln22_reg_2255,
        dout => tmp_13_fu_1584_p13);

    mux_114_32_1_1_U456 : component MNIST_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => weights_4_q1,
        din1 => weights_5_q1,
        din2 => weights_6_q1,
        din3 => weights_7_q1,
        din4 => weights_8_q1,
        din5 => weights_9_q1,
        din6 => weights_10_q1,
        din7 => weights_0_q1,
        din8 => weights_1_q1,
        din9 => weights_2_q1,
        din10 => weights_3_q1,
        din11 => select_ln22_reg_2255,
        dout => tmp_14_fu_1611_p13);

    mux_114_32_1_1_U457 : component MNIST_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => weights_6_q1,
        din1 => weights_7_q1,
        din2 => weights_8_q1,
        din3 => weights_9_q1,
        din4 => weights_10_q1,
        din5 => weights_0_q1,
        din6 => weights_1_q1,
        din7 => weights_2_q1,
        din8 => weights_3_q1,
        din9 => weights_4_q1,
        din10 => weights_5_q1,
        din11 => select_ln22_reg_2255,
        dout => tmp_16_fu_1638_p13);

    mux_114_32_1_1_U458 : component MNIST_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => weights_7_q1,
        din1 => weights_8_q1,
        din2 => weights_9_q1,
        din3 => weights_10_q1,
        din4 => weights_0_q1,
        din5 => weights_1_q1,
        din6 => weights_2_q1,
        din7 => weights_3_q1,
        din8 => weights_4_q1,
        din9 => weights_5_q1,
        din10 => weights_6_q1,
        din11 => select_ln22_reg_2255,
        dout => tmp_17_fu_1665_p13);

    mul_7ns_9ns_15_1_1_U459 : component MNIST_mul_7ns_9ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln22_10_fu_1707_p0,
        din1 => mul_ln22_10_fu_1707_p1,
        dout => mul_ln22_10_fu_1707_p2);

    mul_7ns_9ns_15_1_1_U460 : component MNIST_mul_7ns_9ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln22_11_fu_1751_p0,
        din1 => mul_ln22_11_fu_1751_p1,
        dout => mul_ln22_11_fu_1751_p2);

    mux_114_32_1_1_U461 : component MNIST_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => weights_8_q1,
        din1 => weights_9_q1,
        din2 => weights_10_q1,
        din3 => weights_0_q1,
        din4 => weights_1_q1,
        din5 => weights_2_q1,
        din6 => weights_3_q1,
        din7 => weights_4_q1,
        din8 => weights_5_q1,
        din9 => weights_6_q1,
        din10 => weights_7_q1,
        din11 => select_ln22_reg_2255,
        dout => tmp_18_fu_1813_p13);

    mux_114_32_1_1_U462 : component MNIST_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => weights_9_q1,
        din1 => weights_10_q1,
        din2 => weights_0_q1,
        din3 => weights_1_q1,
        din4 => weights_2_q1,
        din5 => weights_3_q1,
        din6 => weights_4_q1,
        din7 => weights_5_q1,
        din8 => weights_6_q1,
        din9 => weights_7_q1,
        din10 => weights_8_q1,
        din11 => select_ln22_reg_2255,
        dout => tmp_19_fu_1840_p13);

    mux_114_32_1_1_U463 : component MNIST_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => weights_1_q0,
        din1 => weights_2_q0,
        din2 => weights_3_q0,
        din3 => weights_4_q0,
        din4 => weights_5_q0,
        din5 => weights_6_q0,
        din6 => weights_7_q0,
        din7 => weights_8_q0,
        din8 => weights_9_q0,
        din9 => weights_10_q0,
        din10 => weights_0_q0,
        din11 => select_ln22_reg_2255_pp0_iter1_reg,
        dout => tmp_s_fu_1867_p13);

    mux_114_32_1_1_U464 : component MNIST_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => weights_2_q0,
        din1 => weights_3_q0,
        din2 => weights_4_q0,
        din3 => weights_5_q0,
        din4 => weights_6_q0,
        din5 => weights_7_q0,
        din6 => weights_8_q0,
        din7 => weights_9_q0,
        din8 => weights_10_q0,
        din9 => weights_0_q0,
        din10 => weights_1_q0,
        din11 => select_ln22_reg_2255_pp0_iter1_reg,
        dout => tmp_12_fu_1918_p13);

    mux_114_32_1_1_U465 : component MNIST_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => weights_5_q0,
        din1 => weights_6_q0,
        din2 => weights_7_q0,
        din3 => weights_8_q0,
        din4 => weights_9_q0,
        din5 => weights_10_q0,
        din6 => weights_0_q0,
        din7 => weights_1_q0,
        din8 => weights_2_q0,
        din9 => weights_3_q0,
        din10 => weights_4_q0,
        din11 => select_ln22_reg_2255_pp0_iter1_reg,
        dout => tmp_15_fu_1985_p13);

    am_addmul_4ns_4ns_6ns_11_4_1_U466 : component MNIST_am_addmul_4ns_4ns_6ns_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 6,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2126_p0,
        din1 => grp_fu_2126_p1,
        din2 => grp_fu_2126_p2,
        ce => grp_fu_2126_ce,
        dout => grp_fu_2126_p3);

    am_addmul_4ns_5ns_7ns_13_4_1_U467 : component MNIST_am_addmul_4ns_5ns_7ns_13_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 5,
        din2_WIDTH => 7,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2135_p0,
        din1 => grp_fu_2135_p1,
        din2 => grp_fu_2135_p2,
        ce => grp_fu_2135_ce,
        dout => grp_fu_2135_p3);

    am_addmul_4ns_6ns_8ns_15_4_1_U468 : component MNIST_am_addmul_4ns_6ns_8ns_15_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 6,
        din2_WIDTH => 8,
        dout_WIDTH => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2143_p0,
        din1 => grp_fu_2143_p1,
        din2 => grp_fu_2143_p2,
        ce => grp_fu_2143_ce,
        dout => grp_fu_2143_p3);

    flow_control_loop_pipe_sequential_init_U : component MNIST_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ic_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln16_fu_1321_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    ic_fu_172 <= add_ln16_fu_1327_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    ic_fu_172 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    out_buf_29_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_buf_29_fu_132 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    out_buf_29_fu_132 <= grp_fu_1231_p2;
                end if;
            end if; 
        end if;
    end process;

    out_buf_30_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_30_fu_136 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_buf_30_fu_136 <= grp_fu_1235_p2;
            end if; 
        end if;
    end process;

    out_buf_31_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_31_fu_140 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_buf_31_fu_140 <= grp_fu_1239_p2;
            end if; 
        end if;
    end process;

    out_buf_32_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_buf_32_fu_144 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    out_buf_32_fu_144 <= grp_fu_1235_p2;
                end if;
            end if; 
        end if;
    end process;

    out_buf_33_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_buf_33_fu_148 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    out_buf_33_fu_148 <= grp_fu_1239_p2;
                end if;
            end if; 
        end if;
    end process;

    out_buf_34_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_34_fu_152 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_buf_34_fu_152 <= grp_fu_1243_p2;
            end if; 
        end if;
    end process;

    out_buf_35_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_buf_35_fu_156 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    out_buf_35_fu_156 <= grp_fu_1243_p2;
                end if;
            end if; 
        end if;
    end process;

    out_buf_36_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_36_fu_160 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_buf_36_fu_160 <= grp_fu_1235_p2;
            end if; 
        end if;
    end process;

    out_buf_37_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_37_fu_164 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_buf_37_fu_164 <= grp_fu_1239_p2;
            end if; 
        end if;
    end process;

    out_buf_38_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_buf_38_fu_168 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_buf_38_fu_168 <= grp_fu_1243_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                tmp_12_reg_2837 <= tmp_12_fu_1918_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                depth3_o79_read_reg_2559 <= depth3_o79_dout;
                tmp_13_reg_2569 <= tmp_13_fu_1584_p13;
                tmp_14_reg_2574 <= tmp_14_fu_1611_p13;
                tmp_16_reg_2579 <= tmp_16_fu_1638_p13;
                tmp_17_reg_2584 <= tmp_17_fu_1665_p13;
                tmp_reg_2564 <= tmp_fu_1557_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ic_2_reg_2238 <= ap_sig_allocacmp_ic_2;
                icmp_ln16_reg_2245 <= icmp_ln16_fu_1321_p2;
                icmp_ln16_reg_2245_pp0_iter1_reg <= icmp_ln16_reg_2245;
                icmp_ln16_reg_2245_pp0_iter2_reg <= icmp_ln16_reg_2245_pp0_iter1_reg;
                icmp_ln16_reg_2245_pp0_iter3_reg <= icmp_ln16_reg_2245_pp0_iter2_reg;
                select_ln22_reg_2255_pp0_iter1_reg <= select_ln22_reg_2255;
                tmp_15_reg_2932 <= tmp_15_fu_1985_p13;
                tmp_18_reg_2762 <= tmp_18_fu_1813_p13;
                tmp_19_reg_2767 <= tmp_19_fu_1840_p13;
                tmp_38_reg_2699 <= tmp_38_fu_1782_p1;
                tmp_38_reg_2699_pp0_iter2_reg <= tmp_38_reg_2699;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul24_1_reg_2967 <= grp_fu_1247_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul24_2_reg_2977 <= grp_fu_1259_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul24_3_reg_2842 <= grp_fu_1251_p2;
                mul24_4_reg_2847 <= grp_fu_1255_p2;
                mul24_6_reg_2907 <= grp_fu_1259_p2;
                mul_reg_2832 <= grp_fu_1247_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul24_5_reg_2982 <= grp_fu_1251_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul24_7_reg_2937 <= grp_fu_1247_p2;
                mul24_8_reg_2942 <= grp_fu_1251_p2;
                mul24_9_reg_2947 <= grp_fu_1255_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln16_fu_1321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln22_reg_2255 <= select_ln22_fu_1353_p3;
                tmp_31_reg_2269 <= mul_ln22_5_fu_1371_p2(12 downto 10);
                tmp_32_reg_2274 <= mul_ln22_6_fu_1403_p2(12 downto 10);
                    zext_ln16_2_reg_2249(3 downto 0) <= zext_ln16_2_fu_1333_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_s_reg_2772 <= tmp_s_fu_1867_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    zext_ln16_reg_2279(3 downto 0) <= zext_ln16_fu_1424_p1(3 downto 0);
            end if;
        end if;
    end process;
    zext_ln16_2_reg_2249(5 downto 4) <= "00";
    zext_ln16_reg_2279(6 downto 4) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to4, ap_block_pp0_stage1_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to4 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add277_out <= out_buf_29_fu_132;

    add277_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            add277_out_ap_vld <= ap_const_logic_1;
        else 
            add277_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_18_out <= out_buf_30_fu_136;

    add27_18_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            add27_18_out_ap_vld <= ap_const_logic_1;
        else 
            add27_18_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_29_out <= out_buf_31_fu_140;

    add27_29_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            add27_29_out_ap_vld <= ap_const_logic_1;
        else 
            add27_29_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_310_out <= out_buf_32_fu_144;

    add27_310_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            add27_310_out_ap_vld <= ap_const_logic_1;
        else 
            add27_310_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_411_out <= out_buf_33_fu_148;

    add27_411_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            add27_411_out_ap_vld <= ap_const_logic_1;
        else 
            add27_411_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_512_out <= out_buf_34_fu_152;

    add27_512_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            add27_512_out_ap_vld <= ap_const_logic_1;
        else 
            add27_512_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_613_out <= out_buf_35_fu_156;

    add27_613_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            add27_613_out_ap_vld <= ap_const_logic_1;
        else 
            add27_613_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_714_out <= out_buf_36_fu_160;

    add27_714_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            add27_714_out_ap_vld <= ap_const_logic_1;
        else 
            add27_714_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_815_out <= out_buf_37_fu_164;

    add27_815_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            add27_815_out_ap_vld <= ap_const_logic_1;
        else 
            add27_815_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add27_916_out <= out_buf_38_fu_168;

    add27_916_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            add27_916_out_ap_vld <= ap_const_logic_1;
        else 
            add27_916_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln16_fu_1327_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_ic_2) + unsigned(ap_const_lv4_1));
    add_ln22_4_fu_1361_p2 <= std_logic_vector(unsigned(zext_ln16_2_fu_1333_p1) + unsigned(ap_const_lv6_24));
    add_ln22_6_fu_1475_p2 <= std_logic_vector(unsigned(zext_ln16_fu_1424_p1) + unsigned(ap_const_lv7_48));
    add_ln22_7_fu_1516_p2 <= std_logic_vector(unsigned(zext_ln16_fu_1424_p1) + unsigned(ap_const_lv7_54));
    add_ln22_8_fu_1738_p2 <= std_logic_vector(unsigned(zext_ln16_2_reg_2249) + unsigned(ap_const_lv6_2C));
    add_ln22_9_fu_1347_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_ic_2) + unsigned(ap_const_lv4_5));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, depth3_o79_empty_n, icmp_ln16_reg_2245)
    begin
                ap_block_pp0_stage2_01001 <= ((icmp_ln16_reg_2245 = ap_const_lv1_0) and (depth3_o79_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, depth3_o79_empty_n, icmp_ln16_reg_2245)
    begin
                ap_block_pp0_stage2_11001 <= ((icmp_ln16_reg_2245 = ap_const_lv1_0) and (depth3_o79_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, depth3_o79_empty_n, icmp_ln16_reg_2245)
    begin
                ap_block_pp0_stage2_subdone <= ((icmp_ln16_reg_2245 = ap_const_lv1_0) and (depth3_o79_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage2_iter0_assign_proc : process(depth3_o79_empty_n, icmp_ln16_reg_2245)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((icmp_ln16_reg_2245 = ap_const_lv1_0) and (depth3_o79_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1357_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1357 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1369_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1369 <= (not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1380_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1380 <= (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1389_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1389 <= (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1397_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1397 <= (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1404_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1404 <= (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1410_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1410 <= (not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1413_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_2245, select_ln22_reg_2255)
    begin
                ap_condition_1413 <= (not((select_ln22_reg_2255 = ap_const_lv4_0)) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_1424_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1424 <= (not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1429_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1429 <= (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1438_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1438 <= (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1443_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1443 <= (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1448_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1448 <= (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1453_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1453 <= (not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1457_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1457 <= ((ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1463_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1463 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1475_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1475 <= (not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1480_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1480 <= (not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1485_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1485 <= (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1490_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1490 <= (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1495_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1495 <= (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1498_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_2245, select_ln22_reg_2255)
    begin
                ap_condition_1498 <= (not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_1500_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1500 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1505_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1505 <= (not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1510_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1510 <= (not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1515_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1515 <= (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1520_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1520 <= (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1525_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1525 <= (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1530_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1530 <= (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1537_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1537 <= (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1543_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1543 <= (not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1549_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1549 <= (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1554_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1554 <= (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1559_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1559 <= (not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1565_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1565 <= (not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1570_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1570 <= (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1575_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1575 <= (not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1580_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1580 <= (not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1585_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1585 <= (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1590_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1590 <= (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1595_assign_proc : process(select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_1595 <= (not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_1600_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1600 <= (not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1605_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1605 <= (not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1610_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1610 <= (not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1614_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1614 <= ((ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_1619_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln22_reg_2255)
    begin
                ap_condition_1619 <= (not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (icmp_ln16_reg_2245 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_ic_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, ic_fu_172)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_ic_2 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_ic_2 <= ic_fu_172;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_29_load_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, out_buf_29_fu_132, grp_fu_1231_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_out_buf_29_load_1 <= grp_fu_1231_p2;
        else 
            ap_sig_allocacmp_out_buf_29_load_1 <= out_buf_29_fu_132;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_30_load_1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, out_buf_30_fu_136, grp_fu_1235_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_out_buf_30_load_1 <= grp_fu_1235_p2;
        else 
            ap_sig_allocacmp_out_buf_30_load_1 <= out_buf_30_fu_136;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_31_load_1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, out_buf_31_fu_140, grp_fu_1239_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_out_buf_31_load_1 <= grp_fu_1239_p2;
        else 
            ap_sig_allocacmp_out_buf_31_load_1 <= out_buf_31_fu_140;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_32_load_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, grp_fu_1235_p2, out_buf_32_fu_144)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_out_buf_32_load_1 <= grp_fu_1235_p2;
        else 
            ap_sig_allocacmp_out_buf_32_load_1 <= out_buf_32_fu_144;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_33_load_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, grp_fu_1239_p2, out_buf_33_fu_148)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_out_buf_33_load_1 <= grp_fu_1239_p2;
        else 
            ap_sig_allocacmp_out_buf_33_load_1 <= out_buf_33_fu_148;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_34_load_1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, out_buf_34_fu_152, grp_fu_1243_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_out_buf_34_load_1 <= grp_fu_1243_p2;
        else 
            ap_sig_allocacmp_out_buf_34_load_1 <= out_buf_34_fu_152;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_35_load_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, grp_fu_1243_p2, out_buf_35_fu_156)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_out_buf_35_load_1 <= grp_fu_1243_p2;
        else 
            ap_sig_allocacmp_out_buf_35_load_1 <= out_buf_35_fu_156;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_36_load_1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_fu_1235_p2, out_buf_36_fu_160)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_out_buf_36_load_1 <= grp_fu_1235_p2;
        else 
            ap_sig_allocacmp_out_buf_36_load_1 <= out_buf_36_fu_160;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_37_load_1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_fu_1239_p2, out_buf_37_fu_164)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_out_buf_37_load_1 <= grp_fu_1239_p2;
        else 
            ap_sig_allocacmp_out_buf_37_load_1 <= out_buf_37_fu_164;
        end if; 
    end process;


    ap_sig_allocacmp_out_buf_38_load_1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_fu_1243_p2, out_buf_38_fu_168)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_out_buf_38_load_1 <= grp_fu_1243_p2;
        else 
            ap_sig_allocacmp_out_buf_38_load_1 <= out_buf_38_fu_168;
        end if; 
    end process;


    depth3_o79_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, depth3_o79_empty_n, icmp_ln16_reg_2245, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            depth3_o79_blk_n <= depth3_o79_empty_n;
        else 
            depth3_o79_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    depth3_o79_read_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            depth3_o79_read <= ap_const_logic_1;
        else 
            depth3_o79_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1231_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1231_ce <= ap_const_logic_1;
        else 
            grp_fu_1231_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1235_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1235_ce <= ap_const_logic_1;
        else 
            grp_fu_1235_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1235_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_sig_allocacmp_out_buf_30_load_1, ap_sig_allocacmp_out_buf_32_load_1, ap_sig_allocacmp_out_buf_36_load_1)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_1235_p0 <= ap_sig_allocacmp_out_buf_30_load_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_1235_p0 <= ap_sig_allocacmp_out_buf_36_load_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_1235_p0 <= ap_sig_allocacmp_out_buf_32_load_1;
            else 
                grp_fu_1235_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_1235_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1235_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, mul24_3_reg_2842, mul24_7_reg_2937, mul24_1_reg_2967, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_1235_p1 <= mul24_1_reg_2967;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_1235_p1 <= mul24_7_reg_2937;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_1235_p1 <= mul24_3_reg_2842;
            else 
                grp_fu_1235_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_1235_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1239_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1239_ce <= ap_const_logic_1;
        else 
            grp_fu_1239_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1239_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_sig_allocacmp_out_buf_31_load_1, ap_sig_allocacmp_out_buf_33_load_1, ap_sig_allocacmp_out_buf_37_load_1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1239_p0 <= ap_sig_allocacmp_out_buf_31_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1239_p0 <= ap_sig_allocacmp_out_buf_37_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1239_p0 <= ap_sig_allocacmp_out_buf_33_load_1;
        else 
            grp_fu_1239_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1239_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, mul24_4_reg_2847, mul24_8_reg_2942, mul24_2_reg_2977, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1239_p1 <= mul24_2_reg_2977;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1239_p1 <= mul24_8_reg_2942;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1239_p1 <= mul24_4_reg_2847;
        else 
            grp_fu_1239_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1243_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1243_ce <= ap_const_logic_1;
        else 
            grp_fu_1243_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1243_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_sig_allocacmp_out_buf_34_load_1, ap_sig_allocacmp_out_buf_35_load_1, ap_sig_allocacmp_out_buf_38_load_1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1243_p0 <= ap_sig_allocacmp_out_buf_34_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1243_p0 <= ap_sig_allocacmp_out_buf_38_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1243_p0 <= ap_sig_allocacmp_out_buf_35_load_1;
        else 
            grp_fu_1243_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1243_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, mul24_6_reg_2907, mul24_9_reg_2947, mul24_5_reg_2982, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1243_p1 <= mul24_5_reg_2982;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1243_p1 <= mul24_9_reg_2947;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1243_p1 <= mul24_6_reg_2907;
        else 
            grp_fu_1243_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1247_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1247_ce <= ap_const_logic_1;
        else 
            grp_fu_1247_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1247_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_38_fu_1782_p1, tmp_38_reg_2699, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_1247_p0 <= tmp_38_reg_2699;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1247_p0 <= tmp_38_fu_1782_p1;
        else 
            grp_fu_1247_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1247_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_reg_2564, tmp_17_reg_2584, tmp_s_reg_2772, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_1247_p1 <= tmp_s_reg_2772;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_1247_p1 <= tmp_17_reg_2584;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_1247_p1 <= tmp_reg_2564;
            else 
                grp_fu_1247_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_1247_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1251_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1251_ce <= ap_const_logic_1;
        else 
            grp_fu_1251_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1251_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_38_fu_1782_p1, tmp_38_reg_2699, tmp_38_reg_2699_pp0_iter2_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1251_p0 <= tmp_38_reg_2699_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1251_p0 <= tmp_38_reg_2699;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1251_p0 <= tmp_38_fu_1782_p1;
        else 
            grp_fu_1251_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1251_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_13_reg_2569, tmp_18_reg_2762, tmp_15_reg_2932, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1251_p1 <= tmp_15_reg_2932;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1251_p1 <= tmp_18_reg_2762;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1251_p1 <= tmp_13_reg_2569;
        else 
            grp_fu_1251_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1255_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1255_ce <= ap_const_logic_1;
        else 
            grp_fu_1255_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1255_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp_38_fu_1782_p1, tmp_38_reg_2699, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_1255_p0 <= tmp_38_reg_2699;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_1255_p0 <= tmp_38_fu_1782_p1;
            else 
                grp_fu_1255_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_1255_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1255_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp_14_reg_2574, tmp_19_reg_2767, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_1255_p1 <= tmp_19_reg_2767;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_1255_p1 <= tmp_14_reg_2574;
            else 
                grp_fu_1255_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_1255_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1259_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1259_ce <= ap_const_logic_1;
        else 
            grp_fu_1259_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1259_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, tmp_38_fu_1782_p1, tmp_38_reg_2699_pp0_iter2_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1259_p0 <= tmp_38_reg_2699_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1259_p0 <= tmp_38_fu_1782_p1;
        else 
            grp_fu_1259_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1259_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, tmp_16_reg_2579, tmp_12_reg_2837, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1259_p1 <= tmp_12_reg_2837;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1259_p1 <= tmp_16_reg_2579;
        else 
            grp_fu_1259_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2126_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_2126_ce <= ap_const_logic_1;
        else 
            grp_fu_2126_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2126_p0 <= grp_fu_2126_p00(4 - 1 downto 0);
    grp_fu_2126_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_ic_2),5));
    grp_fu_2126_p1 <= ap_const_lv5_C(4 - 1 downto 0);
    grp_fu_2126_p2 <= ap_const_lv11_2F(6 - 1 downto 0);

    grp_fu_2135_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_2135_ce <= ap_const_logic_1;
        else 
            grp_fu_2135_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2135_p0 <= zext_ln16_2_reg_2249(4 - 1 downto 0);
    grp_fu_2135_p1 <= ap_const_lv6_18(5 - 1 downto 0);
    grp_fu_2135_p2 <= ap_const_lv13_5E(7 - 1 downto 0);

    grp_fu_2143_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_2143_ce <= ap_const_logic_1;
        else 
            grp_fu_2143_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2143_p0 <= zext_ln16_reg_2279(4 - 1 downto 0);
    grp_fu_2143_p1 <= ap_const_lv7_3C(6 - 1 downto 0);
    grp_fu_2143_p2 <= ap_const_lv15_BB(8 - 1 downto 0);
    icmp_ln16_fu_1321_p2 <= "1" when (ap_sig_allocacmp_ic_2 = ap_const_lv4_C) else "0";
    icmp_ln22_1_fu_1341_p2 <= "1" when (unsigned(ap_sig_allocacmp_ic_2) < unsigned(ap_const_lv4_B)) else "0";
    icmp_ln22_fu_1427_p2 <= "1" when (unsigned(ic_2_reg_2238) > unsigned(ap_const_lv4_A)) else "0";
    mul_ln22_10_fu_1707_p0 <= mul_ln22_10_fu_1707_p00(7 - 1 downto 0);
    mul_ln22_10_fu_1707_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln22_4_fu_1699_p1),15));
    mul_ln22_10_fu_1707_p1 <= ap_const_lv15_BB(9 - 1 downto 0);
    mul_ln22_11_fu_1751_p0 <= mul_ln22_11_fu_1751_p00(7 - 1 downto 0);
    mul_ln22_11_fu_1751_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln22_5_fu_1743_p1),15));
    mul_ln22_11_fu_1751_p1 <= ap_const_lv15_BB(9 - 1 downto 0);
    mul_ln22_5_fu_1371_p0 <= mul_ln22_5_fu_1371_p00(6 - 1 downto 0);
    mul_ln22_5_fu_1371_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_4_fu_1361_p2),13));
    mul_ln22_5_fu_1371_p1 <= ap_const_lv13_5E(8 - 1 downto 0);
    mul_ln22_6_fu_1403_p0 <= mul_ln22_6_fu_1403_p00(6 - 1 downto 0);
    mul_ln22_6_fu_1403_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln22_fu_1395_p1),13));
    mul_ln22_6_fu_1403_p1 <= ap_const_lv13_5E(8 - 1 downto 0);
    mul_ln22_8_fu_1485_p0 <= mul_ln22_8_fu_1485_p00(7 - 1 downto 0);
    mul_ln22_8_fu_1485_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_6_fu_1475_p2),15));
    mul_ln22_8_fu_1485_p1 <= ap_const_lv15_BB(9 - 1 downto 0);
    mul_ln22_9_fu_1526_p0 <= mul_ln22_9_fu_1526_p00(7 - 1 downto 0);
    mul_ln22_9_fu_1526_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_7_fu_1516_p2),15));
    mul_ln22_9_fu_1526_p1 <= ap_const_lv15_BB(9 - 1 downto 0);
    or_ln22_4_fu_1692_p3 <= (ap_const_lv2_2 & ic_2_reg_2238);
    or_ln_fu_1387_p3 <= (ap_const_lv1_1 & ap_sig_allocacmp_ic_2);
    select_ln22_fu_1353_p3 <= 
        ap_sig_allocacmp_ic_2 when (icmp_ln22_1_fu_1341_p2(0) = '1') else 
        add_ln22_9_fu_1347_p2;
        sext_ln22_4_fu_1699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln22_4_fu_1692_p3),7));

        sext_ln22_5_fu_1743_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln22_8_fu_1738_p2),7));

        sext_ln22_fu_1395_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln_fu_1387_p3),6));

    tmp_29_fu_1789_p1 <= grp_fu_2126_p3;
    tmp_29_fu_1789_p4 <= tmp_29_fu_1789_p1(10 downto 9);
    tmp_30_fu_1894_p1 <= grp_fu_2135_p3;
    tmp_30_fu_1894_p4 <= tmp_30_fu_1894_p1(12 downto 10);
    tmp_33_fu_1945_p1 <= grp_fu_2143_p3;
    tmp_33_fu_1945_p4 <= tmp_33_fu_1945_p1(14 downto 11);
    tmp_34_fu_1491_p4 <= mul_ln22_8_fu_1485_p2(14 downto 11);
    tmp_35_fu_1532_p4 <= mul_ln22_9_fu_1526_p2(14 downto 11);
    tmp_36_fu_1713_p4 <= mul_ln22_10_fu_1707_p2(14 downto 11);
    tmp_37_fu_1757_p4 <= mul_ln22_11_fu_1751_p2(14 downto 11);
    tmp_38_fu_1782_p1 <= depth3_o79_read_reg_2559;

    weights_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_0_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_0_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_0_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_0_address0 <= "XXXX";
            end if;
        else 
            weights_0_address0 <= "XXXX";
        end if; 
    end process;


    weights_0_address1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_2245, zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1357, ap_condition_1369, ap_condition_1380, ap_condition_1389, ap_condition_1397, ap_condition_1404, ap_condition_1410)
    begin
        if (((icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_1410)) then 
                weights_0_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1404)) then 
                weights_0_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1397)) then 
                weights_0_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1389)) then 
                weights_0_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1380)) then 
                weights_0_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1369)) then 
                weights_0_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1357)) then 
                weights_0_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_0_address1 <= "XXXX";
            end if;
        else 
            weights_0_address1 <= "XXXX";
        end if; 
    end process;


    weights_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_0_ce0 <= ap_const_logic_1;
        else 
            weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weights_0_ce1 <= ap_const_logic_1;
        else 
            weights_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_10_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_10_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_10_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_10_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_10_address0 <= "XXXX";
            end if;
        else 
            weights_10_address0 <= "XXXX";
        end if; 
    end process;


    weights_10_address1_assign_proc : process(zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1424, ap_condition_1429, ap_condition_1438, ap_condition_1443, ap_condition_1448, ap_condition_1453, ap_condition_1457, ap_condition_1413)
    begin
        if ((ap_const_boolean_1 = ap_condition_1413)) then
            if ((ap_const_boolean_1 = ap_condition_1457)) then 
                weights_10_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1453)) then 
                weights_10_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1448)) then 
                weights_10_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1443)) then 
                weights_10_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1438)) then 
                weights_10_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1429)) then 
                weights_10_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1424)) then 
                weights_10_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_10_address1 <= "XXXX";
            end if;
        else 
            weights_10_address1 <= "XXXX";
        end if; 
    end process;


    weights_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_10_ce0 <= ap_const_logic_1;
        else 
            weights_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_10_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            weights_10_ce1 <= ap_const_logic_1;
        else 
            weights_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_1_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_1_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_1_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_1_address0 <= "XXXX";
            end if;
        else 
            weights_1_address0 <= "XXXX";
        end if; 
    end process;


    weights_1_address1_assign_proc : process(zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1438, ap_condition_1413, ap_condition_1463, ap_condition_1475, ap_condition_1480, ap_condition_1485, ap_condition_1490, ap_condition_1495)
    begin
        if ((ap_const_boolean_1 = ap_condition_1413)) then
            if ((ap_const_boolean_1 = ap_condition_1495)) then 
                weights_1_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1490)) then 
                weights_1_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1485)) then 
                weights_1_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1438)) then 
                weights_1_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1480)) then 
                weights_1_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1475)) then 
                weights_1_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1463)) then 
                weights_1_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_1_address1 <= "XXXX";
            end if;
        else 
            weights_1_address1 <= "XXXX";
        end if; 
    end process;


    weights_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_1_ce0 <= ap_const_logic_1;
        else 
            weights_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weights_1_ce1 <= ap_const_logic_1;
        else 
            weights_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_2_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_2_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_2_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_2_address0 <= "XXXX";
            end if;
        else 
            weights_2_address0 <= "XXXX";
        end if; 
    end process;


    weights_2_address1_assign_proc : process(zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1500, ap_condition_1505, ap_condition_1510, ap_condition_1515, ap_condition_1520, ap_condition_1525, ap_condition_1530, ap_condition_1498)
    begin
        if ((ap_const_boolean_1 = ap_condition_1498)) then
            if ((ap_const_boolean_1 = ap_condition_1530)) then 
                weights_2_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1525)) then 
                weights_2_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1520)) then 
                weights_2_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1515)) then 
                weights_2_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1510)) then 
                weights_2_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1505)) then 
                weights_2_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1500)) then 
                weights_2_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_2_address1 <= "XXXX";
            end if;
        else 
            weights_2_address1 <= "XXXX";
        end if; 
    end process;


    weights_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_2_ce0 <= ap_const_logic_1;
        else 
            weights_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weights_2_ce1 <= ap_const_logic_1;
        else 
            weights_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_3_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_3_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_3_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_3_address0 <= "XXXX";
            end if;
        else 
            weights_3_address0 <= "XXXX";
        end if; 
    end process;


    weights_3_address1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_2245, zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1357, ap_condition_1369, ap_condition_1380, ap_condition_1537, ap_condition_1543, ap_condition_1549, ap_condition_1554)
    begin
        if (((icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_1554)) then 
                weights_3_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1549)) then 
                weights_3_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1380)) then 
                weights_3_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1369)) then 
                weights_3_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1543)) then 
                weights_3_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1357)) then 
                weights_3_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1537)) then 
                weights_3_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_3_address1 <= "XXXX";
            end if;
        else 
            weights_3_address1 <= "XXXX";
        end if; 
    end process;


    weights_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_3_ce0 <= ap_const_logic_1;
        else 
            weights_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weights_3_ce1 <= ap_const_logic_1;
        else 
            weights_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_4_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_4_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_4_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_4_address0 <= "XXXX";
            end if;
        else 
            weights_4_address0 <= "XXXX";
        end if; 
    end process;


    weights_4_address1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_2245, zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1357, ap_condition_1369, ap_condition_1397, ap_condition_1549, ap_condition_1559, ap_condition_1565, ap_condition_1570)
    begin
        if (((icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_1549)) then 
                weights_4_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1570)) then 
                weights_4_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1369)) then 
                weights_4_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1565)) then 
                weights_4_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1357)) then 
                weights_4_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1559)) then 
                weights_4_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1397)) then 
                weights_4_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_4_address1 <= "XXXX";
            end if;
        else 
            weights_4_address1 <= "XXXX";
        end if; 
    end process;


    weights_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_4_ce0 <= ap_const_logic_1;
        else 
            weights_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weights_4_ce1 <= ap_const_logic_1;
        else 
            weights_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_5_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_5_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_5_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_5_address0 <= "XXXX";
            end if;
        else 
            weights_5_address0 <= "XXXX";
        end if; 
    end process;


    weights_5_address1_assign_proc : process(zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1424, ap_condition_1413, ap_condition_1463, ap_condition_1475, ap_condition_1485, ap_condition_1575, ap_condition_1580, ap_condition_1585)
    begin
        if ((ap_const_boolean_1 = ap_condition_1413)) then
            if ((ap_const_boolean_1 = ap_condition_1585)) then 
                weights_5_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1580)) then 
                weights_5_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1475)) then 
                weights_5_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1424)) then 
                weights_5_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1463)) then 
                weights_5_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1575)) then 
                weights_5_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1485)) then 
                weights_5_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_5_address1 <= "XXXX";
            end if;
        else 
            weights_5_address1 <= "XXXX";
        end if; 
    end process;


    weights_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_5_ce0 <= ap_const_logic_1;
        else 
            weights_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weights_5_ce1 <= ap_const_logic_1;
        else 
            weights_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_6_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_6_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_6_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_6_address0 <= "XXXX";
            end if;
        else 
            weights_6_address0 <= "XXXX";
        end if; 
    end process;


    weights_6_address1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_2245, zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1357, ap_condition_1537, ap_condition_1543, ap_condition_1590, ap_condition_1595, ap_condition_1600, ap_condition_1605)
    begin
        if (((icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_1605)) then 
                weights_6_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1600)) then 
                weights_6_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1543)) then 
                weights_6_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1357)) then 
                weights_6_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1595)) then 
                weights_6_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1537)) then 
                weights_6_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1590)) then 
                weights_6_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_6_address1 <= "XXXX";
            end if;
        else 
            weights_6_address1 <= "XXXX";
        end if; 
    end process;


    weights_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_6_ce0 <= ap_const_logic_1;
        else 
            weights_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weights_6_ce1 <= ap_const_logic_1;
        else 
            weights_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_7_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_7_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_7_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_7_address0 <= "XXXX";
            end if;
        else 
            weights_7_address0 <= "XXXX";
        end if; 
    end process;


    weights_7_address1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_2245, zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1357, ap_condition_1380, ap_condition_1397, ap_condition_1537, ap_condition_1559, ap_condition_1600, ap_condition_1610)
    begin
        if (((icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_1600)) then 
                weights_7_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1610)) then 
                weights_7_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1357)) then 
                weights_7_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1559)) then 
                weights_7_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1537)) then 
                weights_7_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1397)) then 
                weights_7_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1380)) then 
                weights_7_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_7_address1 <= "XXXX";
            end if;
        else 
            weights_7_address1 <= "XXXX";
        end if; 
    end process;


    weights_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_7_ce0 <= ap_const_logic_1;
        else 
            weights_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_7_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weights_7_ce1 <= ap_const_logic_1;
        else 
            weights_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_8_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_8_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_8_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_8_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_8_address0 <= "XXXX";
            end if;
        else 
            weights_8_address0 <= "XXXX";
        end if; 
    end process;


    weights_8_address1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_2245, zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1369, ap_condition_1389, ap_condition_1397, ap_condition_1559, ap_condition_1595, ap_condition_1610, ap_condition_1614)
    begin
        if (((icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_1610)) then 
                weights_8_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1614)) then 
                weights_8_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1559)) then 
                weights_8_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1595)) then 
                weights_8_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1397)) then 
                weights_8_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1389)) then 
                weights_8_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1369)) then 
                weights_8_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_8_address1 <= "XXXX";
            end if;
        else 
            weights_8_address1 <= "XXXX";
        end if; 
    end process;


    weights_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_8_ce0 <= ap_const_logic_1;
        else 
            weights_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_8_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_9)) and not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            weights_8_ce1 <= ap_const_logic_1;
        else 
            weights_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_9_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_8_fu_1798_p1, ap_block_pp0_stage0, zext_ln22_9_fu_1903_p1, zext_ln22_12_fu_1954_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights_9_address0 <= zext_ln22_12_fu_1954_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights_9_address0 <= zext_ln22_9_fu_1903_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights_9_address0 <= zext_ln22_8_fu_1798_p1(4 - 1 downto 0);
            else 
                weights_9_address0 <= "XXXX";
            end if;
        else 
            weights_9_address0 <= "XXXX";
        end if; 
    end process;


    weights_9_address1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln16_reg_2245, zext_ln22_fu_1432_p1, zext_ln22_10_fu_1447_p1, zext_ln22_11_fu_1461_p1, zext_ln22_13_fu_1501_p1, zext_ln22_14_fu_1542_p1, zext_ln22_15_fu_1723_p1, zext_ln22_16_fu_1767_p1, ap_condition_1389, ap_condition_1537, ap_condition_1565, ap_condition_1590, ap_condition_1595, ap_condition_1614, ap_condition_1619)
    begin
        if (((icmp_ln16_reg_2245 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_1614)) then 
                weights_9_address1 <= zext_ln22_16_fu_1767_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1619)) then 
                weights_9_address1 <= zext_ln22_15_fu_1723_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1595)) then 
                weights_9_address1 <= zext_ln22_14_fu_1542_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1537)) then 
                weights_9_address1 <= zext_ln22_13_fu_1501_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1389)) then 
                weights_9_address1 <= zext_ln22_11_fu_1461_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1590)) then 
                weights_9_address1 <= zext_ln22_10_fu_1447_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1565)) then 
                weights_9_address1 <= zext_ln22_fu_1432_p1(4 - 1 downto 0);
            else 
                weights_9_address1 <= "XXXX";
            end if;
        else 
            weights_9_address1 <= "XXXX";
        end if; 
    end process;


    weights_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            weights_9_ce0 <= ap_const_logic_1;
        else 
            weights_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_9_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln16_reg_2245, select_ln22_reg_2255, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((not((select_ln22_reg_2255 = ap_const_lv4_8)) and not((select_ln22_reg_2255 = ap_const_lv4_7)) and not((select_ln22_reg_2255 = ap_const_lv4_6)) and not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_5)) and not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_4)) and not((select_ln22_reg_2255 = ap_const_lv4_3)) and not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_2)) and not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_1)) and not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not((select_ln22_reg_2255 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln16_reg_2245 = ap_const_lv1_0) and (select_ln22_reg_2255 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            weights_9_ce1 <= ap_const_logic_1;
        else 
            weights_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln16_2_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_ic_2),6));
    zext_ln16_fu_1424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ic_2_reg_2238),7));
    zext_ln22_10_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_reg_2269),64));
    zext_ln22_11_fu_1461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_reg_2274),64));
    zext_ln22_12_fu_1954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_1945_p4),64));
    zext_ln22_13_fu_1501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_1491_p4),64));
    zext_ln22_14_fu_1542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_1532_p4),64));
    zext_ln22_15_fu_1723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_1713_p4),64));
    zext_ln22_16_fu_1767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_1757_p4),64));
    zext_ln22_8_fu_1798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_1789_p4),64));
    zext_ln22_9_fu_1903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_1894_p4),64));
    zext_ln22_fu_1432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln22_fu_1427_p2),64));
end behav;
