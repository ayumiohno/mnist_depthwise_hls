// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MNIST_MNIST,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.331000,HLS_SYN_LAT=1735,HLS_SYN_TPT=1297,HLS_SYN_MEM=30,HLS_SYN_DSP=0,HLS_SYN_FF=30761,HLS_SYN_LUT=28240,HLS_VERSION=2022_1}" *)

module MNIST (
        ap_clk,
        ap_rst_n,
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        interrupt,
        istrm_TDATA,
        istrm_TKEEP,
        istrm_TSTRB,
        istrm_TUSER,
        istrm_TLAST,
        istrm_TID,
        istrm_TDEST,
        wstrm_TDATA,
        wstrm_TKEEP,
        wstrm_TSTRB,
        wstrm_TUSER,
        wstrm_TLAST,
        wstrm_TID,
        wstrm_TDEST,
        ostrm_TDATA,
        ostrm_TKEEP,
        ostrm_TSTRB,
        ostrm_TUSER,
        ostrm_TLAST,
        ostrm_TID,
        ostrm_TDEST,
        wstrm_TVALID,
        wstrm_TREADY,
        istrm_TVALID,
        istrm_TREADY,
        ostrm_TVALID,
        ostrm_TREADY
);

parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
output   interrupt;
input  [31:0] istrm_TDATA;
input  [3:0] istrm_TKEEP;
input  [3:0] istrm_TSTRB;
input  [1:0] istrm_TUSER;
input  [0:0] istrm_TLAST;
input  [4:0] istrm_TID;
input  [5:0] istrm_TDEST;
input  [31:0] wstrm_TDATA;
input  [3:0] wstrm_TKEEP;
input  [3:0] wstrm_TSTRB;
input  [1:0] wstrm_TUSER;
input  [0:0] wstrm_TLAST;
input  [4:0] wstrm_TID;
input  [5:0] wstrm_TDEST;
output  [31:0] ostrm_TDATA;
output  [3:0] ostrm_TKEEP;
output  [3:0] ostrm_TSTRB;
output  [1:0] ostrm_TUSER;
output  [0:0] ostrm_TLAST;
output  [4:0] ostrm_TID;
output  [5:0] ostrm_TDEST;
input   wstrm_TVALID;
output   wstrm_TREADY;
input   istrm_TVALID;
output   istrm_TREADY;
output   ostrm_TVALID;
input   ostrm_TREADY;

 reg    ap_rst_n_inv;
wire   [31:0] depth1_w_i_q0;
wire   [31:0] depth1_w_i_q1;
wire   [31:0] depth1_w_t_q0;
wire   [31:0] depth1_w_t_q1;
wire   [31:0] point1_w_i_q0;
wire   [31:0] point1_w_i_q1;
wire   [31:0] point1_w_t_q0;
wire   [31:0] point1_w_t_q1;
wire   [31:0] depth2_w_i_q0;
wire   [31:0] depth2_w_i_q1;
wire   [31:0] depth2_w_t_q0;
wire   [31:0] depth2_w_t_q1;
wire   [31:0] point2_w_i_q0;
wire   [31:0] point2_w_i_q1;
wire   [31:0] point2_w_t_q0;
wire   [31:0] point2_w_t_q1;
wire   [31:0] point2_w_1_i_q0;
wire   [31:0] point2_w_1_i_q1;
wire   [31:0] point2_w_1_t_q0;
wire   [31:0] point2_w_1_t_q1;
wire   [31:0] point2_w_2_i_q0;
wire   [31:0] point2_w_2_i_q1;
wire   [31:0] point2_w_2_t_q0;
wire   [31:0] point2_w_2_t_q1;
wire   [31:0] point2_w_3_i_q0;
wire   [31:0] point2_w_3_i_q1;
wire   [31:0] point2_w_3_t_q0;
wire   [31:0] point2_w_3_t_q1;
wire   [31:0] point2_w_4_i_q0;
wire   [31:0] point2_w_4_i_q1;
wire   [31:0] point2_w_4_t_q0;
wire   [31:0] point2_w_4_t_q1;
wire   [31:0] point2_w_5_i_q0;
wire   [31:0] point2_w_5_i_q1;
wire   [31:0] point2_w_5_t_q0;
wire   [31:0] point2_w_5_t_q1;
wire   [31:0] point2_w_6_i_q0;
wire   [31:0] point2_w_6_i_q1;
wire   [31:0] point2_w_6_t_q0;
wire   [31:0] point2_w_6_t_q1;
wire   [31:0] point2_w_7_i_q0;
wire   [31:0] point2_w_7_i_q1;
wire   [31:0] point2_w_7_t_q0;
wire   [31:0] point2_w_7_t_q1;
wire   [31:0] point2_w_8_i_q0;
wire   [31:0] point2_w_8_i_q1;
wire   [31:0] point2_w_8_t_q0;
wire   [31:0] point2_w_8_t_q1;
wire   [31:0] point2_w_9_i_q0;
wire   [31:0] point2_w_9_i_q1;
wire   [31:0] point2_w_9_t_q0;
wire   [31:0] point2_w_9_t_q1;
wire   [31:0] point2_w_10_i_q0;
wire   [31:0] point2_w_10_i_q1;
wire   [31:0] point2_w_10_t_q0;
wire   [31:0] point2_w_10_t_q1;
wire   [31:0] point2_w_11_i_q0;
wire   [31:0] point2_w_11_i_q1;
wire   [31:0] point2_w_11_t_q0;
wire   [31:0] point2_w_11_t_q1;
wire   [31:0] point2_w_12_i_q0;
wire   [31:0] point2_w_12_i_q1;
wire   [31:0] point2_w_12_t_q0;
wire   [31:0] point2_w_12_t_q1;
wire   [31:0] depth3_w_i_q0;
wire   [31:0] depth3_w_i_q1;
wire   [31:0] depth3_w_t_q0;
wire   [31:0] depth3_w_t_q1;
wire   [31:0] depth3_w_1_i_q0;
wire   [31:0] depth3_w_1_i_q1;
wire   [31:0] depth3_w_1_t_q0;
wire   [31:0] depth3_w_1_t_q1;
wire   [31:0] depth3_w_2_i_q0;
wire   [31:0] depth3_w_2_i_q1;
wire   [31:0] depth3_w_2_t_q0;
wire   [31:0] depth3_w_2_t_q1;
wire   [31:0] depth3_w_3_i_q0;
wire   [31:0] depth3_w_3_i_q1;
wire   [31:0] depth3_w_3_t_q0;
wire   [31:0] depth3_w_3_t_q1;
wire   [31:0] depth3_w_4_i_q0;
wire   [31:0] depth3_w_4_i_q1;
wire   [31:0] depth3_w_4_t_q0;
wire   [31:0] depth3_w_4_t_q1;
wire   [31:0] depth3_w_5_i_q0;
wire   [31:0] depth3_w_5_i_q1;
wire   [31:0] depth3_w_5_t_q0;
wire   [31:0] depth3_w_5_t_q1;
wire   [31:0] depth3_w_6_i_q0;
wire   [31:0] depth3_w_6_i_q1;
wire   [31:0] depth3_w_6_t_q0;
wire   [31:0] depth3_w_6_t_q1;
wire   [31:0] depth3_w_7_i_q0;
wire   [31:0] depth3_w_7_i_q1;
wire   [31:0] depth3_w_7_t_q0;
wire   [31:0] depth3_w_7_t_q1;
wire   [31:0] point3_w_i_q0;
wire   [31:0] point3_w_i_q1;
wire   [31:0] point3_w_t_q0;
wire   [31:0] point3_w_t_q1;
wire   [31:0] point3_w_1_i_q0;
wire   [31:0] point3_w_1_i_q1;
wire   [31:0] point3_w_1_t_q0;
wire   [31:0] point3_w_1_t_q1;
wire   [31:0] point3_w_2_i_q0;
wire   [31:0] point3_w_2_i_q1;
wire   [31:0] point3_w_2_t_q0;
wire   [31:0] point3_w_2_t_q1;
wire   [31:0] point3_w_3_i_q0;
wire   [31:0] point3_w_3_i_q1;
wire   [31:0] point3_w_3_t_q0;
wire   [31:0] point3_w_3_t_q1;
wire   [31:0] point3_w_4_i_q0;
wire   [31:0] point3_w_4_i_q1;
wire   [31:0] point3_w_4_t_q0;
wire   [31:0] point3_w_4_t_q1;
wire   [31:0] point3_w_5_i_q0;
wire   [31:0] point3_w_5_i_q1;
wire   [31:0] point3_w_5_t_q0;
wire   [31:0] point3_w_5_t_q1;
wire   [31:0] point3_w_6_i_q0;
wire   [31:0] point3_w_6_i_q1;
wire   [31:0] point3_w_6_t_q0;
wire   [31:0] point3_w_6_t_q1;
wire   [31:0] point3_w_7_i_q0;
wire   [31:0] point3_w_7_i_q1;
wire   [31:0] point3_w_7_t_q0;
wire   [31:0] point3_w_7_t_q1;
wire   [31:0] point3_w_8_i_q0;
wire   [31:0] point3_w_8_i_q1;
wire   [31:0] point3_w_8_t_q0;
wire   [31:0] point3_w_8_t_q1;
wire   [31:0] point3_w_9_i_q0;
wire   [31:0] point3_w_9_i_q1;
wire   [31:0] point3_w_9_t_q0;
wire   [31:0] point3_w_9_t_q1;
wire   [31:0] point3_w_10_i_q0;
wire   [31:0] point3_w_10_i_q1;
wire   [31:0] point3_w_10_t_q0;
wire   [31:0] point3_w_10_t_q1;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    LoadWeights_U0_ap_start;
wire    LoadWeights_U0_ap_done;
wire    LoadWeights_U0_ap_continue;
wire    LoadWeights_U0_ap_idle;
wire    LoadWeights_U0_ap_ready;
wire    LoadWeights_U0_wstrm_TREADY;
wire   [3:0] LoadWeights_U0_depth1_address0;
wire    LoadWeights_U0_depth1_ce0;
wire    LoadWeights_U0_depth1_we0;
wire   [31:0] LoadWeights_U0_depth1_d0;
wire   [1:0] LoadWeights_U0_point1_address0;
wire    LoadWeights_U0_point1_ce0;
wire    LoadWeights_U0_point1_we0;
wire   [31:0] LoadWeights_U0_point1_d0;
wire   [5:0] LoadWeights_U0_depth2_address0;
wire    LoadWeights_U0_depth2_ce0;
wire    LoadWeights_U0_depth2_we0;
wire   [31:0] LoadWeights_U0_depth2_d0;
wire   [1:0] LoadWeights_U0_point2_0_address0;
wire    LoadWeights_U0_point2_0_ce0;
wire    LoadWeights_U0_point2_0_we0;
wire   [31:0] LoadWeights_U0_point2_0_d0;
wire   [1:0] LoadWeights_U0_point2_1_address0;
wire    LoadWeights_U0_point2_1_ce0;
wire    LoadWeights_U0_point2_1_we0;
wire   [31:0] LoadWeights_U0_point2_1_d0;
wire   [1:0] LoadWeights_U0_point2_2_address0;
wire    LoadWeights_U0_point2_2_ce0;
wire    LoadWeights_U0_point2_2_we0;
wire   [31:0] LoadWeights_U0_point2_2_d0;
wire   [1:0] LoadWeights_U0_point2_3_address0;
wire    LoadWeights_U0_point2_3_ce0;
wire    LoadWeights_U0_point2_3_we0;
wire   [31:0] LoadWeights_U0_point2_3_d0;
wire   [1:0] LoadWeights_U0_point2_4_address0;
wire    LoadWeights_U0_point2_4_ce0;
wire    LoadWeights_U0_point2_4_we0;
wire   [31:0] LoadWeights_U0_point2_4_d0;
wire   [1:0] LoadWeights_U0_point2_5_address0;
wire    LoadWeights_U0_point2_5_ce0;
wire    LoadWeights_U0_point2_5_we0;
wire   [31:0] LoadWeights_U0_point2_5_d0;
wire   [1:0] LoadWeights_U0_point2_6_address0;
wire    LoadWeights_U0_point2_6_ce0;
wire    LoadWeights_U0_point2_6_we0;
wire   [31:0] LoadWeights_U0_point2_6_d0;
wire   [1:0] LoadWeights_U0_point2_7_address0;
wire    LoadWeights_U0_point2_7_ce0;
wire    LoadWeights_U0_point2_7_we0;
wire   [31:0] LoadWeights_U0_point2_7_d0;
wire   [1:0] LoadWeights_U0_point2_8_address0;
wire    LoadWeights_U0_point2_8_ce0;
wire    LoadWeights_U0_point2_8_we0;
wire   [31:0] LoadWeights_U0_point2_8_d0;
wire   [1:0] LoadWeights_U0_point2_9_address0;
wire    LoadWeights_U0_point2_9_ce0;
wire    LoadWeights_U0_point2_9_we0;
wire   [31:0] LoadWeights_U0_point2_9_d0;
wire   [1:0] LoadWeights_U0_point2_10_address0;
wire    LoadWeights_U0_point2_10_ce0;
wire    LoadWeights_U0_point2_10_we0;
wire   [31:0] LoadWeights_U0_point2_10_d0;
wire   [1:0] LoadWeights_U0_point2_11_address0;
wire    LoadWeights_U0_point2_11_ce0;
wire    LoadWeights_U0_point2_11_we0;
wire   [31:0] LoadWeights_U0_point2_11_d0;
wire   [1:0] LoadWeights_U0_point2_12_address0;
wire    LoadWeights_U0_point2_12_ce0;
wire    LoadWeights_U0_point2_12_we0;
wire   [31:0] LoadWeights_U0_point2_12_d0;
wire   [4:0] LoadWeights_U0_depth3_0_address0;
wire    LoadWeights_U0_depth3_0_ce0;
wire    LoadWeights_U0_depth3_0_we0;
wire   [31:0] LoadWeights_U0_depth3_0_d0;
wire   [4:0] LoadWeights_U0_depth3_1_address0;
wire    LoadWeights_U0_depth3_1_ce0;
wire    LoadWeights_U0_depth3_1_we0;
wire   [31:0] LoadWeights_U0_depth3_1_d0;
wire   [4:0] LoadWeights_U0_depth3_2_address0;
wire    LoadWeights_U0_depth3_2_ce0;
wire    LoadWeights_U0_depth3_2_we0;
wire   [31:0] LoadWeights_U0_depth3_2_d0;
wire   [4:0] LoadWeights_U0_depth3_3_address0;
wire    LoadWeights_U0_depth3_3_ce0;
wire    LoadWeights_U0_depth3_3_we0;
wire   [31:0] LoadWeights_U0_depth3_3_d0;
wire   [4:0] LoadWeights_U0_depth3_4_address0;
wire    LoadWeights_U0_depth3_4_ce0;
wire    LoadWeights_U0_depth3_4_we0;
wire   [31:0] LoadWeights_U0_depth3_4_d0;
wire   [4:0] LoadWeights_U0_depth3_5_address0;
wire    LoadWeights_U0_depth3_5_ce0;
wire    LoadWeights_U0_depth3_5_we0;
wire   [31:0] LoadWeights_U0_depth3_5_d0;
wire   [4:0] LoadWeights_U0_depth3_6_address0;
wire    LoadWeights_U0_depth3_6_ce0;
wire    LoadWeights_U0_depth3_6_we0;
wire   [31:0] LoadWeights_U0_depth3_6_d0;
wire   [4:0] LoadWeights_U0_depth3_7_address0;
wire    LoadWeights_U0_depth3_7_ce0;
wire    LoadWeights_U0_depth3_7_we0;
wire   [31:0] LoadWeights_U0_depth3_7_d0;
wire   [3:0] LoadWeights_U0_point3_0_address0;
wire    LoadWeights_U0_point3_0_ce0;
wire    LoadWeights_U0_point3_0_we0;
wire   [31:0] LoadWeights_U0_point3_0_d0;
wire   [3:0] LoadWeights_U0_point3_1_address0;
wire    LoadWeights_U0_point3_1_ce0;
wire    LoadWeights_U0_point3_1_we0;
wire   [31:0] LoadWeights_U0_point3_1_d0;
wire   [3:0] LoadWeights_U0_point3_2_address0;
wire    LoadWeights_U0_point3_2_ce0;
wire    LoadWeights_U0_point3_2_we0;
wire   [31:0] LoadWeights_U0_point3_2_d0;
wire   [3:0] LoadWeights_U0_point3_3_address0;
wire    LoadWeights_U0_point3_3_ce0;
wire    LoadWeights_U0_point3_3_we0;
wire   [31:0] LoadWeights_U0_point3_3_d0;
wire   [3:0] LoadWeights_U0_point3_4_address0;
wire    LoadWeights_U0_point3_4_ce0;
wire    LoadWeights_U0_point3_4_we0;
wire   [31:0] LoadWeights_U0_point3_4_d0;
wire   [3:0] LoadWeights_U0_point3_5_address0;
wire    LoadWeights_U0_point3_5_ce0;
wire    LoadWeights_U0_point3_5_we0;
wire   [31:0] LoadWeights_U0_point3_5_d0;
wire   [3:0] LoadWeights_U0_point3_6_address0;
wire    LoadWeights_U0_point3_6_ce0;
wire    LoadWeights_U0_point3_6_we0;
wire   [31:0] LoadWeights_U0_point3_6_d0;
wire   [3:0] LoadWeights_U0_point3_7_address0;
wire    LoadWeights_U0_point3_7_ce0;
wire    LoadWeights_U0_point3_7_we0;
wire   [31:0] LoadWeights_U0_point3_7_d0;
wire   [3:0] LoadWeights_U0_point3_8_address0;
wire    LoadWeights_U0_point3_8_ce0;
wire    LoadWeights_U0_point3_8_we0;
wire   [31:0] LoadWeights_U0_point3_8_d0;
wire   [3:0] LoadWeights_U0_point3_9_address0;
wire    LoadWeights_U0_point3_9_ce0;
wire    LoadWeights_U0_point3_9_we0;
wire   [31:0] LoadWeights_U0_point3_9_d0;
wire   [3:0] LoadWeights_U0_point3_10_address0;
wire    LoadWeights_U0_point3_10_ce0;
wire    LoadWeights_U0_point3_10_we0;
wire   [31:0] LoadWeights_U0_point3_10_d0;
wire    ap_channel_done_point3_w_10;
wire    LoadWeights_U0_point3_10_full_n;
reg    ap_sync_reg_channel_write_point3_w_10;
wire    ap_sync_channel_write_point3_w_10;
wire    ap_channel_done_point3_w_9;
wire    LoadWeights_U0_point3_9_full_n;
reg    ap_sync_reg_channel_write_point3_w_9;
wire    ap_sync_channel_write_point3_w_9;
wire    ap_channel_done_point3_w_8;
wire    LoadWeights_U0_point3_8_full_n;
reg    ap_sync_reg_channel_write_point3_w_8;
wire    ap_sync_channel_write_point3_w_8;
wire    ap_channel_done_point3_w_7;
wire    LoadWeights_U0_point3_7_full_n;
reg    ap_sync_reg_channel_write_point3_w_7;
wire    ap_sync_channel_write_point3_w_7;
wire    ap_channel_done_point3_w_6;
wire    LoadWeights_U0_point3_6_full_n;
reg    ap_sync_reg_channel_write_point3_w_6;
wire    ap_sync_channel_write_point3_w_6;
wire    ap_channel_done_point3_w_5;
wire    LoadWeights_U0_point3_5_full_n;
reg    ap_sync_reg_channel_write_point3_w_5;
wire    ap_sync_channel_write_point3_w_5;
wire    ap_channel_done_point3_w_4;
wire    LoadWeights_U0_point3_4_full_n;
reg    ap_sync_reg_channel_write_point3_w_4;
wire    ap_sync_channel_write_point3_w_4;
wire    ap_channel_done_point3_w_3;
wire    LoadWeights_U0_point3_3_full_n;
reg    ap_sync_reg_channel_write_point3_w_3;
wire    ap_sync_channel_write_point3_w_3;
wire    ap_channel_done_point3_w_2;
wire    LoadWeights_U0_point3_2_full_n;
reg    ap_sync_reg_channel_write_point3_w_2;
wire    ap_sync_channel_write_point3_w_2;
wire    ap_channel_done_point3_w_1;
wire    LoadWeights_U0_point3_1_full_n;
reg    ap_sync_reg_channel_write_point3_w_1;
wire    ap_sync_channel_write_point3_w_1;
wire    ap_channel_done_point3_w;
wire    LoadWeights_U0_point3_0_full_n;
reg    ap_sync_reg_channel_write_point3_w;
wire    ap_sync_channel_write_point3_w;
wire    ap_channel_done_depth3_w_7;
wire    LoadWeights_U0_depth3_7_full_n;
reg    ap_sync_reg_channel_write_depth3_w_7;
wire    ap_sync_channel_write_depth3_w_7;
wire    ap_channel_done_depth3_w_6;
wire    LoadWeights_U0_depth3_6_full_n;
reg    ap_sync_reg_channel_write_depth3_w_6;
wire    ap_sync_channel_write_depth3_w_6;
wire    ap_channel_done_depth3_w_5;
wire    LoadWeights_U0_depth3_5_full_n;
reg    ap_sync_reg_channel_write_depth3_w_5;
wire    ap_sync_channel_write_depth3_w_5;
wire    ap_channel_done_depth3_w_4;
wire    LoadWeights_U0_depth3_4_full_n;
reg    ap_sync_reg_channel_write_depth3_w_4;
wire    ap_sync_channel_write_depth3_w_4;
wire    ap_channel_done_depth3_w_3;
wire    LoadWeights_U0_depth3_3_full_n;
reg    ap_sync_reg_channel_write_depth3_w_3;
wire    ap_sync_channel_write_depth3_w_3;
wire    ap_channel_done_depth3_w_2;
wire    LoadWeights_U0_depth3_2_full_n;
reg    ap_sync_reg_channel_write_depth3_w_2;
wire    ap_sync_channel_write_depth3_w_2;
wire    ap_channel_done_depth3_w_1;
wire    LoadWeights_U0_depth3_1_full_n;
reg    ap_sync_reg_channel_write_depth3_w_1;
wire    ap_sync_channel_write_depth3_w_1;
wire    ap_channel_done_depth3_w;
wire    LoadWeights_U0_depth3_0_full_n;
reg    ap_sync_reg_channel_write_depth3_w;
wire    ap_sync_channel_write_depth3_w;
wire    ap_channel_done_point2_w_12;
wire    LoadWeights_U0_point2_12_full_n;
reg    ap_sync_reg_channel_write_point2_w_12;
wire    ap_sync_channel_write_point2_w_12;
wire    ap_channel_done_point2_w_11;
wire    LoadWeights_U0_point2_11_full_n;
reg    ap_sync_reg_channel_write_point2_w_11;
wire    ap_sync_channel_write_point2_w_11;
wire    ap_channel_done_point2_w_10;
wire    LoadWeights_U0_point2_10_full_n;
reg    ap_sync_reg_channel_write_point2_w_10;
wire    ap_sync_channel_write_point2_w_10;
wire    ap_channel_done_point2_w_9;
wire    LoadWeights_U0_point2_9_full_n;
reg    ap_sync_reg_channel_write_point2_w_9;
wire    ap_sync_channel_write_point2_w_9;
wire    ap_channel_done_point2_w_8;
wire    LoadWeights_U0_point2_8_full_n;
reg    ap_sync_reg_channel_write_point2_w_8;
wire    ap_sync_channel_write_point2_w_8;
wire    ap_channel_done_point2_w_7;
wire    LoadWeights_U0_point2_7_full_n;
reg    ap_sync_reg_channel_write_point2_w_7;
wire    ap_sync_channel_write_point2_w_7;
wire    ap_channel_done_point2_w_6;
wire    LoadWeights_U0_point2_6_full_n;
reg    ap_sync_reg_channel_write_point2_w_6;
wire    ap_sync_channel_write_point2_w_6;
wire    ap_channel_done_point2_w_5;
wire    LoadWeights_U0_point2_5_full_n;
reg    ap_sync_reg_channel_write_point2_w_5;
wire    ap_sync_channel_write_point2_w_5;
wire    ap_channel_done_point2_w_4;
wire    LoadWeights_U0_point2_4_full_n;
reg    ap_sync_reg_channel_write_point2_w_4;
wire    ap_sync_channel_write_point2_w_4;
wire    ap_channel_done_point2_w_3;
wire    LoadWeights_U0_point2_3_full_n;
reg    ap_sync_reg_channel_write_point2_w_3;
wire    ap_sync_channel_write_point2_w_3;
wire    ap_channel_done_point2_w_2;
wire    LoadWeights_U0_point2_2_full_n;
reg    ap_sync_reg_channel_write_point2_w_2;
wire    ap_sync_channel_write_point2_w_2;
wire    ap_channel_done_point2_w_1;
wire    LoadWeights_U0_point2_1_full_n;
reg    ap_sync_reg_channel_write_point2_w_1;
wire    ap_sync_channel_write_point2_w_1;
wire    ap_channel_done_point2_w;
wire    LoadWeights_U0_point2_0_full_n;
reg    ap_sync_reg_channel_write_point2_w;
wire    ap_sync_channel_write_point2_w;
wire    ap_channel_done_depth2_w;
wire    LoadWeights_U0_depth2_full_n;
reg    ap_sync_reg_channel_write_depth2_w;
wire    ap_sync_channel_write_depth2_w;
wire    ap_channel_done_point1_w;
wire    LoadWeights_U0_point1_full_n;
reg    ap_sync_reg_channel_write_point1_w;
wire    ap_sync_channel_write_point1_w;
wire    ap_channel_done_depth1_w;
wire    LoadWeights_U0_depth1_full_n;
reg    ap_sync_reg_channel_write_depth1_w;
wire    ap_sync_channel_write_depth1_w;
wire    LoadInput_U0_ap_start;
wire    LoadInput_U0_ap_done;
wire    LoadInput_U0_ap_continue;
wire    LoadInput_U0_ap_idle;
wire    LoadInput_U0_ap_ready;
wire   [31:0] LoadInput_U0_input74_din;
wire    LoadInput_U0_input74_write;
wire    LoadInput_U0_istrm_TREADY;
wire   [3:0] LoadInput_U0_ap_return_0;
wire   [3:0] LoadInput_U0_ap_return_1;
wire   [1:0] LoadInput_U0_ap_return_2;
wire   [4:0] LoadInput_U0_ap_return_3;
wire   [5:0] LoadInput_U0_ap_return_4;
wire    ap_channel_done_pix_dest_V;
wire    pix_dest_V_full_n;
reg    ap_sync_reg_channel_write_pix_dest_V;
wire    ap_sync_channel_write_pix_dest_V;
wire    ap_channel_done_pix_id_V;
wire    pix_id_V_full_n;
reg    ap_sync_reg_channel_write_pix_id_V;
wire    ap_sync_channel_write_pix_id_V;
wire    ap_channel_done_pix_user_V;
wire    pix_user_V_full_n;
reg    ap_sync_reg_channel_write_pix_user_V;
wire    ap_sync_channel_write_pix_user_V;
wire    ap_channel_done_pix_strb_V;
wire    pix_strb_V_full_n;
reg    ap_sync_reg_channel_write_pix_strb_V;
wire    ap_sync_channel_write_pix_strb_V;
wire    ap_channel_done_pix_keep_V;
wire    pix_keep_V_full_n;
reg    ap_sync_reg_channel_write_pix_keep_V;
wire    ap_sync_channel_write_pix_keep_V;
wire    DepthwiseConv2d_28_10_1_3_U0_ap_start;
wire    DepthwiseConv2d_28_10_1_3_U0_ap_done;
wire    DepthwiseConv2d_28_10_1_3_U0_ap_continue;
wire    DepthwiseConv2d_28_10_1_3_U0_ap_idle;
wire    DepthwiseConv2d_28_10_1_3_U0_ap_ready;
wire    DepthwiseConv2d_28_10_1_3_U0_input74_read;
wire   [3:0] DepthwiseConv2d_28_10_1_3_U0_weights_address0;
wire    DepthwiseConv2d_28_10_1_3_U0_weights_ce0;
wire   [3:0] DepthwiseConv2d_28_10_1_3_U0_weights_address1;
wire    DepthwiseConv2d_28_10_1_3_U0_weights_ce1;
wire   [31:0] DepthwiseConv2d_28_10_1_3_U0_depth1_o75_din;
wire    DepthwiseConv2d_28_10_1_3_U0_depth1_o75_write;
wire    PointwiseConv2d_10_1_4_U0_ap_start;
wire    PointwiseConv2d_10_1_4_U0_ap_done;
wire    PointwiseConv2d_10_1_4_U0_ap_continue;
wire    PointwiseConv2d_10_1_4_U0_ap_idle;
wire    PointwiseConv2d_10_1_4_U0_ap_ready;
wire    PointwiseConv2d_10_1_4_U0_depth1_o75_read;
wire   [1:0] PointwiseConv2d_10_1_4_U0_weights_address0;
wire    PointwiseConv2d_10_1_4_U0_weights_ce0;
wire   [1:0] PointwiseConv2d_10_1_4_U0_weights_address1;
wire    PointwiseConv2d_10_1_4_U0_weights_ce1;
wire   [31:0] PointwiseConv2d_10_1_4_U0_point1_o76_din;
wire    PointwiseConv2d_10_1_4_U0_point1_o76_write;
wire    DepthwiseConv2d_10_4_4_3_U0_ap_start;
wire    DepthwiseConv2d_10_4_4_3_U0_ap_done;
wire    DepthwiseConv2d_10_4_4_3_U0_ap_continue;
wire    DepthwiseConv2d_10_4_4_3_U0_ap_idle;
wire    DepthwiseConv2d_10_4_4_3_U0_ap_ready;
wire    DepthwiseConv2d_10_4_4_3_U0_point1_o76_read;
wire   [5:0] DepthwiseConv2d_10_4_4_3_U0_weights_address0;
wire    DepthwiseConv2d_10_4_4_3_U0_weights_ce0;
wire   [5:0] DepthwiseConv2d_10_4_4_3_U0_weights_address1;
wire    DepthwiseConv2d_10_4_4_3_U0_weights_ce1;
wire   [31:0] DepthwiseConv2d_10_4_4_3_U0_depth2_o77_din;
wire    DepthwiseConv2d_10_4_4_3_U0_depth2_o77_write;
wire    PointwiseConv2d_4_4_12_U0_ap_start;
wire    PointwiseConv2d_4_4_12_U0_ap_done;
wire    PointwiseConv2d_4_4_12_U0_ap_continue;
wire    PointwiseConv2d_4_4_12_U0_ap_idle;
wire    PointwiseConv2d_4_4_12_U0_ap_ready;
wire    PointwiseConv2d_4_4_12_U0_depth2_o77_read;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_0_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_0_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_0_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_0_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_1_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_1_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_1_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_1_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_2_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_2_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_2_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_2_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_3_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_3_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_3_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_3_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_4_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_4_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_4_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_4_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_5_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_5_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_5_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_5_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_6_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_6_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_6_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_6_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_7_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_7_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_7_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_7_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_8_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_8_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_8_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_8_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_9_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_9_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_9_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_9_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_10_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_10_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_10_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_10_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_11_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_11_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_11_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_11_ce1;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_12_address0;
wire    PointwiseConv2d_4_4_12_U0_weights_12_ce0;
wire   [1:0] PointwiseConv2d_4_4_12_U0_weights_12_address1;
wire    PointwiseConv2d_4_4_12_U0_weights_12_ce1;
wire   [31:0] PointwiseConv2d_4_4_12_U0_point2_o78_din;
wire    PointwiseConv2d_4_4_12_U0_point2_o78_write;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_ap_start;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_ap_done;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_ap_continue;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_ap_idle;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_point2_o78_read;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address0;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce0;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address1;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce1;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address0;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce0;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address1;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce1;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address0;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce0;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address1;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce1;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address0;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce0;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address1;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce1;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address0;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce0;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address1;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce1;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address0;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce0;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address1;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce1;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address0;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce0;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address1;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce1;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address0;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce0;
wire   [4:0] DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address1;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce1;
wire   [31:0] DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_din;
wire    DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_write;
wire    PointwiseConv2d_1_12_10_U0_ap_start;
wire    PointwiseConv2d_1_12_10_U0_ap_done;
wire    PointwiseConv2d_1_12_10_U0_ap_continue;
wire    PointwiseConv2d_1_12_10_U0_ap_idle;
wire    PointwiseConv2d_1_12_10_U0_ap_ready;
wire    PointwiseConv2d_1_12_10_U0_depth3_o79_read;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_0_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_0_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_0_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_0_ce1;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_1_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_1_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_1_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_1_ce1;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_2_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_2_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_2_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_2_ce1;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_3_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_3_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_3_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_3_ce1;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_4_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_4_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_4_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_4_ce1;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_5_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_5_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_5_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_5_ce1;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_6_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_6_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_6_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_6_ce1;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_7_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_7_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_7_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_7_ce1;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_8_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_8_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_8_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_8_ce1;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_9_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_9_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_9_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_9_ce1;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_10_address0;
wire    PointwiseConv2d_1_12_10_U0_weights_10_ce0;
wire   [3:0] PointwiseConv2d_1_12_10_U0_weights_10_address1;
wire    PointwiseConv2d_1_12_10_U0_weights_10_ce1;
wire   [31:0] PointwiseConv2d_1_12_10_U0_point3_o80_din;
wire    PointwiseConv2d_1_12_10_U0_point3_o80_write;
wire    Loop_VITIS_LOOP_226_1_proc6_U0_ap_start;
wire    Loop_VITIS_LOOP_226_1_proc6_U0_ap_done;
wire    Loop_VITIS_LOOP_226_1_proc6_U0_ap_continue;
wire    Loop_VITIS_LOOP_226_1_proc6_U0_ap_idle;
wire    Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready;
wire    Loop_VITIS_LOOP_226_1_proc6_U0_point3_o_read;
wire   [31:0] Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDATA;
wire    Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TVALID;
wire   [3:0] Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TKEEP;
wire   [3:0] Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TSTRB;
wire   [1:0] Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TUSER;
wire   [0:0] Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TLAST;
wire   [4:0] Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TID;
wire   [5:0] Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDEST;
wire    depth1_w_i_full_n;
wire    depth1_w_t_empty_n;
wire    point1_w_i_full_n;
wire    point1_w_t_empty_n;
wire    depth2_w_i_full_n;
wire    depth2_w_t_empty_n;
wire    point2_w_i_full_n;
wire    point2_w_t_empty_n;
wire    point2_w_1_i_full_n;
wire    point2_w_1_t_empty_n;
wire    point2_w_2_i_full_n;
wire    point2_w_2_t_empty_n;
wire    point2_w_3_i_full_n;
wire    point2_w_3_t_empty_n;
wire    point2_w_4_i_full_n;
wire    point2_w_4_t_empty_n;
wire    point2_w_5_i_full_n;
wire    point2_w_5_t_empty_n;
wire    point2_w_6_i_full_n;
wire    point2_w_6_t_empty_n;
wire    point2_w_7_i_full_n;
wire    point2_w_7_t_empty_n;
wire    point2_w_8_i_full_n;
wire    point2_w_8_t_empty_n;
wire    point2_w_9_i_full_n;
wire    point2_w_9_t_empty_n;
wire    point2_w_10_i_full_n;
wire    point2_w_10_t_empty_n;
wire    point2_w_11_i_full_n;
wire    point2_w_11_t_empty_n;
wire    point2_w_12_i_full_n;
wire    point2_w_12_t_empty_n;
wire    depth3_w_i_full_n;
wire    depth3_w_t_empty_n;
wire    depth3_w_1_i_full_n;
wire    depth3_w_1_t_empty_n;
wire    depth3_w_2_i_full_n;
wire    depth3_w_2_t_empty_n;
wire    depth3_w_3_i_full_n;
wire    depth3_w_3_t_empty_n;
wire    depth3_w_4_i_full_n;
wire    depth3_w_4_t_empty_n;
wire    depth3_w_5_i_full_n;
wire    depth3_w_5_t_empty_n;
wire    depth3_w_6_i_full_n;
wire    depth3_w_6_t_empty_n;
wire    depth3_w_7_i_full_n;
wire    depth3_w_7_t_empty_n;
wire    point3_w_i_full_n;
wire    point3_w_t_empty_n;
wire    point3_w_1_i_full_n;
wire    point3_w_1_t_empty_n;
wire    point3_w_2_i_full_n;
wire    point3_w_2_t_empty_n;
wire    point3_w_3_i_full_n;
wire    point3_w_3_t_empty_n;
wire    point3_w_4_i_full_n;
wire    point3_w_4_t_empty_n;
wire    point3_w_5_i_full_n;
wire    point3_w_5_t_empty_n;
wire    point3_w_6_i_full_n;
wire    point3_w_6_t_empty_n;
wire    point3_w_7_i_full_n;
wire    point3_w_7_t_empty_n;
wire    point3_w_8_i_full_n;
wire    point3_w_8_t_empty_n;
wire    point3_w_9_i_full_n;
wire    point3_w_9_t_empty_n;
wire    point3_w_10_i_full_n;
wire    point3_w_10_t_empty_n;
wire    input_full_n;
wire   [31:0] input_dout;
wire   [1:0] input_num_data_valid;
wire   [1:0] input_fifo_cap;
wire    input_empty_n;
wire   [3:0] pix_keep_V_dout;
wire   [3:0] pix_keep_V_num_data_valid;
wire   [3:0] pix_keep_V_fifo_cap;
wire    pix_keep_V_empty_n;
wire   [3:0] pix_strb_V_dout;
wire   [3:0] pix_strb_V_num_data_valid;
wire   [3:0] pix_strb_V_fifo_cap;
wire    pix_strb_V_empty_n;
wire   [1:0] pix_user_V_dout;
wire   [3:0] pix_user_V_num_data_valid;
wire   [3:0] pix_user_V_fifo_cap;
wire    pix_user_V_empty_n;
wire   [4:0] pix_id_V_dout;
wire   [3:0] pix_id_V_num_data_valid;
wire   [3:0] pix_id_V_fifo_cap;
wire    pix_id_V_empty_n;
wire   [5:0] pix_dest_V_dout;
wire   [3:0] pix_dest_V_num_data_valid;
wire   [3:0] pix_dest_V_fifo_cap;
wire    pix_dest_V_empty_n;
wire    depth1_o_full_n;
wire   [31:0] depth1_o_dout;
wire   [1:0] depth1_o_num_data_valid;
wire   [1:0] depth1_o_fifo_cap;
wire    depth1_o_empty_n;
wire    point1_o_full_n;
wire   [31:0] point1_o_dout;
wire   [1:0] point1_o_num_data_valid;
wire   [1:0] point1_o_fifo_cap;
wire    point1_o_empty_n;
wire    depth2_o_full_n;
wire   [31:0] depth2_o_dout;
wire   [1:0] depth2_o_num_data_valid;
wire   [1:0] depth2_o_fifo_cap;
wire    depth2_o_empty_n;
wire    point2_o_full_n;
wire   [31:0] point2_o_dout;
wire   [1:0] point2_o_num_data_valid;
wire   [1:0] point2_o_fifo_cap;
wire    point2_o_empty_n;
wire    depth3_o_full_n;
wire   [31:0] depth3_o_dout;
wire   [1:0] depth3_o_num_data_valid;
wire   [1:0] depth3_o_fifo_cap;
wire    depth3_o_empty_n;
wire    point3_o_full_n;
wire   [31:0] point3_o_dout;
wire   [1:0] point3_o_num_data_valid;
wire   [1:0] point3_o_fifo_cap;
wire    point3_o_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_LoadWeights_U0_ap_ready;
wire    ap_sync_LoadWeights_U0_ap_ready;
reg    ap_sync_reg_LoadInput_U0_ap_ready;
wire    ap_sync_LoadInput_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_point3_w_10 = 1'b0;
#0 ap_sync_reg_channel_write_point3_w_9 = 1'b0;
#0 ap_sync_reg_channel_write_point3_w_8 = 1'b0;
#0 ap_sync_reg_channel_write_point3_w_7 = 1'b0;
#0 ap_sync_reg_channel_write_point3_w_6 = 1'b0;
#0 ap_sync_reg_channel_write_point3_w_5 = 1'b0;
#0 ap_sync_reg_channel_write_point3_w_4 = 1'b0;
#0 ap_sync_reg_channel_write_point3_w_3 = 1'b0;
#0 ap_sync_reg_channel_write_point3_w_2 = 1'b0;
#0 ap_sync_reg_channel_write_point3_w_1 = 1'b0;
#0 ap_sync_reg_channel_write_point3_w = 1'b0;
#0 ap_sync_reg_channel_write_depth3_w_7 = 1'b0;
#0 ap_sync_reg_channel_write_depth3_w_6 = 1'b0;
#0 ap_sync_reg_channel_write_depth3_w_5 = 1'b0;
#0 ap_sync_reg_channel_write_depth3_w_4 = 1'b0;
#0 ap_sync_reg_channel_write_depth3_w_3 = 1'b0;
#0 ap_sync_reg_channel_write_depth3_w_2 = 1'b0;
#0 ap_sync_reg_channel_write_depth3_w_1 = 1'b0;
#0 ap_sync_reg_channel_write_depth3_w = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_12 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_11 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_10 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_9 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_8 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_7 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_6 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_5 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_4 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_3 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_2 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w_1 = 1'b0;
#0 ap_sync_reg_channel_write_point2_w = 1'b0;
#0 ap_sync_reg_channel_write_depth2_w = 1'b0;
#0 ap_sync_reg_channel_write_point1_w = 1'b0;
#0 ap_sync_reg_channel_write_depth1_w = 1'b0;
#0 ap_sync_reg_channel_write_pix_dest_V = 1'b0;
#0 ap_sync_reg_channel_write_pix_id_V = 1'b0;
#0 ap_sync_reg_channel_write_pix_user_V = 1'b0;
#0 ap_sync_reg_channel_write_pix_strb_V = 1'b0;
#0 ap_sync_reg_channel_write_pix_keep_V = 1'b0;
#0 ap_sync_reg_LoadWeights_U0_ap_ready = 1'b0;
#0 ap_sync_reg_LoadInput_U0_ap_ready = 1'b0;
end

MNIST_depth1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
depth1_w_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_depth1_address0),
    .i_ce0(LoadWeights_U0_depth1_ce0),
    .i_we0(LoadWeights_U0_depth1_we0),
    .i_d0(LoadWeights_U0_depth1_d0),
    .i_q0(depth1_w_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(depth1_w_i_q1),
    .t_address0(DepthwiseConv2d_28_10_1_3_U0_weights_address0),
    .t_ce0(DepthwiseConv2d_28_10_1_3_U0_weights_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(depth1_w_t_q0),
    .t_address1(DepthwiseConv2d_28_10_1_3_U0_weights_address1),
    .t_ce1(DepthwiseConv2d_28_10_1_3_U0_weights_ce1),
    .t_q1(depth1_w_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(depth1_w_i_full_n),
    .i_write(ap_channel_done_depth1_w),
    .t_empty_n(depth1_w_t_empty_n),
    .t_read(DepthwiseConv2d_28_10_1_3_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point1_w_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point1_address0),
    .i_ce0(LoadWeights_U0_point1_ce0),
    .i_we0(LoadWeights_U0_point1_we0),
    .i_d0(LoadWeights_U0_point1_d0),
    .i_q0(point1_w_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point1_w_i_q1),
    .t_address0(PointwiseConv2d_10_1_4_U0_weights_address0),
    .t_ce0(PointwiseConv2d_10_1_4_U0_weights_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point1_w_t_q0),
    .t_address1(PointwiseConv2d_10_1_4_U0_weights_address1),
    .t_ce1(PointwiseConv2d_10_1_4_U0_weights_ce1),
    .t_q1(point1_w_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point1_w_i_full_n),
    .i_write(ap_channel_done_point1_w),
    .t_empty_n(point1_w_t_empty_n),
    .t_read(PointwiseConv2d_10_1_4_U0_ap_ready)
);

MNIST_depth2_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
depth2_w_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_depth2_address0),
    .i_ce0(LoadWeights_U0_depth2_ce0),
    .i_we0(LoadWeights_U0_depth2_we0),
    .i_d0(LoadWeights_U0_depth2_d0),
    .i_q0(depth2_w_i_q0),
    .i_address1(6'd0),
    .i_ce1(1'b0),
    .i_q1(depth2_w_i_q1),
    .t_address0(DepthwiseConv2d_10_4_4_3_U0_weights_address0),
    .t_ce0(DepthwiseConv2d_10_4_4_3_U0_weights_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(depth2_w_t_q0),
    .t_address1(DepthwiseConv2d_10_4_4_3_U0_weights_address1),
    .t_ce1(DepthwiseConv2d_10_4_4_3_U0_weights_ce1),
    .t_q1(depth2_w_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(depth2_w_i_full_n),
    .i_write(ap_channel_done_depth2_w),
    .t_empty_n(depth2_w_t_empty_n),
    .t_read(DepthwiseConv2d_10_4_4_3_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_0_address0),
    .i_ce0(LoadWeights_U0_point2_0_ce0),
    .i_we0(LoadWeights_U0_point2_0_we0),
    .i_d0(LoadWeights_U0_point2_0_d0),
    .i_q0(point2_w_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_0_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_0_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_0_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_0_ce1),
    .t_q1(point2_w_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_i_full_n),
    .i_write(ap_channel_done_point2_w),
    .t_empty_n(point2_w_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_1_address0),
    .i_ce0(LoadWeights_U0_point2_1_ce0),
    .i_we0(LoadWeights_U0_point2_1_we0),
    .i_d0(LoadWeights_U0_point2_1_d0),
    .i_q0(point2_w_1_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_1_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_1_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_1_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_1_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_1_ce1),
    .t_q1(point2_w_1_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_1_i_full_n),
    .i_write(ap_channel_done_point2_w_1),
    .t_empty_n(point2_w_1_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_2_address0),
    .i_ce0(LoadWeights_U0_point2_2_ce0),
    .i_we0(LoadWeights_U0_point2_2_we0),
    .i_d0(LoadWeights_U0_point2_2_d0),
    .i_q0(point2_w_2_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_2_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_2_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_2_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_2_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_2_ce1),
    .t_q1(point2_w_2_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_2_i_full_n),
    .i_write(ap_channel_done_point2_w_2),
    .t_empty_n(point2_w_2_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_3_address0),
    .i_ce0(LoadWeights_U0_point2_3_ce0),
    .i_we0(LoadWeights_U0_point2_3_we0),
    .i_d0(LoadWeights_U0_point2_3_d0),
    .i_q0(point2_w_3_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_3_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_3_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_3_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_3_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_3_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_3_ce1),
    .t_q1(point2_w_3_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_3_i_full_n),
    .i_write(ap_channel_done_point2_w_3),
    .t_empty_n(point2_w_3_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_4_address0),
    .i_ce0(LoadWeights_U0_point2_4_ce0),
    .i_we0(LoadWeights_U0_point2_4_we0),
    .i_d0(LoadWeights_U0_point2_4_d0),
    .i_q0(point2_w_4_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_4_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_4_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_4_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_4_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_4_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_4_ce1),
    .t_q1(point2_w_4_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_4_i_full_n),
    .i_write(ap_channel_done_point2_w_4),
    .t_empty_n(point2_w_4_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_5_address0),
    .i_ce0(LoadWeights_U0_point2_5_ce0),
    .i_we0(LoadWeights_U0_point2_5_we0),
    .i_d0(LoadWeights_U0_point2_5_d0),
    .i_q0(point2_w_5_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_5_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_5_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_5_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_5_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_5_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_5_ce1),
    .t_q1(point2_w_5_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_5_i_full_n),
    .i_write(ap_channel_done_point2_w_5),
    .t_empty_n(point2_w_5_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_6_address0),
    .i_ce0(LoadWeights_U0_point2_6_ce0),
    .i_we0(LoadWeights_U0_point2_6_we0),
    .i_d0(LoadWeights_U0_point2_6_d0),
    .i_q0(point2_w_6_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_6_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_6_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_6_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_6_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_6_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_6_ce1),
    .t_q1(point2_w_6_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_6_i_full_n),
    .i_write(ap_channel_done_point2_w_6),
    .t_empty_n(point2_w_6_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_7_address0),
    .i_ce0(LoadWeights_U0_point2_7_ce0),
    .i_we0(LoadWeights_U0_point2_7_we0),
    .i_d0(LoadWeights_U0_point2_7_d0),
    .i_q0(point2_w_7_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_7_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_7_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_7_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_7_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_7_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_7_ce1),
    .t_q1(point2_w_7_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_7_i_full_n),
    .i_write(ap_channel_done_point2_w_7),
    .t_empty_n(point2_w_7_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_8_address0),
    .i_ce0(LoadWeights_U0_point2_8_ce0),
    .i_we0(LoadWeights_U0_point2_8_we0),
    .i_d0(LoadWeights_U0_point2_8_d0),
    .i_q0(point2_w_8_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_8_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_8_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_8_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_8_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_8_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_8_ce1),
    .t_q1(point2_w_8_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_8_i_full_n),
    .i_write(ap_channel_done_point2_w_8),
    .t_empty_n(point2_w_8_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_9_address0),
    .i_ce0(LoadWeights_U0_point2_9_ce0),
    .i_we0(LoadWeights_U0_point2_9_we0),
    .i_d0(LoadWeights_U0_point2_9_d0),
    .i_q0(point2_w_9_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_9_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_9_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_9_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_9_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_9_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_9_ce1),
    .t_q1(point2_w_9_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_9_i_full_n),
    .i_write(ap_channel_done_point2_w_9),
    .t_empty_n(point2_w_9_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_10_address0),
    .i_ce0(LoadWeights_U0_point2_10_ce0),
    .i_we0(LoadWeights_U0_point2_10_we0),
    .i_d0(LoadWeights_U0_point2_10_d0),
    .i_q0(point2_w_10_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_10_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_10_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_10_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_10_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_10_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_10_ce1),
    .t_q1(point2_w_10_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_10_i_full_n),
    .i_write(ap_channel_done_point2_w_10),
    .t_empty_n(point2_w_10_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_11_address0),
    .i_ce0(LoadWeights_U0_point2_11_ce0),
    .i_we0(LoadWeights_U0_point2_11_we0),
    .i_d0(LoadWeights_U0_point2_11_d0),
    .i_q0(point2_w_11_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_11_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_11_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_11_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_11_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_11_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_11_ce1),
    .t_q1(point2_w_11_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_11_i_full_n),
    .i_write(ap_channel_done_point2_w_11),
    .t_empty_n(point2_w_11_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_point1_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
point2_w_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point2_12_address0),
    .i_ce0(LoadWeights_U0_point2_12_ce0),
    .i_we0(LoadWeights_U0_point2_12_we0),
    .i_d0(LoadWeights_U0_point2_12_d0),
    .i_q0(point2_w_12_i_q0),
    .i_address1(2'd0),
    .i_ce1(1'b0),
    .i_q1(point2_w_12_i_q1),
    .t_address0(PointwiseConv2d_4_4_12_U0_weights_12_address0),
    .t_ce0(PointwiseConv2d_4_4_12_U0_weights_12_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point2_w_12_t_q0),
    .t_address1(PointwiseConv2d_4_4_12_U0_weights_12_address1),
    .t_ce1(PointwiseConv2d_4_4_12_U0_weights_12_ce1),
    .t_q1(point2_w_12_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point2_w_12_i_full_n),
    .i_write(ap_channel_done_point2_w_12),
    .t_empty_n(point2_w_12_t_empty_n),
    .t_read(PointwiseConv2d_4_4_12_U0_ap_ready)
);

MNIST_depth3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
depth3_w_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_depth3_0_address0),
    .i_ce0(LoadWeights_U0_depth3_0_ce0),
    .i_we0(LoadWeights_U0_depth3_0_we0),
    .i_d0(LoadWeights_U0_depth3_0_d0),
    .i_q0(depth3_w_i_q0),
    .i_address1(5'd0),
    .i_ce1(1'b0),
    .i_q1(depth3_w_i_q1),
    .t_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address0),
    .t_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(depth3_w_t_q0),
    .t_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address1),
    .t_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce1),
    .t_q1(depth3_w_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(depth3_w_i_full_n),
    .i_write(ap_channel_done_depth3_w),
    .t_empty_n(depth3_w_t_empty_n),
    .t_read(DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready)
);

MNIST_depth3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
depth3_w_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_depth3_1_address0),
    .i_ce0(LoadWeights_U0_depth3_1_ce0),
    .i_we0(LoadWeights_U0_depth3_1_we0),
    .i_d0(LoadWeights_U0_depth3_1_d0),
    .i_q0(depth3_w_1_i_q0),
    .i_address1(5'd0),
    .i_ce1(1'b0),
    .i_q1(depth3_w_1_i_q1),
    .t_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address0),
    .t_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(depth3_w_1_t_q0),
    .t_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address1),
    .t_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce1),
    .t_q1(depth3_w_1_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(depth3_w_1_i_full_n),
    .i_write(ap_channel_done_depth3_w_1),
    .t_empty_n(depth3_w_1_t_empty_n),
    .t_read(DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready)
);

MNIST_depth3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
depth3_w_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_depth3_2_address0),
    .i_ce0(LoadWeights_U0_depth3_2_ce0),
    .i_we0(LoadWeights_U0_depth3_2_we0),
    .i_d0(LoadWeights_U0_depth3_2_d0),
    .i_q0(depth3_w_2_i_q0),
    .i_address1(5'd0),
    .i_ce1(1'b0),
    .i_q1(depth3_w_2_i_q1),
    .t_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address0),
    .t_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(depth3_w_2_t_q0),
    .t_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address1),
    .t_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce1),
    .t_q1(depth3_w_2_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(depth3_w_2_i_full_n),
    .i_write(ap_channel_done_depth3_w_2),
    .t_empty_n(depth3_w_2_t_empty_n),
    .t_read(DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready)
);

MNIST_depth3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
depth3_w_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_depth3_3_address0),
    .i_ce0(LoadWeights_U0_depth3_3_ce0),
    .i_we0(LoadWeights_U0_depth3_3_we0),
    .i_d0(LoadWeights_U0_depth3_3_d0),
    .i_q0(depth3_w_3_i_q0),
    .i_address1(5'd0),
    .i_ce1(1'b0),
    .i_q1(depth3_w_3_i_q1),
    .t_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address0),
    .t_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(depth3_w_3_t_q0),
    .t_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address1),
    .t_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce1),
    .t_q1(depth3_w_3_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(depth3_w_3_i_full_n),
    .i_write(ap_channel_done_depth3_w_3),
    .t_empty_n(depth3_w_3_t_empty_n),
    .t_read(DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready)
);

MNIST_depth3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
depth3_w_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_depth3_4_address0),
    .i_ce0(LoadWeights_U0_depth3_4_ce0),
    .i_we0(LoadWeights_U0_depth3_4_we0),
    .i_d0(LoadWeights_U0_depth3_4_d0),
    .i_q0(depth3_w_4_i_q0),
    .i_address1(5'd0),
    .i_ce1(1'b0),
    .i_q1(depth3_w_4_i_q1),
    .t_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address0),
    .t_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(depth3_w_4_t_q0),
    .t_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address1),
    .t_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce1),
    .t_q1(depth3_w_4_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(depth3_w_4_i_full_n),
    .i_write(ap_channel_done_depth3_w_4),
    .t_empty_n(depth3_w_4_t_empty_n),
    .t_read(DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready)
);

MNIST_depth3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
depth3_w_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_depth3_5_address0),
    .i_ce0(LoadWeights_U0_depth3_5_ce0),
    .i_we0(LoadWeights_U0_depth3_5_we0),
    .i_d0(LoadWeights_U0_depth3_5_d0),
    .i_q0(depth3_w_5_i_q0),
    .i_address1(5'd0),
    .i_ce1(1'b0),
    .i_q1(depth3_w_5_i_q1),
    .t_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address0),
    .t_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(depth3_w_5_t_q0),
    .t_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address1),
    .t_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce1),
    .t_q1(depth3_w_5_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(depth3_w_5_i_full_n),
    .i_write(ap_channel_done_depth3_w_5),
    .t_empty_n(depth3_w_5_t_empty_n),
    .t_read(DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready)
);

MNIST_depth3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
depth3_w_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_depth3_6_address0),
    .i_ce0(LoadWeights_U0_depth3_6_ce0),
    .i_we0(LoadWeights_U0_depth3_6_we0),
    .i_d0(LoadWeights_U0_depth3_6_d0),
    .i_q0(depth3_w_6_i_q0),
    .i_address1(5'd0),
    .i_ce1(1'b0),
    .i_q1(depth3_w_6_i_q1),
    .t_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address0),
    .t_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(depth3_w_6_t_q0),
    .t_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address1),
    .t_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce1),
    .t_q1(depth3_w_6_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(depth3_w_6_i_full_n),
    .i_write(ap_channel_done_depth3_w_6),
    .t_empty_n(depth3_w_6_t_empty_n),
    .t_read(DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready)
);

MNIST_depth3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
depth3_w_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_depth3_7_address0),
    .i_ce0(LoadWeights_U0_depth3_7_ce0),
    .i_we0(LoadWeights_U0_depth3_7_we0),
    .i_d0(LoadWeights_U0_depth3_7_d0),
    .i_q0(depth3_w_7_i_q0),
    .i_address1(5'd0),
    .i_ce1(1'b0),
    .i_q1(depth3_w_7_i_q1),
    .t_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address0),
    .t_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(depth3_w_7_t_q0),
    .t_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address1),
    .t_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce1),
    .t_q1(depth3_w_7_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(depth3_w_7_i_full_n),
    .i_write(ap_channel_done_depth3_w_7),
    .t_empty_n(depth3_w_7_t_empty_n),
    .t_read(DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_0_address0),
    .i_ce0(LoadWeights_U0_point3_0_ce0),
    .i_we0(LoadWeights_U0_point3_0_we0),
    .i_d0(LoadWeights_U0_point3_0_d0),
    .i_q0(point3_w_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_0_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_0_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_0_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_0_ce1),
    .t_q1(point3_w_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_i_full_n),
    .i_write(ap_channel_done_point3_w),
    .t_empty_n(point3_w_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_1_address0),
    .i_ce0(LoadWeights_U0_point3_1_ce0),
    .i_we0(LoadWeights_U0_point3_1_we0),
    .i_d0(LoadWeights_U0_point3_1_d0),
    .i_q0(point3_w_1_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_1_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_1_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_1_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_1_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_1_ce1),
    .t_q1(point3_w_1_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_1_i_full_n),
    .i_write(ap_channel_done_point3_w_1),
    .t_empty_n(point3_w_1_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_2_address0),
    .i_ce0(LoadWeights_U0_point3_2_ce0),
    .i_we0(LoadWeights_U0_point3_2_we0),
    .i_d0(LoadWeights_U0_point3_2_d0),
    .i_q0(point3_w_2_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_2_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_2_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_2_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_2_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_2_ce1),
    .t_q1(point3_w_2_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_2_i_full_n),
    .i_write(ap_channel_done_point3_w_2),
    .t_empty_n(point3_w_2_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_3_address0),
    .i_ce0(LoadWeights_U0_point3_3_ce0),
    .i_we0(LoadWeights_U0_point3_3_we0),
    .i_d0(LoadWeights_U0_point3_3_d0),
    .i_q0(point3_w_3_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_3_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_3_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_3_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_3_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_3_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_3_ce1),
    .t_q1(point3_w_3_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_3_i_full_n),
    .i_write(ap_channel_done_point3_w_3),
    .t_empty_n(point3_w_3_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_4_address0),
    .i_ce0(LoadWeights_U0_point3_4_ce0),
    .i_we0(LoadWeights_U0_point3_4_we0),
    .i_d0(LoadWeights_U0_point3_4_d0),
    .i_q0(point3_w_4_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_4_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_4_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_4_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_4_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_4_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_4_ce1),
    .t_q1(point3_w_4_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_4_i_full_n),
    .i_write(ap_channel_done_point3_w_4),
    .t_empty_n(point3_w_4_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_5_address0),
    .i_ce0(LoadWeights_U0_point3_5_ce0),
    .i_we0(LoadWeights_U0_point3_5_we0),
    .i_d0(LoadWeights_U0_point3_5_d0),
    .i_q0(point3_w_5_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_5_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_5_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_5_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_5_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_5_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_5_ce1),
    .t_q1(point3_w_5_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_5_i_full_n),
    .i_write(ap_channel_done_point3_w_5),
    .t_empty_n(point3_w_5_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_6_address0),
    .i_ce0(LoadWeights_U0_point3_6_ce0),
    .i_we0(LoadWeights_U0_point3_6_we0),
    .i_d0(LoadWeights_U0_point3_6_d0),
    .i_q0(point3_w_6_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_6_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_6_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_6_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_6_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_6_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_6_ce1),
    .t_q1(point3_w_6_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_6_i_full_n),
    .i_write(ap_channel_done_point3_w_6),
    .t_empty_n(point3_w_6_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_7_address0),
    .i_ce0(LoadWeights_U0_point3_7_ce0),
    .i_we0(LoadWeights_U0_point3_7_we0),
    .i_d0(LoadWeights_U0_point3_7_d0),
    .i_q0(point3_w_7_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_7_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_7_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_7_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_7_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_7_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_7_ce1),
    .t_q1(point3_w_7_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_7_i_full_n),
    .i_write(ap_channel_done_point3_w_7),
    .t_empty_n(point3_w_7_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_8_address0),
    .i_ce0(LoadWeights_U0_point3_8_ce0),
    .i_we0(LoadWeights_U0_point3_8_we0),
    .i_d0(LoadWeights_U0_point3_8_d0),
    .i_q0(point3_w_8_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_8_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_8_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_8_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_8_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_8_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_8_ce1),
    .t_q1(point3_w_8_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_8_i_full_n),
    .i_write(ap_channel_done_point3_w_8),
    .t_empty_n(point3_w_8_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_9_address0),
    .i_ce0(LoadWeights_U0_point3_9_ce0),
    .i_we0(LoadWeights_U0_point3_9_we0),
    .i_d0(LoadWeights_U0_point3_9_d0),
    .i_q0(point3_w_9_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_9_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_9_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_9_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_9_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_9_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_9_ce1),
    .t_q1(point3_w_9_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_9_i_full_n),
    .i_write(ap_channel_done_point3_w_9),
    .t_empty_n(point3_w_9_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_point3_w_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
point3_w_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(LoadWeights_U0_point3_10_address0),
    .i_ce0(LoadWeights_U0_point3_10_ce0),
    .i_we0(LoadWeights_U0_point3_10_we0),
    .i_d0(LoadWeights_U0_point3_10_d0),
    .i_q0(point3_w_10_i_q0),
    .i_address1(4'd0),
    .i_ce1(1'b0),
    .i_q1(point3_w_10_i_q1),
    .t_address0(PointwiseConv2d_1_12_10_U0_weights_10_address0),
    .t_ce0(PointwiseConv2d_1_12_10_U0_weights_10_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(point3_w_10_t_q0),
    .t_address1(PointwiseConv2d_1_12_10_U0_weights_10_address1),
    .t_ce1(PointwiseConv2d_1_12_10_U0_weights_10_ce1),
    .t_q1(point3_w_10_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(point3_w_10_i_full_n),
    .i_write(ap_channel_done_point3_w_10),
    .t_empty_n(point3_w_10_t_empty_n),
    .t_read(PointwiseConv2d_1_12_10_U0_ap_ready)
);

MNIST_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

MNIST_LoadWeights LoadWeights_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(LoadWeights_U0_ap_start),
    .ap_done(LoadWeights_U0_ap_done),
    .ap_continue(LoadWeights_U0_ap_continue),
    .ap_idle(LoadWeights_U0_ap_idle),
    .ap_ready(LoadWeights_U0_ap_ready),
    .wstrm_TDATA(wstrm_TDATA),
    .wstrm_TVALID(wstrm_TVALID),
    .wstrm_TREADY(LoadWeights_U0_wstrm_TREADY),
    .wstrm_TKEEP(wstrm_TKEEP),
    .wstrm_TSTRB(wstrm_TSTRB),
    .wstrm_TUSER(wstrm_TUSER),
    .wstrm_TLAST(wstrm_TLAST),
    .wstrm_TID(wstrm_TID),
    .wstrm_TDEST(wstrm_TDEST),
    .depth1_address0(LoadWeights_U0_depth1_address0),
    .depth1_ce0(LoadWeights_U0_depth1_ce0),
    .depth1_we0(LoadWeights_U0_depth1_we0),
    .depth1_d0(LoadWeights_U0_depth1_d0),
    .point1_address0(LoadWeights_U0_point1_address0),
    .point1_ce0(LoadWeights_U0_point1_ce0),
    .point1_we0(LoadWeights_U0_point1_we0),
    .point1_d0(LoadWeights_U0_point1_d0),
    .depth2_address0(LoadWeights_U0_depth2_address0),
    .depth2_ce0(LoadWeights_U0_depth2_ce0),
    .depth2_we0(LoadWeights_U0_depth2_we0),
    .depth2_d0(LoadWeights_U0_depth2_d0),
    .point2_0_address0(LoadWeights_U0_point2_0_address0),
    .point2_0_ce0(LoadWeights_U0_point2_0_ce0),
    .point2_0_we0(LoadWeights_U0_point2_0_we0),
    .point2_0_d0(LoadWeights_U0_point2_0_d0),
    .point2_1_address0(LoadWeights_U0_point2_1_address0),
    .point2_1_ce0(LoadWeights_U0_point2_1_ce0),
    .point2_1_we0(LoadWeights_U0_point2_1_we0),
    .point2_1_d0(LoadWeights_U0_point2_1_d0),
    .point2_2_address0(LoadWeights_U0_point2_2_address0),
    .point2_2_ce0(LoadWeights_U0_point2_2_ce0),
    .point2_2_we0(LoadWeights_U0_point2_2_we0),
    .point2_2_d0(LoadWeights_U0_point2_2_d0),
    .point2_3_address0(LoadWeights_U0_point2_3_address0),
    .point2_3_ce0(LoadWeights_U0_point2_3_ce0),
    .point2_3_we0(LoadWeights_U0_point2_3_we0),
    .point2_3_d0(LoadWeights_U0_point2_3_d0),
    .point2_4_address0(LoadWeights_U0_point2_4_address0),
    .point2_4_ce0(LoadWeights_U0_point2_4_ce0),
    .point2_4_we0(LoadWeights_U0_point2_4_we0),
    .point2_4_d0(LoadWeights_U0_point2_4_d0),
    .point2_5_address0(LoadWeights_U0_point2_5_address0),
    .point2_5_ce0(LoadWeights_U0_point2_5_ce0),
    .point2_5_we0(LoadWeights_U0_point2_5_we0),
    .point2_5_d0(LoadWeights_U0_point2_5_d0),
    .point2_6_address0(LoadWeights_U0_point2_6_address0),
    .point2_6_ce0(LoadWeights_U0_point2_6_ce0),
    .point2_6_we0(LoadWeights_U0_point2_6_we0),
    .point2_6_d0(LoadWeights_U0_point2_6_d0),
    .point2_7_address0(LoadWeights_U0_point2_7_address0),
    .point2_7_ce0(LoadWeights_U0_point2_7_ce0),
    .point2_7_we0(LoadWeights_U0_point2_7_we0),
    .point2_7_d0(LoadWeights_U0_point2_7_d0),
    .point2_8_address0(LoadWeights_U0_point2_8_address0),
    .point2_8_ce0(LoadWeights_U0_point2_8_ce0),
    .point2_8_we0(LoadWeights_U0_point2_8_we0),
    .point2_8_d0(LoadWeights_U0_point2_8_d0),
    .point2_9_address0(LoadWeights_U0_point2_9_address0),
    .point2_9_ce0(LoadWeights_U0_point2_9_ce0),
    .point2_9_we0(LoadWeights_U0_point2_9_we0),
    .point2_9_d0(LoadWeights_U0_point2_9_d0),
    .point2_10_address0(LoadWeights_U0_point2_10_address0),
    .point2_10_ce0(LoadWeights_U0_point2_10_ce0),
    .point2_10_we0(LoadWeights_U0_point2_10_we0),
    .point2_10_d0(LoadWeights_U0_point2_10_d0),
    .point2_11_address0(LoadWeights_U0_point2_11_address0),
    .point2_11_ce0(LoadWeights_U0_point2_11_ce0),
    .point2_11_we0(LoadWeights_U0_point2_11_we0),
    .point2_11_d0(LoadWeights_U0_point2_11_d0),
    .point2_12_address0(LoadWeights_U0_point2_12_address0),
    .point2_12_ce0(LoadWeights_U0_point2_12_ce0),
    .point2_12_we0(LoadWeights_U0_point2_12_we0),
    .point2_12_d0(LoadWeights_U0_point2_12_d0),
    .depth3_0_address0(LoadWeights_U0_depth3_0_address0),
    .depth3_0_ce0(LoadWeights_U0_depth3_0_ce0),
    .depth3_0_we0(LoadWeights_U0_depth3_0_we0),
    .depth3_0_d0(LoadWeights_U0_depth3_0_d0),
    .depth3_1_address0(LoadWeights_U0_depth3_1_address0),
    .depth3_1_ce0(LoadWeights_U0_depth3_1_ce0),
    .depth3_1_we0(LoadWeights_U0_depth3_1_we0),
    .depth3_1_d0(LoadWeights_U0_depth3_1_d0),
    .depth3_2_address0(LoadWeights_U0_depth3_2_address0),
    .depth3_2_ce0(LoadWeights_U0_depth3_2_ce0),
    .depth3_2_we0(LoadWeights_U0_depth3_2_we0),
    .depth3_2_d0(LoadWeights_U0_depth3_2_d0),
    .depth3_3_address0(LoadWeights_U0_depth3_3_address0),
    .depth3_3_ce0(LoadWeights_U0_depth3_3_ce0),
    .depth3_3_we0(LoadWeights_U0_depth3_3_we0),
    .depth3_3_d0(LoadWeights_U0_depth3_3_d0),
    .depth3_4_address0(LoadWeights_U0_depth3_4_address0),
    .depth3_4_ce0(LoadWeights_U0_depth3_4_ce0),
    .depth3_4_we0(LoadWeights_U0_depth3_4_we0),
    .depth3_4_d0(LoadWeights_U0_depth3_4_d0),
    .depth3_5_address0(LoadWeights_U0_depth3_5_address0),
    .depth3_5_ce0(LoadWeights_U0_depth3_5_ce0),
    .depth3_5_we0(LoadWeights_U0_depth3_5_we0),
    .depth3_5_d0(LoadWeights_U0_depth3_5_d0),
    .depth3_6_address0(LoadWeights_U0_depth3_6_address0),
    .depth3_6_ce0(LoadWeights_U0_depth3_6_ce0),
    .depth3_6_we0(LoadWeights_U0_depth3_6_we0),
    .depth3_6_d0(LoadWeights_U0_depth3_6_d0),
    .depth3_7_address0(LoadWeights_U0_depth3_7_address0),
    .depth3_7_ce0(LoadWeights_U0_depth3_7_ce0),
    .depth3_7_we0(LoadWeights_U0_depth3_7_we0),
    .depth3_7_d0(LoadWeights_U0_depth3_7_d0),
    .point3_0_address0(LoadWeights_U0_point3_0_address0),
    .point3_0_ce0(LoadWeights_U0_point3_0_ce0),
    .point3_0_we0(LoadWeights_U0_point3_0_we0),
    .point3_0_d0(LoadWeights_U0_point3_0_d0),
    .point3_1_address0(LoadWeights_U0_point3_1_address0),
    .point3_1_ce0(LoadWeights_U0_point3_1_ce0),
    .point3_1_we0(LoadWeights_U0_point3_1_we0),
    .point3_1_d0(LoadWeights_U0_point3_1_d0),
    .point3_2_address0(LoadWeights_U0_point3_2_address0),
    .point3_2_ce0(LoadWeights_U0_point3_2_ce0),
    .point3_2_we0(LoadWeights_U0_point3_2_we0),
    .point3_2_d0(LoadWeights_U0_point3_2_d0),
    .point3_3_address0(LoadWeights_U0_point3_3_address0),
    .point3_3_ce0(LoadWeights_U0_point3_3_ce0),
    .point3_3_we0(LoadWeights_U0_point3_3_we0),
    .point3_3_d0(LoadWeights_U0_point3_3_d0),
    .point3_4_address0(LoadWeights_U0_point3_4_address0),
    .point3_4_ce0(LoadWeights_U0_point3_4_ce0),
    .point3_4_we0(LoadWeights_U0_point3_4_we0),
    .point3_4_d0(LoadWeights_U0_point3_4_d0),
    .point3_5_address0(LoadWeights_U0_point3_5_address0),
    .point3_5_ce0(LoadWeights_U0_point3_5_ce0),
    .point3_5_we0(LoadWeights_U0_point3_5_we0),
    .point3_5_d0(LoadWeights_U0_point3_5_d0),
    .point3_6_address0(LoadWeights_U0_point3_6_address0),
    .point3_6_ce0(LoadWeights_U0_point3_6_ce0),
    .point3_6_we0(LoadWeights_U0_point3_6_we0),
    .point3_6_d0(LoadWeights_U0_point3_6_d0),
    .point3_7_address0(LoadWeights_U0_point3_7_address0),
    .point3_7_ce0(LoadWeights_U0_point3_7_ce0),
    .point3_7_we0(LoadWeights_U0_point3_7_we0),
    .point3_7_d0(LoadWeights_U0_point3_7_d0),
    .point3_8_address0(LoadWeights_U0_point3_8_address0),
    .point3_8_ce0(LoadWeights_U0_point3_8_ce0),
    .point3_8_we0(LoadWeights_U0_point3_8_we0),
    .point3_8_d0(LoadWeights_U0_point3_8_d0),
    .point3_9_address0(LoadWeights_U0_point3_9_address0),
    .point3_9_ce0(LoadWeights_U0_point3_9_ce0),
    .point3_9_we0(LoadWeights_U0_point3_9_we0),
    .point3_9_d0(LoadWeights_U0_point3_9_d0),
    .point3_10_address0(LoadWeights_U0_point3_10_address0),
    .point3_10_ce0(LoadWeights_U0_point3_10_ce0),
    .point3_10_we0(LoadWeights_U0_point3_10_we0),
    .point3_10_d0(LoadWeights_U0_point3_10_d0)
);

MNIST_LoadInput LoadInput_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(LoadInput_U0_ap_start),
    .ap_done(LoadInput_U0_ap_done),
    .ap_continue(LoadInput_U0_ap_continue),
    .ap_idle(LoadInput_U0_ap_idle),
    .ap_ready(LoadInput_U0_ap_ready),
    .istrm_TVALID(istrm_TVALID),
    .input74_din(LoadInput_U0_input74_din),
    .input74_num_data_valid(input_num_data_valid),
    .input74_fifo_cap(input_fifo_cap),
    .input74_full_n(input_full_n),
    .input74_write(LoadInput_U0_input74_write),
    .istrm_TDATA(istrm_TDATA),
    .istrm_TREADY(LoadInput_U0_istrm_TREADY),
    .istrm_TKEEP(istrm_TKEEP),
    .istrm_TSTRB(istrm_TSTRB),
    .istrm_TUSER(istrm_TUSER),
    .istrm_TLAST(istrm_TLAST),
    .istrm_TID(istrm_TID),
    .istrm_TDEST(istrm_TDEST),
    .ap_return_0(LoadInput_U0_ap_return_0),
    .ap_return_1(LoadInput_U0_ap_return_1),
    .ap_return_2(LoadInput_U0_ap_return_2),
    .ap_return_3(LoadInput_U0_ap_return_3),
    .ap_return_4(LoadInput_U0_ap_return_4)
);

MNIST_DepthwiseConv2d_28_10_1_3_s DepthwiseConv2d_28_10_1_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(DepthwiseConv2d_28_10_1_3_U0_ap_start),
    .ap_done(DepthwiseConv2d_28_10_1_3_U0_ap_done),
    .ap_continue(DepthwiseConv2d_28_10_1_3_U0_ap_continue),
    .ap_idle(DepthwiseConv2d_28_10_1_3_U0_ap_idle),
    .ap_ready(DepthwiseConv2d_28_10_1_3_U0_ap_ready),
    .input74_dout(input_dout),
    .input74_num_data_valid(input_num_data_valid),
    .input74_fifo_cap(input_fifo_cap),
    .input74_empty_n(input_empty_n),
    .input74_read(DepthwiseConv2d_28_10_1_3_U0_input74_read),
    .weights_address0(DepthwiseConv2d_28_10_1_3_U0_weights_address0),
    .weights_ce0(DepthwiseConv2d_28_10_1_3_U0_weights_ce0),
    .weights_q0(depth1_w_t_q0),
    .weights_address1(DepthwiseConv2d_28_10_1_3_U0_weights_address1),
    .weights_ce1(DepthwiseConv2d_28_10_1_3_U0_weights_ce1),
    .weights_q1(depth1_w_t_q1),
    .depth1_o75_din(DepthwiseConv2d_28_10_1_3_U0_depth1_o75_din),
    .depth1_o75_num_data_valid(depth1_o_num_data_valid),
    .depth1_o75_fifo_cap(depth1_o_fifo_cap),
    .depth1_o75_full_n(depth1_o_full_n),
    .depth1_o75_write(DepthwiseConv2d_28_10_1_3_U0_depth1_o75_write)
);

MNIST_PointwiseConv2d_10_1_4_s PointwiseConv2d_10_1_4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(PointwiseConv2d_10_1_4_U0_ap_start),
    .ap_done(PointwiseConv2d_10_1_4_U0_ap_done),
    .ap_continue(PointwiseConv2d_10_1_4_U0_ap_continue),
    .ap_idle(PointwiseConv2d_10_1_4_U0_ap_idle),
    .ap_ready(PointwiseConv2d_10_1_4_U0_ap_ready),
    .depth1_o75_dout(depth1_o_dout),
    .depth1_o75_num_data_valid(depth1_o_num_data_valid),
    .depth1_o75_fifo_cap(depth1_o_fifo_cap),
    .depth1_o75_empty_n(depth1_o_empty_n),
    .depth1_o75_read(PointwiseConv2d_10_1_4_U0_depth1_o75_read),
    .weights_address0(PointwiseConv2d_10_1_4_U0_weights_address0),
    .weights_ce0(PointwiseConv2d_10_1_4_U0_weights_ce0),
    .weights_q0(point1_w_t_q0),
    .weights_address1(PointwiseConv2d_10_1_4_U0_weights_address1),
    .weights_ce1(PointwiseConv2d_10_1_4_U0_weights_ce1),
    .weights_q1(point1_w_t_q1),
    .point1_o76_din(PointwiseConv2d_10_1_4_U0_point1_o76_din),
    .point1_o76_num_data_valid(point1_o_num_data_valid),
    .point1_o76_fifo_cap(point1_o_fifo_cap),
    .point1_o76_full_n(point1_o_full_n),
    .point1_o76_write(PointwiseConv2d_10_1_4_U0_point1_o76_write)
);

MNIST_DepthwiseConv2d_10_4_4_3_s DepthwiseConv2d_10_4_4_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(DepthwiseConv2d_10_4_4_3_U0_ap_start),
    .ap_done(DepthwiseConv2d_10_4_4_3_U0_ap_done),
    .ap_continue(DepthwiseConv2d_10_4_4_3_U0_ap_continue),
    .ap_idle(DepthwiseConv2d_10_4_4_3_U0_ap_idle),
    .ap_ready(DepthwiseConv2d_10_4_4_3_U0_ap_ready),
    .point1_o76_dout(point1_o_dout),
    .point1_o76_num_data_valid(point1_o_num_data_valid),
    .point1_o76_fifo_cap(point1_o_fifo_cap),
    .point1_o76_empty_n(point1_o_empty_n),
    .point1_o76_read(DepthwiseConv2d_10_4_4_3_U0_point1_o76_read),
    .weights_address0(DepthwiseConv2d_10_4_4_3_U0_weights_address0),
    .weights_ce0(DepthwiseConv2d_10_4_4_3_U0_weights_ce0),
    .weights_q0(depth2_w_t_q0),
    .weights_address1(DepthwiseConv2d_10_4_4_3_U0_weights_address1),
    .weights_ce1(DepthwiseConv2d_10_4_4_3_U0_weights_ce1),
    .weights_q1(depth2_w_t_q1),
    .depth2_o77_din(DepthwiseConv2d_10_4_4_3_U0_depth2_o77_din),
    .depth2_o77_num_data_valid(depth2_o_num_data_valid),
    .depth2_o77_fifo_cap(depth2_o_fifo_cap),
    .depth2_o77_full_n(depth2_o_full_n),
    .depth2_o77_write(DepthwiseConv2d_10_4_4_3_U0_depth2_o77_write)
);

MNIST_PointwiseConv2d_4_4_12_s PointwiseConv2d_4_4_12_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(PointwiseConv2d_4_4_12_U0_ap_start),
    .ap_done(PointwiseConv2d_4_4_12_U0_ap_done),
    .ap_continue(PointwiseConv2d_4_4_12_U0_ap_continue),
    .ap_idle(PointwiseConv2d_4_4_12_U0_ap_idle),
    .ap_ready(PointwiseConv2d_4_4_12_U0_ap_ready),
    .depth2_o77_dout(depth2_o_dout),
    .depth2_o77_num_data_valid(depth2_o_num_data_valid),
    .depth2_o77_fifo_cap(depth2_o_fifo_cap),
    .depth2_o77_empty_n(depth2_o_empty_n),
    .depth2_o77_read(PointwiseConv2d_4_4_12_U0_depth2_o77_read),
    .weights_0_address0(PointwiseConv2d_4_4_12_U0_weights_0_address0),
    .weights_0_ce0(PointwiseConv2d_4_4_12_U0_weights_0_ce0),
    .weights_0_q0(point2_w_t_q0),
    .weights_0_address1(PointwiseConv2d_4_4_12_U0_weights_0_address1),
    .weights_0_ce1(PointwiseConv2d_4_4_12_U0_weights_0_ce1),
    .weights_0_q1(point2_w_t_q1),
    .weights_1_address0(PointwiseConv2d_4_4_12_U0_weights_1_address0),
    .weights_1_ce0(PointwiseConv2d_4_4_12_U0_weights_1_ce0),
    .weights_1_q0(point2_w_1_t_q0),
    .weights_1_address1(PointwiseConv2d_4_4_12_U0_weights_1_address1),
    .weights_1_ce1(PointwiseConv2d_4_4_12_U0_weights_1_ce1),
    .weights_1_q1(point2_w_1_t_q1),
    .weights_2_address0(PointwiseConv2d_4_4_12_U0_weights_2_address0),
    .weights_2_ce0(PointwiseConv2d_4_4_12_U0_weights_2_ce0),
    .weights_2_q0(point2_w_2_t_q0),
    .weights_2_address1(PointwiseConv2d_4_4_12_U0_weights_2_address1),
    .weights_2_ce1(PointwiseConv2d_4_4_12_U0_weights_2_ce1),
    .weights_2_q1(point2_w_2_t_q1),
    .weights_3_address0(PointwiseConv2d_4_4_12_U0_weights_3_address0),
    .weights_3_ce0(PointwiseConv2d_4_4_12_U0_weights_3_ce0),
    .weights_3_q0(point2_w_3_t_q0),
    .weights_3_address1(PointwiseConv2d_4_4_12_U0_weights_3_address1),
    .weights_3_ce1(PointwiseConv2d_4_4_12_U0_weights_3_ce1),
    .weights_3_q1(point2_w_3_t_q1),
    .weights_4_address0(PointwiseConv2d_4_4_12_U0_weights_4_address0),
    .weights_4_ce0(PointwiseConv2d_4_4_12_U0_weights_4_ce0),
    .weights_4_q0(point2_w_4_t_q0),
    .weights_4_address1(PointwiseConv2d_4_4_12_U0_weights_4_address1),
    .weights_4_ce1(PointwiseConv2d_4_4_12_U0_weights_4_ce1),
    .weights_4_q1(point2_w_4_t_q1),
    .weights_5_address0(PointwiseConv2d_4_4_12_U0_weights_5_address0),
    .weights_5_ce0(PointwiseConv2d_4_4_12_U0_weights_5_ce0),
    .weights_5_q0(point2_w_5_t_q0),
    .weights_5_address1(PointwiseConv2d_4_4_12_U0_weights_5_address1),
    .weights_5_ce1(PointwiseConv2d_4_4_12_U0_weights_5_ce1),
    .weights_5_q1(point2_w_5_t_q1),
    .weights_6_address0(PointwiseConv2d_4_4_12_U0_weights_6_address0),
    .weights_6_ce0(PointwiseConv2d_4_4_12_U0_weights_6_ce0),
    .weights_6_q0(point2_w_6_t_q0),
    .weights_6_address1(PointwiseConv2d_4_4_12_U0_weights_6_address1),
    .weights_6_ce1(PointwiseConv2d_4_4_12_U0_weights_6_ce1),
    .weights_6_q1(point2_w_6_t_q1),
    .weights_7_address0(PointwiseConv2d_4_4_12_U0_weights_7_address0),
    .weights_7_ce0(PointwiseConv2d_4_4_12_U0_weights_7_ce0),
    .weights_7_q0(point2_w_7_t_q0),
    .weights_7_address1(PointwiseConv2d_4_4_12_U0_weights_7_address1),
    .weights_7_ce1(PointwiseConv2d_4_4_12_U0_weights_7_ce1),
    .weights_7_q1(point2_w_7_t_q1),
    .weights_8_address0(PointwiseConv2d_4_4_12_U0_weights_8_address0),
    .weights_8_ce0(PointwiseConv2d_4_4_12_U0_weights_8_ce0),
    .weights_8_q0(point2_w_8_t_q0),
    .weights_8_address1(PointwiseConv2d_4_4_12_U0_weights_8_address1),
    .weights_8_ce1(PointwiseConv2d_4_4_12_U0_weights_8_ce1),
    .weights_8_q1(point2_w_8_t_q1),
    .weights_9_address0(PointwiseConv2d_4_4_12_U0_weights_9_address0),
    .weights_9_ce0(PointwiseConv2d_4_4_12_U0_weights_9_ce0),
    .weights_9_q0(point2_w_9_t_q0),
    .weights_9_address1(PointwiseConv2d_4_4_12_U0_weights_9_address1),
    .weights_9_ce1(PointwiseConv2d_4_4_12_U0_weights_9_ce1),
    .weights_9_q1(point2_w_9_t_q1),
    .weights_10_address0(PointwiseConv2d_4_4_12_U0_weights_10_address0),
    .weights_10_ce0(PointwiseConv2d_4_4_12_U0_weights_10_ce0),
    .weights_10_q0(point2_w_10_t_q0),
    .weights_10_address1(PointwiseConv2d_4_4_12_U0_weights_10_address1),
    .weights_10_ce1(PointwiseConv2d_4_4_12_U0_weights_10_ce1),
    .weights_10_q1(point2_w_10_t_q1),
    .weights_11_address0(PointwiseConv2d_4_4_12_U0_weights_11_address0),
    .weights_11_ce0(PointwiseConv2d_4_4_12_U0_weights_11_ce0),
    .weights_11_q0(point2_w_11_t_q0),
    .weights_11_address1(PointwiseConv2d_4_4_12_U0_weights_11_address1),
    .weights_11_ce1(PointwiseConv2d_4_4_12_U0_weights_11_ce1),
    .weights_11_q1(point2_w_11_t_q1),
    .weights_12_address0(PointwiseConv2d_4_4_12_U0_weights_12_address0),
    .weights_12_ce0(PointwiseConv2d_4_4_12_U0_weights_12_ce0),
    .weights_12_q0(point2_w_12_t_q0),
    .weights_12_address1(PointwiseConv2d_4_4_12_U0_weights_12_address1),
    .weights_12_ce1(PointwiseConv2d_4_4_12_U0_weights_12_ce1),
    .weights_12_q1(point2_w_12_t_q1),
    .point2_o78_din(PointwiseConv2d_4_4_12_U0_point2_o78_din),
    .point2_o78_num_data_valid(point2_o_num_data_valid),
    .point2_o78_fifo_cap(point2_o_fifo_cap),
    .point2_o78_full_n(point2_o_full_n),
    .point2_o78_write(PointwiseConv2d_4_4_12_U0_point2_o78_write)
);

MNIST_DepthwiseConv2dFinal_4_1_12_4_s DepthwiseConv2dFinal_4_1_12_4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(DepthwiseConv2dFinal_4_1_12_4_U0_ap_start),
    .ap_done(DepthwiseConv2dFinal_4_1_12_4_U0_ap_done),
    .ap_continue(DepthwiseConv2dFinal_4_1_12_4_U0_ap_continue),
    .ap_idle(DepthwiseConv2dFinal_4_1_12_4_U0_ap_idle),
    .ap_ready(DepthwiseConv2dFinal_4_1_12_4_U0_ap_ready),
    .point2_o78_dout(point2_o_dout),
    .point2_o78_num_data_valid(point2_o_num_data_valid),
    .point2_o78_fifo_cap(point2_o_fifo_cap),
    .point2_o78_empty_n(point2_o_empty_n),
    .point2_o78_read(DepthwiseConv2dFinal_4_1_12_4_U0_point2_o78_read),
    .weights_0_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address0),
    .weights_0_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce0),
    .weights_0_q0(depth3_w_t_q0),
    .weights_0_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_address1),
    .weights_0_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_0_ce1),
    .weights_0_q1(depth3_w_t_q1),
    .weights_1_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address0),
    .weights_1_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce0),
    .weights_1_q0(depth3_w_1_t_q0),
    .weights_1_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_address1),
    .weights_1_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_1_ce1),
    .weights_1_q1(depth3_w_1_t_q1),
    .weights_2_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address0),
    .weights_2_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce0),
    .weights_2_q0(depth3_w_2_t_q0),
    .weights_2_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_address1),
    .weights_2_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_2_ce1),
    .weights_2_q1(depth3_w_2_t_q1),
    .weights_3_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address0),
    .weights_3_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce0),
    .weights_3_q0(depth3_w_3_t_q0),
    .weights_3_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_address1),
    .weights_3_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_3_ce1),
    .weights_3_q1(depth3_w_3_t_q1),
    .weights_4_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address0),
    .weights_4_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce0),
    .weights_4_q0(depth3_w_4_t_q0),
    .weights_4_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_address1),
    .weights_4_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_4_ce1),
    .weights_4_q1(depth3_w_4_t_q1),
    .weights_5_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address0),
    .weights_5_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce0),
    .weights_5_q0(depth3_w_5_t_q0),
    .weights_5_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_address1),
    .weights_5_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_5_ce1),
    .weights_5_q1(depth3_w_5_t_q1),
    .weights_6_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address0),
    .weights_6_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce0),
    .weights_6_q0(depth3_w_6_t_q0),
    .weights_6_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_address1),
    .weights_6_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_6_ce1),
    .weights_6_q1(depth3_w_6_t_q1),
    .weights_7_address0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address0),
    .weights_7_ce0(DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce0),
    .weights_7_q0(depth3_w_7_t_q0),
    .weights_7_address1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_address1),
    .weights_7_ce1(DepthwiseConv2dFinal_4_1_12_4_U0_weights_7_ce1),
    .weights_7_q1(depth3_w_7_t_q1),
    .depth3_o79_din(DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_din),
    .depth3_o79_num_data_valid(depth3_o_num_data_valid),
    .depth3_o79_fifo_cap(depth3_o_fifo_cap),
    .depth3_o79_full_n(depth3_o_full_n),
    .depth3_o79_write(DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_write)
);

MNIST_PointwiseConv2d_1_12_10_s PointwiseConv2d_1_12_10_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(PointwiseConv2d_1_12_10_U0_ap_start),
    .ap_done(PointwiseConv2d_1_12_10_U0_ap_done),
    .ap_continue(PointwiseConv2d_1_12_10_U0_ap_continue),
    .ap_idle(PointwiseConv2d_1_12_10_U0_ap_idle),
    .ap_ready(PointwiseConv2d_1_12_10_U0_ap_ready),
    .depth3_o79_dout(depth3_o_dout),
    .depth3_o79_num_data_valid(depth3_o_num_data_valid),
    .depth3_o79_fifo_cap(depth3_o_fifo_cap),
    .depth3_o79_empty_n(depth3_o_empty_n),
    .depth3_o79_read(PointwiseConv2d_1_12_10_U0_depth3_o79_read),
    .weights_0_address0(PointwiseConv2d_1_12_10_U0_weights_0_address0),
    .weights_0_ce0(PointwiseConv2d_1_12_10_U0_weights_0_ce0),
    .weights_0_q0(point3_w_t_q0),
    .weights_0_address1(PointwiseConv2d_1_12_10_U0_weights_0_address1),
    .weights_0_ce1(PointwiseConv2d_1_12_10_U0_weights_0_ce1),
    .weights_0_q1(point3_w_t_q1),
    .weights_1_address0(PointwiseConv2d_1_12_10_U0_weights_1_address0),
    .weights_1_ce0(PointwiseConv2d_1_12_10_U0_weights_1_ce0),
    .weights_1_q0(point3_w_1_t_q0),
    .weights_1_address1(PointwiseConv2d_1_12_10_U0_weights_1_address1),
    .weights_1_ce1(PointwiseConv2d_1_12_10_U0_weights_1_ce1),
    .weights_1_q1(point3_w_1_t_q1),
    .weights_2_address0(PointwiseConv2d_1_12_10_U0_weights_2_address0),
    .weights_2_ce0(PointwiseConv2d_1_12_10_U0_weights_2_ce0),
    .weights_2_q0(point3_w_2_t_q0),
    .weights_2_address1(PointwiseConv2d_1_12_10_U0_weights_2_address1),
    .weights_2_ce1(PointwiseConv2d_1_12_10_U0_weights_2_ce1),
    .weights_2_q1(point3_w_2_t_q1),
    .weights_3_address0(PointwiseConv2d_1_12_10_U0_weights_3_address0),
    .weights_3_ce0(PointwiseConv2d_1_12_10_U0_weights_3_ce0),
    .weights_3_q0(point3_w_3_t_q0),
    .weights_3_address1(PointwiseConv2d_1_12_10_U0_weights_3_address1),
    .weights_3_ce1(PointwiseConv2d_1_12_10_U0_weights_3_ce1),
    .weights_3_q1(point3_w_3_t_q1),
    .weights_4_address0(PointwiseConv2d_1_12_10_U0_weights_4_address0),
    .weights_4_ce0(PointwiseConv2d_1_12_10_U0_weights_4_ce0),
    .weights_4_q0(point3_w_4_t_q0),
    .weights_4_address1(PointwiseConv2d_1_12_10_U0_weights_4_address1),
    .weights_4_ce1(PointwiseConv2d_1_12_10_U0_weights_4_ce1),
    .weights_4_q1(point3_w_4_t_q1),
    .weights_5_address0(PointwiseConv2d_1_12_10_U0_weights_5_address0),
    .weights_5_ce0(PointwiseConv2d_1_12_10_U0_weights_5_ce0),
    .weights_5_q0(point3_w_5_t_q0),
    .weights_5_address1(PointwiseConv2d_1_12_10_U0_weights_5_address1),
    .weights_5_ce1(PointwiseConv2d_1_12_10_U0_weights_5_ce1),
    .weights_5_q1(point3_w_5_t_q1),
    .weights_6_address0(PointwiseConv2d_1_12_10_U0_weights_6_address0),
    .weights_6_ce0(PointwiseConv2d_1_12_10_U0_weights_6_ce0),
    .weights_6_q0(point3_w_6_t_q0),
    .weights_6_address1(PointwiseConv2d_1_12_10_U0_weights_6_address1),
    .weights_6_ce1(PointwiseConv2d_1_12_10_U0_weights_6_ce1),
    .weights_6_q1(point3_w_6_t_q1),
    .weights_7_address0(PointwiseConv2d_1_12_10_U0_weights_7_address0),
    .weights_7_ce0(PointwiseConv2d_1_12_10_U0_weights_7_ce0),
    .weights_7_q0(point3_w_7_t_q0),
    .weights_7_address1(PointwiseConv2d_1_12_10_U0_weights_7_address1),
    .weights_7_ce1(PointwiseConv2d_1_12_10_U0_weights_7_ce1),
    .weights_7_q1(point3_w_7_t_q1),
    .weights_8_address0(PointwiseConv2d_1_12_10_U0_weights_8_address0),
    .weights_8_ce0(PointwiseConv2d_1_12_10_U0_weights_8_ce0),
    .weights_8_q0(point3_w_8_t_q0),
    .weights_8_address1(PointwiseConv2d_1_12_10_U0_weights_8_address1),
    .weights_8_ce1(PointwiseConv2d_1_12_10_U0_weights_8_ce1),
    .weights_8_q1(point3_w_8_t_q1),
    .weights_9_address0(PointwiseConv2d_1_12_10_U0_weights_9_address0),
    .weights_9_ce0(PointwiseConv2d_1_12_10_U0_weights_9_ce0),
    .weights_9_q0(point3_w_9_t_q0),
    .weights_9_address1(PointwiseConv2d_1_12_10_U0_weights_9_address1),
    .weights_9_ce1(PointwiseConv2d_1_12_10_U0_weights_9_ce1),
    .weights_9_q1(point3_w_9_t_q1),
    .weights_10_address0(PointwiseConv2d_1_12_10_U0_weights_10_address0),
    .weights_10_ce0(PointwiseConv2d_1_12_10_U0_weights_10_ce0),
    .weights_10_q0(point3_w_10_t_q0),
    .weights_10_address1(PointwiseConv2d_1_12_10_U0_weights_10_address1),
    .weights_10_ce1(PointwiseConv2d_1_12_10_U0_weights_10_ce1),
    .weights_10_q1(point3_w_10_t_q1),
    .point3_o80_din(PointwiseConv2d_1_12_10_U0_point3_o80_din),
    .point3_o80_num_data_valid(point3_o_num_data_valid),
    .point3_o80_fifo_cap(point3_o_fifo_cap),
    .point3_o80_full_n(point3_o_full_n),
    .point3_o80_write(PointwiseConv2d_1_12_10_U0_point3_o80_write)
);

MNIST_Loop_VITIS_LOOP_226_1_proc6 Loop_VITIS_LOOP_226_1_proc6_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_VITIS_LOOP_226_1_proc6_U0_ap_start),
    .ap_done(Loop_VITIS_LOOP_226_1_proc6_U0_ap_done),
    .ap_continue(Loop_VITIS_LOOP_226_1_proc6_U0_ap_continue),
    .ap_idle(Loop_VITIS_LOOP_226_1_proc6_U0_ap_idle),
    .ap_ready(Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready),
    .point3_o_dout(point3_o_dout),
    .point3_o_num_data_valid(point3_o_num_data_valid),
    .point3_o_fifo_cap(point3_o_fifo_cap),
    .point3_o_empty_n(point3_o_empty_n),
    .point3_o_read(Loop_VITIS_LOOP_226_1_proc6_U0_point3_o_read),
    .ostrm_TREADY(ostrm_TREADY),
    .p_read(pix_keep_V_dout),
    .p_read1(pix_strb_V_dout),
    .p_read2(pix_user_V_dout),
    .p_read3(pix_id_V_dout),
    .p_read4(pix_dest_V_dout),
    .ostrm_TDATA(Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDATA),
    .ostrm_TVALID(Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TVALID),
    .ostrm_TKEEP(Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TKEEP),
    .ostrm_TSTRB(Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TSTRB),
    .ostrm_TUSER(Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TUSER),
    .ostrm_TLAST(Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TLAST),
    .ostrm_TID(Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TID),
    .ostrm_TDEST(Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDEST)
);

MNIST_fifo_w32_d2_S input_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(LoadInput_U0_input74_din),
    .if_full_n(input_full_n),
    .if_write(LoadInput_U0_input74_write),
    .if_dout(input_dout),
    .if_num_data_valid(input_num_data_valid),
    .if_fifo_cap(input_fifo_cap),
    .if_empty_n(input_empty_n),
    .if_read(DepthwiseConv2d_28_10_1_3_U0_input74_read)
);

MNIST_fifo_w4_d8_S pix_keep_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(LoadInput_U0_ap_return_0),
    .if_full_n(pix_keep_V_full_n),
    .if_write(ap_channel_done_pix_keep_V),
    .if_dout(pix_keep_V_dout),
    .if_num_data_valid(pix_keep_V_num_data_valid),
    .if_fifo_cap(pix_keep_V_fifo_cap),
    .if_empty_n(pix_keep_V_empty_n),
    .if_read(Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready)
);

MNIST_fifo_w4_d8_S pix_strb_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(LoadInput_U0_ap_return_1),
    .if_full_n(pix_strb_V_full_n),
    .if_write(ap_channel_done_pix_strb_V),
    .if_dout(pix_strb_V_dout),
    .if_num_data_valid(pix_strb_V_num_data_valid),
    .if_fifo_cap(pix_strb_V_fifo_cap),
    .if_empty_n(pix_strb_V_empty_n),
    .if_read(Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready)
);

MNIST_fifo_w2_d8_S pix_user_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(LoadInput_U0_ap_return_2),
    .if_full_n(pix_user_V_full_n),
    .if_write(ap_channel_done_pix_user_V),
    .if_dout(pix_user_V_dout),
    .if_num_data_valid(pix_user_V_num_data_valid),
    .if_fifo_cap(pix_user_V_fifo_cap),
    .if_empty_n(pix_user_V_empty_n),
    .if_read(Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready)
);

MNIST_fifo_w5_d8_S pix_id_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(LoadInput_U0_ap_return_3),
    .if_full_n(pix_id_V_full_n),
    .if_write(ap_channel_done_pix_id_V),
    .if_dout(pix_id_V_dout),
    .if_num_data_valid(pix_id_V_num_data_valid),
    .if_fifo_cap(pix_id_V_fifo_cap),
    .if_empty_n(pix_id_V_empty_n),
    .if_read(Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready)
);

MNIST_fifo_w6_d8_S pix_dest_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(LoadInput_U0_ap_return_4),
    .if_full_n(pix_dest_V_full_n),
    .if_write(ap_channel_done_pix_dest_V),
    .if_dout(pix_dest_V_dout),
    .if_num_data_valid(pix_dest_V_num_data_valid),
    .if_fifo_cap(pix_dest_V_fifo_cap),
    .if_empty_n(pix_dest_V_empty_n),
    .if_read(Loop_VITIS_LOOP_226_1_proc6_U0_ap_ready)
);

MNIST_fifo_w32_d2_S depth1_o_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(DepthwiseConv2d_28_10_1_3_U0_depth1_o75_din),
    .if_full_n(depth1_o_full_n),
    .if_write(DepthwiseConv2d_28_10_1_3_U0_depth1_o75_write),
    .if_dout(depth1_o_dout),
    .if_num_data_valid(depth1_o_num_data_valid),
    .if_fifo_cap(depth1_o_fifo_cap),
    .if_empty_n(depth1_o_empty_n),
    .if_read(PointwiseConv2d_10_1_4_U0_depth1_o75_read)
);

MNIST_fifo_w32_d2_S point1_o_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PointwiseConv2d_10_1_4_U0_point1_o76_din),
    .if_full_n(point1_o_full_n),
    .if_write(PointwiseConv2d_10_1_4_U0_point1_o76_write),
    .if_dout(point1_o_dout),
    .if_num_data_valid(point1_o_num_data_valid),
    .if_fifo_cap(point1_o_fifo_cap),
    .if_empty_n(point1_o_empty_n),
    .if_read(DepthwiseConv2d_10_4_4_3_U0_point1_o76_read)
);

MNIST_fifo_w32_d2_S depth2_o_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(DepthwiseConv2d_10_4_4_3_U0_depth2_o77_din),
    .if_full_n(depth2_o_full_n),
    .if_write(DepthwiseConv2d_10_4_4_3_U0_depth2_o77_write),
    .if_dout(depth2_o_dout),
    .if_num_data_valid(depth2_o_num_data_valid),
    .if_fifo_cap(depth2_o_fifo_cap),
    .if_empty_n(depth2_o_empty_n),
    .if_read(PointwiseConv2d_4_4_12_U0_depth2_o77_read)
);

MNIST_fifo_w32_d2_S point2_o_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PointwiseConv2d_4_4_12_U0_point2_o78_din),
    .if_full_n(point2_o_full_n),
    .if_write(PointwiseConv2d_4_4_12_U0_point2_o78_write),
    .if_dout(point2_o_dout),
    .if_num_data_valid(point2_o_num_data_valid),
    .if_fifo_cap(point2_o_fifo_cap),
    .if_empty_n(point2_o_empty_n),
    .if_read(DepthwiseConv2dFinal_4_1_12_4_U0_point2_o78_read)
);

MNIST_fifo_w32_d2_S depth3_o_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_din),
    .if_full_n(depth3_o_full_n),
    .if_write(DepthwiseConv2dFinal_4_1_12_4_U0_depth3_o79_write),
    .if_dout(depth3_o_dout),
    .if_num_data_valid(depth3_o_num_data_valid),
    .if_fifo_cap(depth3_o_fifo_cap),
    .if_empty_n(depth3_o_empty_n),
    .if_read(PointwiseConv2d_1_12_10_U0_depth3_o79_read)
);

MNIST_fifo_w32_d2_S point3_o_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PointwiseConv2d_1_12_10_U0_point3_o80_din),
    .if_full_n(point3_o_full_n),
    .if_write(PointwiseConv2d_1_12_10_U0_point3_o80_write),
    .if_dout(point3_o_dout),
    .if_num_data_valid(point3_o_num_data_valid),
    .if_fifo_cap(point3_o_fifo_cap),
    .if_empty_n(point3_o_empty_n),
    .if_read(Loop_VITIS_LOOP_226_1_proc6_U0_point3_o_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_LoadInput_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_LoadInput_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_LoadInput_U0_ap_ready <= ap_sync_LoadInput_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_LoadWeights_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_LoadWeights_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_LoadWeights_U0_ap_ready <= ap_sync_LoadWeights_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_depth1_w <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_depth1_w <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_depth1_w <= ap_sync_channel_write_depth1_w;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_depth2_w <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_depth2_w <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_depth2_w <= ap_sync_channel_write_depth2_w;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_depth3_w <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_depth3_w <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_depth3_w <= ap_sync_channel_write_depth3_w;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_depth3_w_1 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_depth3_w_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_depth3_w_1 <= ap_sync_channel_write_depth3_w_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_depth3_w_2 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_depth3_w_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_depth3_w_2 <= ap_sync_channel_write_depth3_w_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_depth3_w_3 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_depth3_w_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_depth3_w_3 <= ap_sync_channel_write_depth3_w_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_depth3_w_4 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_depth3_w_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_depth3_w_4 <= ap_sync_channel_write_depth3_w_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_depth3_w_5 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_depth3_w_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_depth3_w_5 <= ap_sync_channel_write_depth3_w_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_depth3_w_6 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_depth3_w_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_depth3_w_6 <= ap_sync_channel_write_depth3_w_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_depth3_w_7 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_depth3_w_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_depth3_w_7 <= ap_sync_channel_write_depth3_w_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_pix_dest_V <= 1'b0;
    end else begin
        if (((LoadInput_U0_ap_done & LoadInput_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pix_dest_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pix_dest_V <= ap_sync_channel_write_pix_dest_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_pix_id_V <= 1'b0;
    end else begin
        if (((LoadInput_U0_ap_done & LoadInput_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pix_id_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pix_id_V <= ap_sync_channel_write_pix_id_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_pix_keep_V <= 1'b0;
    end else begin
        if (((LoadInput_U0_ap_done & LoadInput_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pix_keep_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pix_keep_V <= ap_sync_channel_write_pix_keep_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_pix_strb_V <= 1'b0;
    end else begin
        if (((LoadInput_U0_ap_done & LoadInput_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pix_strb_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pix_strb_V <= ap_sync_channel_write_pix_strb_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_pix_user_V <= 1'b0;
    end else begin
        if (((LoadInput_U0_ap_done & LoadInput_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pix_user_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pix_user_V <= ap_sync_channel_write_pix_user_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point1_w <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point1_w <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point1_w <= ap_sync_channel_write_point1_w;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w <= ap_sync_channel_write_point2_w;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_1 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_1 <= ap_sync_channel_write_point2_w_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_10 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_10 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_10 <= ap_sync_channel_write_point2_w_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_11 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_11 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_11 <= ap_sync_channel_write_point2_w_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_12 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_12 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_12 <= ap_sync_channel_write_point2_w_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_2 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_2 <= ap_sync_channel_write_point2_w_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_3 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_3 <= ap_sync_channel_write_point2_w_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_4 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_4 <= ap_sync_channel_write_point2_w_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_5 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_5 <= ap_sync_channel_write_point2_w_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_6 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_6 <= ap_sync_channel_write_point2_w_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_7 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_7 <= ap_sync_channel_write_point2_w_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_8 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_8 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_8 <= ap_sync_channel_write_point2_w_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point2_w_9 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point2_w_9 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point2_w_9 <= ap_sync_channel_write_point2_w_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w <= ap_sync_channel_write_point3_w;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w_1 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w_1 <= ap_sync_channel_write_point3_w_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w_10 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w_10 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w_10 <= ap_sync_channel_write_point3_w_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w_2 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w_2 <= ap_sync_channel_write_point3_w_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w_3 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w_3 <= ap_sync_channel_write_point3_w_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w_4 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w_4 <= ap_sync_channel_write_point3_w_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w_5 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w_5 <= ap_sync_channel_write_point3_w_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w_6 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w_6 <= ap_sync_channel_write_point3_w_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w_7 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w_7 <= ap_sync_channel_write_point3_w_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w_8 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w_8 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w_8 <= ap_sync_channel_write_point3_w_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_point3_w_9 <= 1'b0;
    end else begin
        if (((LoadWeights_U0_ap_done & LoadWeights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_point3_w_9 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_point3_w_9 <= ap_sync_channel_write_point3_w_9;
        end
    end
end

assign DepthwiseConv2dFinal_4_1_12_4_U0_ap_continue = 1'b1;

assign DepthwiseConv2dFinal_4_1_12_4_U0_ap_start = (depth3_w_t_empty_n & depth3_w_7_t_empty_n & depth3_w_6_t_empty_n & depth3_w_5_t_empty_n & depth3_w_4_t_empty_n & depth3_w_3_t_empty_n & depth3_w_2_t_empty_n & depth3_w_1_t_empty_n);

assign DepthwiseConv2d_10_4_4_3_U0_ap_continue = 1'b1;

assign DepthwiseConv2d_10_4_4_3_U0_ap_start = depth2_w_t_empty_n;

assign DepthwiseConv2d_28_10_1_3_U0_ap_continue = 1'b1;

assign DepthwiseConv2d_28_10_1_3_U0_ap_start = depth1_w_t_empty_n;

assign LoadInput_U0_ap_continue = (ap_sync_channel_write_pix_user_V & ap_sync_channel_write_pix_strb_V & ap_sync_channel_write_pix_keep_V & ap_sync_channel_write_pix_id_V & ap_sync_channel_write_pix_dest_V);

assign LoadInput_U0_ap_start = ((ap_sync_reg_LoadInput_U0_ap_ready ^ 1'b1) & ap_start);

assign LoadWeights_U0_ap_continue = (ap_sync_channel_write_point3_w_9 & ap_sync_channel_write_point3_w_8 & ap_sync_channel_write_point3_w_7 & ap_sync_channel_write_point3_w_6 & ap_sync_channel_write_point3_w_5 & ap_sync_channel_write_point3_w_4 & ap_sync_channel_write_point3_w_3 & ap_sync_channel_write_point3_w_2 & ap_sync_channel_write_point3_w_10 & ap_sync_channel_write_point3_w_1 & ap_sync_channel_write_point3_w & ap_sync_channel_write_point2_w_9 & ap_sync_channel_write_point2_w_8 & ap_sync_channel_write_point2_w_7 & ap_sync_channel_write_point2_w_6 & ap_sync_channel_write_point2_w_5 & ap_sync_channel_write_point2_w_4 & ap_sync_channel_write_point2_w_3 & ap_sync_channel_write_point2_w_2 & ap_sync_channel_write_point2_w_12 & ap_sync_channel_write_point2_w_11 & ap_sync_channel_write_point2_w_10 & ap_sync_channel_write_point2_w_1 & ap_sync_channel_write_point2_w & ap_sync_channel_write_point1_w & ap_sync_channel_write_depth3_w_7 & ap_sync_channel_write_depth3_w_6 & ap_sync_channel_write_depth3_w_5 & ap_sync_channel_write_depth3_w_4 & ap_sync_channel_write_depth3_w_3 & ap_sync_channel_write_depth3_w_2 & ap_sync_channel_write_depth3_w_1 & ap_sync_channel_write_depth3_w & ap_sync_channel_write_depth2_w & ap_sync_channel_write_depth1_w);

assign LoadWeights_U0_ap_start = ((ap_sync_reg_LoadWeights_U0_ap_ready ^ 1'b1) & ap_start);

assign LoadWeights_U0_depth1_full_n = depth1_w_i_full_n;

assign LoadWeights_U0_depth2_full_n = depth2_w_i_full_n;

assign LoadWeights_U0_depth3_0_full_n = depth3_w_i_full_n;

assign LoadWeights_U0_depth3_1_full_n = depth3_w_1_i_full_n;

assign LoadWeights_U0_depth3_2_full_n = depth3_w_2_i_full_n;

assign LoadWeights_U0_depth3_3_full_n = depth3_w_3_i_full_n;

assign LoadWeights_U0_depth3_4_full_n = depth3_w_4_i_full_n;

assign LoadWeights_U0_depth3_5_full_n = depth3_w_5_i_full_n;

assign LoadWeights_U0_depth3_6_full_n = depth3_w_6_i_full_n;

assign LoadWeights_U0_depth3_7_full_n = depth3_w_7_i_full_n;

assign LoadWeights_U0_point1_full_n = point1_w_i_full_n;

assign LoadWeights_U0_point2_0_full_n = point2_w_i_full_n;

assign LoadWeights_U0_point2_10_full_n = point2_w_10_i_full_n;

assign LoadWeights_U0_point2_11_full_n = point2_w_11_i_full_n;

assign LoadWeights_U0_point2_12_full_n = point2_w_12_i_full_n;

assign LoadWeights_U0_point2_1_full_n = point2_w_1_i_full_n;

assign LoadWeights_U0_point2_2_full_n = point2_w_2_i_full_n;

assign LoadWeights_U0_point2_3_full_n = point2_w_3_i_full_n;

assign LoadWeights_U0_point2_4_full_n = point2_w_4_i_full_n;

assign LoadWeights_U0_point2_5_full_n = point2_w_5_i_full_n;

assign LoadWeights_U0_point2_6_full_n = point2_w_6_i_full_n;

assign LoadWeights_U0_point2_7_full_n = point2_w_7_i_full_n;

assign LoadWeights_U0_point2_8_full_n = point2_w_8_i_full_n;

assign LoadWeights_U0_point2_9_full_n = point2_w_9_i_full_n;

assign LoadWeights_U0_point3_0_full_n = point3_w_i_full_n;

assign LoadWeights_U0_point3_10_full_n = point3_w_10_i_full_n;

assign LoadWeights_U0_point3_1_full_n = point3_w_1_i_full_n;

assign LoadWeights_U0_point3_2_full_n = point3_w_2_i_full_n;

assign LoadWeights_U0_point3_3_full_n = point3_w_3_i_full_n;

assign LoadWeights_U0_point3_4_full_n = point3_w_4_i_full_n;

assign LoadWeights_U0_point3_5_full_n = point3_w_5_i_full_n;

assign LoadWeights_U0_point3_6_full_n = point3_w_6_i_full_n;

assign LoadWeights_U0_point3_7_full_n = point3_w_7_i_full_n;

assign LoadWeights_U0_point3_8_full_n = point3_w_8_i_full_n;

assign LoadWeights_U0_point3_9_full_n = point3_w_9_i_full_n;

assign Loop_VITIS_LOOP_226_1_proc6_U0_ap_continue = 1'b1;

assign Loop_VITIS_LOOP_226_1_proc6_U0_ap_start = (pix_user_V_empty_n & pix_strb_V_empty_n & pix_keep_V_empty_n & pix_id_V_empty_n & pix_dest_V_empty_n);

assign PointwiseConv2d_10_1_4_U0_ap_continue = 1'b1;

assign PointwiseConv2d_10_1_4_U0_ap_start = point1_w_t_empty_n;

assign PointwiseConv2d_1_12_10_U0_ap_continue = 1'b1;

assign PointwiseConv2d_1_12_10_U0_ap_start = (point3_w_t_empty_n & point3_w_9_t_empty_n & point3_w_8_t_empty_n & point3_w_7_t_empty_n & point3_w_6_t_empty_n & point3_w_5_t_empty_n & point3_w_4_t_empty_n & point3_w_3_t_empty_n & point3_w_2_t_empty_n & point3_w_1_t_empty_n & point3_w_10_t_empty_n);

assign PointwiseConv2d_4_4_12_U0_ap_continue = 1'b1;

assign PointwiseConv2d_4_4_12_U0_ap_start = (point2_w_t_empty_n & point2_w_9_t_empty_n & point2_w_8_t_empty_n & point2_w_7_t_empty_n & point2_w_6_t_empty_n & point2_w_5_t_empty_n & point2_w_4_t_empty_n & point2_w_3_t_empty_n & point2_w_2_t_empty_n & point2_w_1_t_empty_n & point2_w_12_t_empty_n & point2_w_11_t_empty_n & point2_w_10_t_empty_n);

assign ap_channel_done_depth1_w = ((ap_sync_reg_channel_write_depth1_w ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_depth2_w = ((ap_sync_reg_channel_write_depth2_w ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_depth3_w = ((ap_sync_reg_channel_write_depth3_w ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_depth3_w_1 = ((ap_sync_reg_channel_write_depth3_w_1 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_depth3_w_2 = ((ap_sync_reg_channel_write_depth3_w_2 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_depth3_w_3 = ((ap_sync_reg_channel_write_depth3_w_3 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_depth3_w_4 = ((ap_sync_reg_channel_write_depth3_w_4 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_depth3_w_5 = ((ap_sync_reg_channel_write_depth3_w_5 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_depth3_w_6 = ((ap_sync_reg_channel_write_depth3_w_6 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_depth3_w_7 = ((ap_sync_reg_channel_write_depth3_w_7 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_pix_dest_V = ((ap_sync_reg_channel_write_pix_dest_V ^ 1'b1) & LoadInput_U0_ap_done);

assign ap_channel_done_pix_id_V = ((ap_sync_reg_channel_write_pix_id_V ^ 1'b1) & LoadInput_U0_ap_done);

assign ap_channel_done_pix_keep_V = ((ap_sync_reg_channel_write_pix_keep_V ^ 1'b1) & LoadInput_U0_ap_done);

assign ap_channel_done_pix_strb_V = ((ap_sync_reg_channel_write_pix_strb_V ^ 1'b1) & LoadInput_U0_ap_done);

assign ap_channel_done_pix_user_V = ((ap_sync_reg_channel_write_pix_user_V ^ 1'b1) & LoadInput_U0_ap_done);

assign ap_channel_done_point1_w = ((ap_sync_reg_channel_write_point1_w ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w = ((ap_sync_reg_channel_write_point2_w ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_1 = ((ap_sync_reg_channel_write_point2_w_1 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_10 = ((ap_sync_reg_channel_write_point2_w_10 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_11 = ((ap_sync_reg_channel_write_point2_w_11 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_12 = ((ap_sync_reg_channel_write_point2_w_12 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_2 = ((ap_sync_reg_channel_write_point2_w_2 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_3 = ((ap_sync_reg_channel_write_point2_w_3 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_4 = ((ap_sync_reg_channel_write_point2_w_4 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_5 = ((ap_sync_reg_channel_write_point2_w_5 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_6 = ((ap_sync_reg_channel_write_point2_w_6 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_7 = ((ap_sync_reg_channel_write_point2_w_7 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_8 = ((ap_sync_reg_channel_write_point2_w_8 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point2_w_9 = ((ap_sync_reg_channel_write_point2_w_9 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w = ((ap_sync_reg_channel_write_point3_w ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w_1 = ((ap_sync_reg_channel_write_point3_w_1 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w_10 = ((ap_sync_reg_channel_write_point3_w_10 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w_2 = ((ap_sync_reg_channel_write_point3_w_2 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w_3 = ((ap_sync_reg_channel_write_point3_w_3 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w_4 = ((ap_sync_reg_channel_write_point3_w_4 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w_5 = ((ap_sync_reg_channel_write_point3_w_5 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w_6 = ((ap_sync_reg_channel_write_point3_w_6 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w_7 = ((ap_sync_reg_channel_write_point3_w_7 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w_8 = ((ap_sync_reg_channel_write_point3_w_8 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_channel_done_point3_w_9 = ((ap_sync_reg_channel_write_point3_w_9 ^ 1'b1) & LoadWeights_U0_ap_done);

assign ap_done = Loop_VITIS_LOOP_226_1_proc6_U0_ap_done;

assign ap_idle = ((pix_dest_V_empty_n ^ 1'b1) & (pix_id_V_empty_n ^ 1'b1) & (pix_user_V_empty_n ^ 1'b1) & (pix_strb_V_empty_n ^ 1'b1) & (pix_keep_V_empty_n ^ 1'b1) & (point3_w_10_t_empty_n ^ 1'b1) & (point3_w_9_t_empty_n ^ 1'b1) & (point3_w_8_t_empty_n ^ 1'b1) & (point3_w_7_t_empty_n ^ 1'b1) & (point3_w_6_t_empty_n ^ 1'b1) & (point3_w_5_t_empty_n ^ 1'b1) & (point3_w_4_t_empty_n ^ 1'b1) & (point3_w_3_t_empty_n ^ 1'b1) & (point3_w_2_t_empty_n ^ 1'b1) & (point3_w_1_t_empty_n ^ 1'b1) & (point3_w_t_empty_n ^ 1'b1) & (depth3_w_7_t_empty_n ^ 1'b1) & (depth3_w_6_t_empty_n ^ 1'b1) & (depth3_w_5_t_empty_n ^ 1'b1) & (depth3_w_4_t_empty_n ^ 1'b1) & (depth3_w_3_t_empty_n ^ 1'b1) & (depth3_w_2_t_empty_n ^ 1'b1) & (depth3_w_1_t_empty_n ^ 1'b1) & (depth3_w_t_empty_n ^ 1'b1) & (point2_w_12_t_empty_n ^ 1'b1) & (point2_w_11_t_empty_n ^ 1'b1) & (point2_w_10_t_empty_n ^ 1'b1) & (point2_w_9_t_empty_n ^ 1'b1) & (point2_w_8_t_empty_n ^ 1'b1) & (point2_w_7_t_empty_n ^ 1'b1) & (point2_w_6_t_empty_n ^ 1'b1) & (point2_w_5_t_empty_n ^ 1'b1) & (point2_w_4_t_empty_n ^ 1'b1) & (point2_w_3_t_empty_n ^ 1'b1) & (point2_w_2_t_empty_n ^ 1'b1) & (point2_w_1_t_empty_n ^ 1'b1) & (point2_w_t_empty_n ^ 1'b1) & (depth2_w_t_empty_n ^ 1'b1) & (point1_w_t_empty_n ^ 1'b1) & (depth1_w_t_empty_n ^ 1'b1) & PointwiseConv2d_4_4_12_U0_ap_idle & PointwiseConv2d_1_12_10_U0_ap_idle & PointwiseConv2d_10_1_4_U0_ap_idle & Loop_VITIS_LOOP_226_1_proc6_U0_ap_idle & LoadWeights_U0_ap_idle & LoadInput_U0_ap_idle & DepthwiseConv2d_28_10_1_3_U0_ap_idle & DepthwiseConv2d_10_4_4_3_U0_ap_idle & DepthwiseConv2dFinal_4_1_12_4_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_LoadInput_U0_ap_ready = (ap_sync_reg_LoadInput_U0_ap_ready | LoadInput_U0_ap_ready);

assign ap_sync_LoadWeights_U0_ap_ready = (ap_sync_reg_LoadWeights_U0_ap_ready | LoadWeights_U0_ap_ready);

assign ap_sync_channel_write_depth1_w = ((ap_channel_done_depth1_w & LoadWeights_U0_depth1_full_n) | ap_sync_reg_channel_write_depth1_w);

assign ap_sync_channel_write_depth2_w = ((ap_channel_done_depth2_w & LoadWeights_U0_depth2_full_n) | ap_sync_reg_channel_write_depth2_w);

assign ap_sync_channel_write_depth3_w = ((ap_channel_done_depth3_w & LoadWeights_U0_depth3_0_full_n) | ap_sync_reg_channel_write_depth3_w);

assign ap_sync_channel_write_depth3_w_1 = ((ap_channel_done_depth3_w_1 & LoadWeights_U0_depth3_1_full_n) | ap_sync_reg_channel_write_depth3_w_1);

assign ap_sync_channel_write_depth3_w_2 = ((ap_channel_done_depth3_w_2 & LoadWeights_U0_depth3_2_full_n) | ap_sync_reg_channel_write_depth3_w_2);

assign ap_sync_channel_write_depth3_w_3 = ((ap_channel_done_depth3_w_3 & LoadWeights_U0_depth3_3_full_n) | ap_sync_reg_channel_write_depth3_w_3);

assign ap_sync_channel_write_depth3_w_4 = ((ap_channel_done_depth3_w_4 & LoadWeights_U0_depth3_4_full_n) | ap_sync_reg_channel_write_depth3_w_4);

assign ap_sync_channel_write_depth3_w_5 = ((ap_channel_done_depth3_w_5 & LoadWeights_U0_depth3_5_full_n) | ap_sync_reg_channel_write_depth3_w_5);

assign ap_sync_channel_write_depth3_w_6 = ((ap_channel_done_depth3_w_6 & LoadWeights_U0_depth3_6_full_n) | ap_sync_reg_channel_write_depth3_w_6);

assign ap_sync_channel_write_depth3_w_7 = ((ap_channel_done_depth3_w_7 & LoadWeights_U0_depth3_7_full_n) | ap_sync_reg_channel_write_depth3_w_7);

assign ap_sync_channel_write_pix_dest_V = ((pix_dest_V_full_n & ap_channel_done_pix_dest_V) | ap_sync_reg_channel_write_pix_dest_V);

assign ap_sync_channel_write_pix_id_V = ((pix_id_V_full_n & ap_channel_done_pix_id_V) | ap_sync_reg_channel_write_pix_id_V);

assign ap_sync_channel_write_pix_keep_V = ((pix_keep_V_full_n & ap_channel_done_pix_keep_V) | ap_sync_reg_channel_write_pix_keep_V);

assign ap_sync_channel_write_pix_strb_V = ((pix_strb_V_full_n & ap_channel_done_pix_strb_V) | ap_sync_reg_channel_write_pix_strb_V);

assign ap_sync_channel_write_pix_user_V = ((pix_user_V_full_n & ap_channel_done_pix_user_V) | ap_sync_reg_channel_write_pix_user_V);

assign ap_sync_channel_write_point1_w = ((ap_channel_done_point1_w & LoadWeights_U0_point1_full_n) | ap_sync_reg_channel_write_point1_w);

assign ap_sync_channel_write_point2_w = ((ap_channel_done_point2_w & LoadWeights_U0_point2_0_full_n) | ap_sync_reg_channel_write_point2_w);

assign ap_sync_channel_write_point2_w_1 = ((ap_channel_done_point2_w_1 & LoadWeights_U0_point2_1_full_n) | ap_sync_reg_channel_write_point2_w_1);

assign ap_sync_channel_write_point2_w_10 = ((ap_channel_done_point2_w_10 & LoadWeights_U0_point2_10_full_n) | ap_sync_reg_channel_write_point2_w_10);

assign ap_sync_channel_write_point2_w_11 = ((ap_channel_done_point2_w_11 & LoadWeights_U0_point2_11_full_n) | ap_sync_reg_channel_write_point2_w_11);

assign ap_sync_channel_write_point2_w_12 = ((ap_channel_done_point2_w_12 & LoadWeights_U0_point2_12_full_n) | ap_sync_reg_channel_write_point2_w_12);

assign ap_sync_channel_write_point2_w_2 = ((ap_channel_done_point2_w_2 & LoadWeights_U0_point2_2_full_n) | ap_sync_reg_channel_write_point2_w_2);

assign ap_sync_channel_write_point2_w_3 = ((ap_channel_done_point2_w_3 & LoadWeights_U0_point2_3_full_n) | ap_sync_reg_channel_write_point2_w_3);

assign ap_sync_channel_write_point2_w_4 = ((ap_channel_done_point2_w_4 & LoadWeights_U0_point2_4_full_n) | ap_sync_reg_channel_write_point2_w_4);

assign ap_sync_channel_write_point2_w_5 = ((ap_channel_done_point2_w_5 & LoadWeights_U0_point2_5_full_n) | ap_sync_reg_channel_write_point2_w_5);

assign ap_sync_channel_write_point2_w_6 = ((ap_channel_done_point2_w_6 & LoadWeights_U0_point2_6_full_n) | ap_sync_reg_channel_write_point2_w_6);

assign ap_sync_channel_write_point2_w_7 = ((ap_channel_done_point2_w_7 & LoadWeights_U0_point2_7_full_n) | ap_sync_reg_channel_write_point2_w_7);

assign ap_sync_channel_write_point2_w_8 = ((ap_channel_done_point2_w_8 & LoadWeights_U0_point2_8_full_n) | ap_sync_reg_channel_write_point2_w_8);

assign ap_sync_channel_write_point2_w_9 = ((ap_channel_done_point2_w_9 & LoadWeights_U0_point2_9_full_n) | ap_sync_reg_channel_write_point2_w_9);

assign ap_sync_channel_write_point3_w = ((ap_channel_done_point3_w & LoadWeights_U0_point3_0_full_n) | ap_sync_reg_channel_write_point3_w);

assign ap_sync_channel_write_point3_w_1 = ((ap_channel_done_point3_w_1 & LoadWeights_U0_point3_1_full_n) | ap_sync_reg_channel_write_point3_w_1);

assign ap_sync_channel_write_point3_w_10 = ((ap_channel_done_point3_w_10 & LoadWeights_U0_point3_10_full_n) | ap_sync_reg_channel_write_point3_w_10);

assign ap_sync_channel_write_point3_w_2 = ((ap_channel_done_point3_w_2 & LoadWeights_U0_point3_2_full_n) | ap_sync_reg_channel_write_point3_w_2);

assign ap_sync_channel_write_point3_w_3 = ((ap_channel_done_point3_w_3 & LoadWeights_U0_point3_3_full_n) | ap_sync_reg_channel_write_point3_w_3);

assign ap_sync_channel_write_point3_w_4 = ((ap_channel_done_point3_w_4 & LoadWeights_U0_point3_4_full_n) | ap_sync_reg_channel_write_point3_w_4);

assign ap_sync_channel_write_point3_w_5 = ((ap_channel_done_point3_w_5 & LoadWeights_U0_point3_5_full_n) | ap_sync_reg_channel_write_point3_w_5);

assign ap_sync_channel_write_point3_w_6 = ((ap_channel_done_point3_w_6 & LoadWeights_U0_point3_6_full_n) | ap_sync_reg_channel_write_point3_w_6);

assign ap_sync_channel_write_point3_w_7 = ((ap_channel_done_point3_w_7 & LoadWeights_U0_point3_7_full_n) | ap_sync_reg_channel_write_point3_w_7);

assign ap_sync_channel_write_point3_w_8 = ((ap_channel_done_point3_w_8 & LoadWeights_U0_point3_8_full_n) | ap_sync_reg_channel_write_point3_w_8);

assign ap_sync_channel_write_point3_w_9 = ((ap_channel_done_point3_w_9 & LoadWeights_U0_point3_9_full_n) | ap_sync_reg_channel_write_point3_w_9);

assign ap_sync_ready = (ap_sync_LoadWeights_U0_ap_ready & ap_sync_LoadInput_U0_ap_ready);

assign istrm_TREADY = LoadInput_U0_istrm_TREADY;

assign ostrm_TDATA = Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDATA;

assign ostrm_TDEST = Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TDEST;

assign ostrm_TID = Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TID;

assign ostrm_TKEEP = Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TKEEP;

assign ostrm_TLAST = Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TLAST;

assign ostrm_TSTRB = Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TSTRB;

assign ostrm_TUSER = Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TUSER;

assign ostrm_TVALID = Loop_VITIS_LOOP_226_1_proc6_U0_ostrm_TVALID;

assign wstrm_TREADY = LoadWeights_U0_wstrm_TREADY;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "MNIST_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "MNIST_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //MNIST

