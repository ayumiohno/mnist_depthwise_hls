// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MNIST_PointwiseConv2d_4_4_12_Pipeline_ic (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        depth2_o77_dout,
        depth2_o77_num_data_valid,
        depth2_o77_fifo_cap,
        depth2_o77_empty_n,
        depth2_o77_read,
        weights_0_load,
        weights_1_load,
        weights_2_load,
        weights_3_load,
        weights_4_load,
        weights_5_load,
        weights_6_load,
        weights_7_load,
        weights_8_load,
        weights_9_load,
        weights_10_load,
        weights_11_load,
        weights_0_address0,
        weights_0_ce0,
        weights_0_q0,
        weights_0_address1,
        weights_0_ce1,
        weights_0_q1,
        weights_1_address0,
        weights_1_ce0,
        weights_1_q0,
        weights_1_address1,
        weights_1_ce1,
        weights_1_q1,
        weights_2_address0,
        weights_2_ce0,
        weights_2_q0,
        weights_2_address1,
        weights_2_ce1,
        weights_2_q1,
        weights_12_address0,
        weights_12_ce0,
        weights_12_q0,
        weights_12_address1,
        weights_12_ce1,
        weights_12_q1,
        weights_3_address0,
        weights_3_ce0,
        weights_3_q0,
        weights_3_address1,
        weights_3_ce1,
        weights_3_q1,
        weights_4_address0,
        weights_4_ce0,
        weights_4_q0,
        weights_4_address1,
        weights_4_ce1,
        weights_4_q1,
        weights_5_address0,
        weights_5_ce0,
        weights_5_q0,
        weights_5_address1,
        weights_5_ce1,
        weights_5_q1,
        weights_6_address0,
        weights_6_ce0,
        weights_6_q0,
        weights_6_address1,
        weights_6_ce1,
        weights_6_q1,
        weights_7_address0,
        weights_7_ce0,
        weights_7_q0,
        weights_7_address1,
        weights_7_ce1,
        weights_7_q1,
        weights_8_address0,
        weights_8_ce0,
        weights_8_q0,
        weights_8_address1,
        weights_8_ce1,
        weights_8_q1,
        weights_9_address0,
        weights_9_ce0,
        weights_9_q0,
        weights_9_address1,
        weights_9_ce1,
        weights_9_q1,
        weights_10_address0,
        weights_10_ce0,
        weights_10_q0,
        weights_10_address1,
        weights_10_ce1,
        weights_10_q1,
        weights_11_address0,
        weights_11_ce0,
        weights_11_q0,
        weights_11_address1,
        weights_11_ce1,
        weights_11_q1,
        add27_1118_out,
        add27_1118_out_ap_vld,
        add27_1017_out,
        add27_1017_out_ap_vld,
        add27_916_out,
        add27_916_out_ap_vld,
        add27_815_out,
        add27_815_out_ap_vld,
        add27_714_out,
        add27_714_out_ap_vld,
        add27_613_out,
        add27_613_out_ap_vld,
        add27_512_out,
        add27_512_out_ap_vld,
        add27_411_out,
        add27_411_out_ap_vld,
        add27_310_out,
        add27_310_out_ap_vld,
        add27_29_out,
        add27_29_out_ap_vld,
        add27_18_out,
        add27_18_out_ap_vld,
        add277_out,
        add277_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] depth2_o77_dout;
input  [1:0] depth2_o77_num_data_valid;
input  [1:0] depth2_o77_fifo_cap;
input   depth2_o77_empty_n;
output   depth2_o77_read;
input  [31:0] weights_0_load;
input  [31:0] weights_1_load;
input  [31:0] weights_2_load;
input  [31:0] weights_3_load;
input  [31:0] weights_4_load;
input  [31:0] weights_5_load;
input  [31:0] weights_6_load;
input  [31:0] weights_7_load;
input  [31:0] weights_8_load;
input  [31:0] weights_9_load;
input  [31:0] weights_10_load;
input  [31:0] weights_11_load;
output  [1:0] weights_0_address0;
output   weights_0_ce0;
input  [31:0] weights_0_q0;
output  [1:0] weights_0_address1;
output   weights_0_ce1;
input  [31:0] weights_0_q1;
output  [1:0] weights_1_address0;
output   weights_1_ce0;
input  [31:0] weights_1_q0;
output  [1:0] weights_1_address1;
output   weights_1_ce1;
input  [31:0] weights_1_q1;
output  [1:0] weights_2_address0;
output   weights_2_ce0;
input  [31:0] weights_2_q0;
output  [1:0] weights_2_address1;
output   weights_2_ce1;
input  [31:0] weights_2_q1;
output  [1:0] weights_12_address0;
output   weights_12_ce0;
input  [31:0] weights_12_q0;
output  [1:0] weights_12_address1;
output   weights_12_ce1;
input  [31:0] weights_12_q1;
output  [1:0] weights_3_address0;
output   weights_3_ce0;
input  [31:0] weights_3_q0;
output  [1:0] weights_3_address1;
output   weights_3_ce1;
input  [31:0] weights_3_q1;
output  [1:0] weights_4_address0;
output   weights_4_ce0;
input  [31:0] weights_4_q0;
output  [1:0] weights_4_address1;
output   weights_4_ce1;
input  [31:0] weights_4_q1;
output  [1:0] weights_5_address0;
output   weights_5_ce0;
input  [31:0] weights_5_q0;
output  [1:0] weights_5_address1;
output   weights_5_ce1;
input  [31:0] weights_5_q1;
output  [1:0] weights_6_address0;
output   weights_6_ce0;
input  [31:0] weights_6_q0;
output  [1:0] weights_6_address1;
output   weights_6_ce1;
input  [31:0] weights_6_q1;
output  [1:0] weights_7_address0;
output   weights_7_ce0;
input  [31:0] weights_7_q0;
output  [1:0] weights_7_address1;
output   weights_7_ce1;
input  [31:0] weights_7_q1;
output  [1:0] weights_8_address0;
output   weights_8_ce0;
input  [31:0] weights_8_q0;
output  [1:0] weights_8_address1;
output   weights_8_ce1;
input  [31:0] weights_8_q1;
output  [1:0] weights_9_address0;
output   weights_9_ce0;
input  [31:0] weights_9_q0;
output  [1:0] weights_9_address1;
output   weights_9_ce1;
input  [31:0] weights_9_q1;
output  [1:0] weights_10_address0;
output   weights_10_ce0;
input  [31:0] weights_10_q0;
output  [1:0] weights_10_address1;
output   weights_10_ce1;
input  [31:0] weights_10_q1;
output  [1:0] weights_11_address0;
output   weights_11_ce0;
input  [31:0] weights_11_q0;
output  [1:0] weights_11_address1;
output   weights_11_ce1;
input  [31:0] weights_11_q1;
output  [31:0] add27_1118_out;
output   add27_1118_out_ap_vld;
output  [31:0] add27_1017_out;
output   add27_1017_out_ap_vld;
output  [31:0] add27_916_out;
output   add27_916_out_ap_vld;
output  [31:0] add27_815_out;
output   add27_815_out_ap_vld;
output  [31:0] add27_714_out;
output   add27_714_out_ap_vld;
output  [31:0] add27_613_out;
output   add27_613_out_ap_vld;
output  [31:0] add27_512_out;
output   add27_512_out_ap_vld;
output  [31:0] add27_411_out;
output   add27_411_out_ap_vld;
output  [31:0] add27_310_out;
output   add27_310_out_ap_vld;
output  [31:0] add27_29_out;
output   add27_29_out_ap_vld;
output  [31:0] add27_18_out;
output   add27_18_out_ap_vld;
output  [31:0] add277_out;
output   add277_out_ap_vld;

reg ap_idle;
reg depth2_o77_read;
reg[1:0] weights_0_address0;
reg weights_0_ce0;
reg weights_0_ce1;
reg[1:0] weights_1_address0;
reg weights_1_ce0;
reg weights_1_ce1;
reg[1:0] weights_2_address0;
reg weights_2_ce0;
reg weights_2_ce1;
reg[1:0] weights_12_address0;
reg weights_12_ce0;
reg weights_12_ce1;
reg[1:0] weights_3_address0;
reg weights_3_ce0;
reg weights_3_ce1;
reg[1:0] weights_4_address0;
reg weights_4_ce0;
reg weights_4_ce1;
reg[1:0] weights_5_address0;
reg weights_5_ce0;
reg weights_5_ce1;
reg[1:0] weights_6_address0;
reg weights_6_ce0;
reg weights_6_ce1;
reg[1:0] weights_7_address0;
reg weights_7_ce0;
reg weights_7_ce1;
reg[1:0] weights_8_address0;
reg weights_8_ce0;
reg weights_8_ce1;
reg weights_9_ce0;
reg weights_9_ce1;
reg weights_10_ce0;
reg weights_10_ce1;
reg weights_11_ce0;
reg weights_11_ce1;
reg add27_1118_out_ap_vld;
reg add27_1017_out_ap_vld;
reg add27_916_out_ap_vld;
reg add27_815_out_ap_vld;
reg add27_714_out_ap_vld;
reg add27_613_out_ap_vld;
reg add27_512_out_ap_vld;
reg add27_411_out_ap_vld;
reg add27_310_out_ap_vld;
reg add27_29_out_ap_vld;
reg add27_18_out_ap_vld;
reg add277_out_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln16_reg_1769;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    depth2_o77_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] ic_1_reg_1752;
wire   [0:0] icmp_ln16_fu_881_p2;
reg   [0:0] icmp_ln16_reg_1769_pp0_iter1_reg;
reg   [0:0] icmp_ln16_reg_1769_pp0_iter2_reg;
wire   [5:0] zext_ln16_fu_893_p1;
reg   [5:0] zext_ln16_reg_1773;
wire   [63:0] zext_ln22_5_fu_1205_p1;
reg   [63:0] zext_ln22_5_reg_1898;
reg   [31:0] depth2_o77_read_reg_1914;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
wire   [31:0] tmp_fu_1216_p6;
reg   [31:0] tmp_reg_1919;
wire   [31:0] tmp_1_fu_1225_p6;
reg   [31:0] tmp_1_reg_1924;
wire   [31:0] tmp_2_fu_1234_p6;
reg   [31:0] tmp_2_reg_1929;
wire   [31:0] tmp_3_fu_1243_p6;
reg   [31:0] tmp_3_reg_1934;
wire   [31:0] tmp_4_fu_1256_p6;
reg   [31:0] tmp_4_reg_1939;
wire   [31:0] tmp_5_fu_1269_p6;
reg   [31:0] tmp_5_reg_1944;
wire   [31:0] tmp_6_fu_1282_p6;
reg   [31:0] tmp_6_reg_1949;
wire   [31:0] tmp_7_fu_1295_p6;
reg   [31:0] tmp_7_reg_1954;
wire   [31:0] tmp_8_fu_1308_p6;
reg   [31:0] tmp_8_reg_1959;
reg   [31:0] weights_10_load_2_reg_1974;
reg   [31:0] weights_11_load_2_reg_1979;
wire   [31:0] tmp_25_fu_1389_p1;
reg   [31:0] tmp_25_reg_2024;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] tmp_9_fu_1396_p6;
reg   [31:0] tmp_9_reg_2032;
wire   [31:0] tmp_s_fu_1407_p6;
reg   [31:0] tmp_s_reg_2037;
wire   [31:0] tmp_10_fu_1420_p6;
reg   [31:0] tmp_10_reg_2042;
wire   [31:0] grp_fu_797_p2;
reg   [31:0] mul_reg_2047;
wire   [31:0] grp_fu_801_p2;
reg   [31:0] mul24_1_reg_2052;
wire   [31:0] grp_fu_805_p2;
reg   [31:0] mul24_2_reg_2057;
wire   [31:0] grp_fu_809_p2;
reg   [31:0] mul24_3_reg_2062;
reg   [31:0] mul24_4_reg_2087;
reg   [31:0] mul24_5_reg_2092;
reg   [31:0] mul24_6_reg_2097;
reg   [31:0] mul24_7_reg_2102;
reg   [31:0] mul24_8_reg_2127;
reg   [31:0] mul24_9_reg_2132;
reg   [31:0] mul24_s_reg_2137;
reg   [31:0] mul24_10_reg_2142;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln22_8_fu_907_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln22_fu_959_p1;
wire   [63:0] zext_ln22_1_fu_1013_p1;
wire   [63:0] zext_ln22_2_fu_1073_p1;
wire   [63:0] zext_ln22_3_fu_1135_p1;
wire   [63:0] zext_ln22_4_fu_1171_p1;
wire   [63:0] zext_ln22_6_fu_1348_p1;
wire   [63:0] zext_ln22_7_fu_1381_p1;
reg   [31:0] out_buf_12_fu_158;
wire   [31:0] grp_fu_777_p2;
reg   [31:0] ap_sig_allocacmp_out_buf_12_load_1;
wire    ap_block_pp0_stage2;
wire    ap_loop_init;
reg   [31:0] out_buf_13_fu_162;
wire   [31:0] grp_fu_781_p2;
reg   [31:0] ap_sig_allocacmp_out_buf_13_load_1;
reg   [31:0] out_buf_14_fu_166;
wire   [31:0] grp_fu_785_p2;
reg   [31:0] ap_sig_allocacmp_out_buf_14_load_1;
reg   [31:0] out_buf_15_fu_170;
wire   [31:0] grp_fu_789_p2;
reg   [31:0] ap_sig_allocacmp_out_buf_15_load_1;
reg   [31:0] out_buf_16_fu_174;
reg   [31:0] ap_sig_allocacmp_out_buf_16_load_1;
reg   [31:0] out_buf_17_fu_178;
reg   [31:0] ap_sig_allocacmp_out_buf_17_load_1;
reg   [31:0] out_buf_18_fu_182;
reg   [31:0] ap_sig_allocacmp_out_buf_18_load_1;
reg   [31:0] out_buf_19_fu_186;
wire   [31:0] grp_fu_793_p2;
reg   [31:0] ap_sig_allocacmp_out_buf_19_load_1;
reg   [31:0] out_buf_20_fu_190;
reg   [31:0] ap_sig_allocacmp_out_buf_20_load_1;
reg   [31:0] out_buf_21_fu_194;
reg   [31:0] ap_sig_allocacmp_out_buf_21_load_1;
reg   [31:0] out_buf_22_fu_198;
reg   [31:0] ap_sig_allocacmp_out_buf_22_load_1;
reg   [31:0] out_buf_23_fu_202;
reg   [31:0] ap_sig_allocacmp_out_buf_23_load_1;
reg   [2:0] ic_fu_206;
wire   [2:0] add_ln16_fu_887_p2;
reg   [2:0] ap_sig_allocacmp_ic_1;
reg    ap_block_pp0_stage1_01001;
reg   [31:0] grp_fu_781_p0;
reg   [31:0] grp_fu_781_p1;
reg   [31:0] grp_fu_785_p0;
reg   [31:0] grp_fu_785_p1;
reg   [31:0] grp_fu_789_p0;
reg   [31:0] grp_fu_789_p1;
reg   [31:0] grp_fu_793_p0;
reg   [31:0] grp_fu_793_p1;
reg   [31:0] grp_fu_797_p0;
reg   [31:0] grp_fu_797_p1;
reg   [31:0] grp_fu_801_p0;
reg   [31:0] grp_fu_801_p1;
reg   [31:0] grp_fu_805_p0;
reg   [31:0] grp_fu_805_p1;
reg   [31:0] grp_fu_809_p0;
reg   [31:0] grp_fu_809_p1;
wire   [0:0] icmp_ln22_fu_901_p2;
wire   [9:0] zext_ln22_9_cast_fu_915_p4;
wire   [7:0] zext_ln22_10_cast_fu_929_p4;
wire   [10:0] zext_ln22_9_fu_925_p1;
wire   [10:0] zext_ln22_10_fu_939_p1;
wire   [10:0] add_ln22_3_fu_943_p2;
wire   [1:0] tmp_12_fu_949_p4;
wire   [4:0] zext_ln16_1_fu_897_p1;
wire   [4:0] add_ln22_fu_967_p2;
wire   [9:0] tmp_11_fu_973_p3;
wire   [7:0] tmp_13_fu_985_p3;
wire   [10:0] zext_ln22_11_fu_981_p1;
wire   [10:0] zext_ln22_12_fu_993_p1;
wire   [10:0] add_ln22_4_fu_997_p2;
wire   [1:0] tmp_14_fu_1003_p4;
wire   [8:0] tmp_15_fu_1021_p4;
wire  signed [9:0] sext_ln22_fu_1031_p1;
wire   [6:0] tmp_16_fu_1039_p4;
wire  signed [7:0] sext_ln22_1_fu_1049_p1;
wire   [10:0] zext_ln22_13_fu_1035_p1;
wire   [10:0] zext_ln22_14_fu_1053_p1;
wire   [10:0] add_ln22_5_fu_1057_p2;
wire   [1:0] tmp_17_fu_1063_p4;
wire   [2:0] xor_ln22_fu_1081_p2;
wire   [7:0] tmp_18_fu_1087_p3;
wire  signed [9:0] sext_ln22_2_fu_1095_p1;
wire   [5:0] tmp_19_fu_1103_p3;
wire  signed [7:0] sext_ln22_3_fu_1111_p1;
wire   [10:0] zext_ln22_15_fu_1099_p1;
wire   [10:0] zext_ln22_16_fu_1115_p1;
wire   [10:0] add_ln22_6_fu_1119_p2;
wire   [1:0] tmp_20_fu_1125_p4;
wire   [5:0] zext_ln22_17_cast_fu_1143_p3;
wire   [5:0] mul_ln22_fu_1155_p0;
wire   [7:0] mul_ln22_fu_1155_p1;
wire   [12:0] mul_ln22_fu_1155_p2;
wire   [2:0] tmp_21_fu_1161_p4;
wire   [5:0] add_ln22_1_fu_1179_p2;
wire   [5:0] mul_ln22_1_fu_1189_p0;
wire   [7:0] mul_ln22_1_fu_1189_p1;
wire   [12:0] mul_ln22_1_fu_1189_p2;
wire   [2:0] tmp_22_fu_1195_p4;
wire   [5:0] zext_ln22_19_cast_fu_1321_p3;
wire   [5:0] mul_ln22_2_fu_1332_p0;
wire   [7:0] mul_ln22_2_fu_1332_p1;
wire   [12:0] mul_ln22_2_fu_1332_p2;
wire   [2:0] tmp_23_fu_1338_p4;
wire   [5:0] add_ln22_2_fu_1356_p2;
wire   [5:0] mul_ln22_3_fu_1365_p0;
wire   [7:0] mul_ln22_3_fu_1365_p1;
wire   [12:0] mul_ln22_3_fu_1365_p2;
wire   [2:0] tmp_24_fu_1371_p4;
reg    grp_fu_777_ce;
reg    grp_fu_781_ce;
reg    grp_fu_785_ce;
reg    grp_fu_789_ce;
reg    grp_fu_793_ce;
reg    grp_fu_797_ce;
reg    grp_fu_801_ce;
reg    grp_fu_805_ce;
reg    grp_fu_809_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage1;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [12:0] mul_ln22_1_fu_1189_p00;
wire   [12:0] mul_ln22_2_fu_1332_p00;
wire   [12:0] mul_ln22_3_fu_1365_p00;
wire   [12:0] mul_ln22_fu_1155_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

MNIST_fadd_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_no_dsp_1_U284(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_out_buf_12_load_1),
    .din1(mul_reg_2047),
    .ce(grp_fu_777_ce),
    .dout(grp_fu_777_p2)
);

MNIST_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U285(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_781_p0),
    .din1(grp_fu_781_p1),
    .ce(grp_fu_781_ce),
    .dout(grp_fu_781_p2)
);

MNIST_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U286(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_785_p0),
    .din1(grp_fu_785_p1),
    .ce(grp_fu_785_ce),
    .dout(grp_fu_785_p2)
);

MNIST_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U287(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_789_p0),
    .din1(grp_fu_789_p1),
    .ce(grp_fu_789_ce),
    .dout(grp_fu_789_p2)
);

MNIST_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U288(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_793_p0),
    .din1(grp_fu_793_p1),
    .ce(grp_fu_793_ce),
    .dout(grp_fu_793_p2)
);

MNIST_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U289(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_797_p0),
    .din1(grp_fu_797_p1),
    .ce(grp_fu_797_ce),
    .dout(grp_fu_797_p2)
);

MNIST_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U290(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_801_p0),
    .din1(grp_fu_801_p1),
    .ce(grp_fu_801_ce),
    .dout(grp_fu_801_p2)
);

MNIST_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U291(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_805_p0),
    .din1(grp_fu_805_p1),
    .ce(grp_fu_805_ce),
    .dout(grp_fu_805_p2)
);

MNIST_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U292(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_809_p0),
    .din1(grp_fu_809_p1),
    .ce(grp_fu_809_ce),
    .dout(grp_fu_809_p2)
);

MNIST_mul_6ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_6ns_8ns_13_1_1_U293(
    .din0(mul_ln22_fu_1155_p0),
    .din1(mul_ln22_fu_1155_p1),
    .dout(mul_ln22_fu_1155_p2)
);

MNIST_mul_6ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_6ns_8ns_13_1_1_U294(
    .din0(mul_ln22_1_fu_1189_p0),
    .din1(mul_ln22_1_fu_1189_p1),
    .dout(mul_ln22_1_fu_1189_p2)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U295(
    .din0(weights_0_load),
    .din1(weights_1_load),
    .din2(weights_2_load),
    .din3(weights_3_load),
    .din4(ic_1_reg_1752),
    .dout(tmp_fu_1216_p6)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U296(
    .din0(weights_4_load),
    .din1(weights_5_load),
    .din2(weights_6_load),
    .din3(weights_7_load),
    .din4(ic_1_reg_1752),
    .dout(tmp_1_fu_1225_p6)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U297(
    .din0(weights_8_load),
    .din1(weights_9_load),
    .din2(weights_10_load),
    .din3(weights_11_load),
    .din4(ic_1_reg_1752),
    .dout(tmp_2_fu_1234_p6)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U298(
    .din0(weights_12_q1),
    .din1(weights_0_q1),
    .din2(weights_1_q1),
    .din3(weights_2_q1),
    .din4(ic_1_reg_1752),
    .dout(tmp_3_fu_1243_p6)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U299(
    .din0(weights_3_q1),
    .din1(weights_4_q1),
    .din2(weights_5_q1),
    .din3(weights_6_q1),
    .din4(ic_1_reg_1752),
    .dout(tmp_4_fu_1256_p6)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U300(
    .din0(weights_7_q1),
    .din1(weights_8_q1),
    .din2(weights_9_q1),
    .din3(weights_10_q1),
    .din4(ic_1_reg_1752),
    .dout(tmp_5_fu_1269_p6)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U301(
    .din0(weights_11_q1),
    .din1(weights_12_q0),
    .din2(weights_0_q0),
    .din3(weights_1_q0),
    .din4(ic_1_reg_1752),
    .dout(tmp_6_fu_1282_p6)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U302(
    .din0(weights_2_q0),
    .din1(weights_3_q0),
    .din2(weights_4_q0),
    .din3(weights_5_q0),
    .din4(ic_1_reg_1752),
    .dout(tmp_7_fu_1295_p6)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U303(
    .din0(weights_6_q0),
    .din1(weights_7_q0),
    .din2(weights_8_q0),
    .din3(weights_9_q0),
    .din4(ic_1_reg_1752),
    .dout(tmp_8_fu_1308_p6)
);

MNIST_mul_6ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_6ns_8ns_13_1_1_U304(
    .din0(mul_ln22_2_fu_1332_p0),
    .din1(mul_ln22_2_fu_1332_p1),
    .dout(mul_ln22_2_fu_1332_p2)
);

MNIST_mul_6ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_6ns_8ns_13_1_1_U305(
    .din0(mul_ln22_3_fu_1365_p0),
    .din1(mul_ln22_3_fu_1365_p1),
    .dout(mul_ln22_3_fu_1365_p2)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U306(
    .din0(weights_10_load_2_reg_1974),
    .din1(weights_11_load_2_reg_1979),
    .din2(weights_12_q0),
    .din3(weights_0_q0),
    .din4(ic_1_reg_1752),
    .dout(tmp_9_fu_1396_p6)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U307(
    .din0(weights_1_q0),
    .din1(weights_2_q0),
    .din2(weights_3_q0),
    .din3(weights_4_q0),
    .din4(ic_1_reg_1752),
    .dout(tmp_s_fu_1407_p6)
);

MNIST_mux_43_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_43_32_1_1_U308(
    .din0(weights_5_q0),
    .din1(weights_6_q0),
    .din2(weights_7_q0),
    .din3(weights_8_q0),
    .din4(ic_1_reg_1752),
    .dout(tmp_10_fu_1420_p6)
);

MNIST_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter2_stage1) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter2_stage1) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln16_fu_881_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ic_fu_206 <= add_ln16_fu_887_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            ic_fu_206 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_12_fu_158 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_buf_12_fu_158 <= grp_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_13_fu_162 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_buf_13_fu_162 <= grp_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_14_fu_166 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_buf_14_fu_166 <= grp_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_15_fu_170 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_buf_15_fu_170 <= grp_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            out_buf_16_fu_174 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            out_buf_16_fu_174 <= grp_fu_781_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            out_buf_17_fu_178 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            out_buf_17_fu_178 <= grp_fu_785_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            out_buf_18_fu_182 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            out_buf_18_fu_182 <= grp_fu_789_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            out_buf_19_fu_186 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            out_buf_19_fu_186 <= grp_fu_793_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_20_fu_190 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_buf_20_fu_190 <= grp_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_21_fu_194 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_buf_21_fu_194 <= grp_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_22_fu_198 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_buf_22_fu_198 <= grp_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_23_fu_202 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_buf_23_fu_202 <= grp_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1769 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        depth2_o77_read_reg_1914 <= depth2_o77_dout;
        tmp_1_reg_1924 <= tmp_1_fu_1225_p6;
        tmp_2_reg_1929 <= tmp_2_fu_1234_p6;
        tmp_3_reg_1934 <= tmp_3_fu_1243_p6;
        tmp_4_reg_1939 <= tmp_4_fu_1256_p6;
        tmp_5_reg_1944 <= tmp_5_fu_1269_p6;
        tmp_6_reg_1949 <= tmp_6_fu_1282_p6;
        tmp_7_reg_1954 <= tmp_7_fu_1295_p6;
        tmp_8_reg_1959 <= tmp_8_fu_1308_p6;
        tmp_reg_1919 <= tmp_fu_1216_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ic_1_reg_1752 <= ap_sig_allocacmp_ic_1;
        icmp_ln16_reg_1769 <= icmp_ln16_fu_881_p2;
        icmp_ln16_reg_1769_pp0_iter1_reg <= icmp_ln16_reg_1769;
        icmp_ln16_reg_1769_pp0_iter2_reg <= icmp_ln16_reg_1769_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul24_10_reg_2142 <= grp_fu_809_p2;
        mul24_8_reg_2127 <= grp_fu_797_p2;
        mul24_9_reg_2132 <= grp_fu_801_p2;
        mul24_s_reg_2137 <= grp_fu_805_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul24_1_reg_2052 <= grp_fu_801_p2;
        mul24_2_reg_2057 <= grp_fu_805_p2;
        mul24_3_reg_2062 <= grp_fu_809_p2;
        mul_reg_2047 <= grp_fu_797_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul24_4_reg_2087 <= grp_fu_797_p2;
        mul24_5_reg_2092 <= grp_fu_801_p2;
        mul24_6_reg_2097 <= grp_fu_805_p2;
        mul24_7_reg_2102 <= grp_fu_809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1769 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_10_reg_2042 <= tmp_10_fu_1420_p6;
        tmp_25_reg_2024 <= tmp_25_fu_1389_p1;
        tmp_9_reg_2032 <= tmp_9_fu_1396_p6;
        tmp_s_reg_2037 <= tmp_s_fu_1407_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1769 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_10_load_2_reg_1974 <= weights_10_q0;
        weights_11_load_2_reg_1979 <= weights_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln16_fu_881_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln16_reg_1773[2 : 0] <= zext_ln16_fu_893_p1[2 : 0];
        zext_ln22_5_reg_1898[2 : 0] <= zext_ln22_5_fu_1205_p1[2 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add277_out_ap_vld = 1'b1;
    end else begin
        add277_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_1017_out_ap_vld = 1'b1;
    end else begin
        add27_1017_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_1118_out_ap_vld = 1'b1;
    end else begin
        add27_1118_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_18_out_ap_vld = 1'b1;
    end else begin
        add27_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_29_out_ap_vld = 1'b1;
    end else begin
        add27_29_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_310_out_ap_vld = 1'b1;
    end else begin
        add27_310_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_411_out_ap_vld = 1'b1;
    end else begin
        add27_411_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_512_out_ap_vld = 1'b1;
    end else begin
        add27_512_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_613_out_ap_vld = 1'b1;
    end else begin
        add27_613_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_714_out_ap_vld = 1'b1;
    end else begin
        add27_714_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_815_out_ap_vld = 1'b1;
    end else begin
        add27_815_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add27_916_out_ap_vld = 1'b1;
    end else begin
        add27_916_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_1769 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln16_reg_1769_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ic_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_ic_1 = ic_fu_206;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_out_buf_12_load_1 = grp_fu_777_p2;
    end else begin
        ap_sig_allocacmp_out_buf_12_load_1 = out_buf_12_fu_158;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_out_buf_13_load_1 = grp_fu_781_p2;
    end else begin
        ap_sig_allocacmp_out_buf_13_load_1 = out_buf_13_fu_162;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_out_buf_14_load_1 = grp_fu_785_p2;
    end else begin
        ap_sig_allocacmp_out_buf_14_load_1 = out_buf_14_fu_166;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_out_buf_15_load_1 = grp_fu_789_p2;
    end else begin
        ap_sig_allocacmp_out_buf_15_load_1 = out_buf_15_fu_170;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_out_buf_16_load_1 = grp_fu_781_p2;
    end else begin
        ap_sig_allocacmp_out_buf_16_load_1 = out_buf_16_fu_174;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_out_buf_17_load_1 = grp_fu_785_p2;
    end else begin
        ap_sig_allocacmp_out_buf_17_load_1 = out_buf_17_fu_178;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_out_buf_18_load_1 = grp_fu_789_p2;
    end else begin
        ap_sig_allocacmp_out_buf_18_load_1 = out_buf_18_fu_182;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_out_buf_19_load_1 = grp_fu_793_p2;
    end else begin
        ap_sig_allocacmp_out_buf_19_load_1 = out_buf_19_fu_186;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_out_buf_20_load_1 = grp_fu_781_p2;
    end else begin
        ap_sig_allocacmp_out_buf_20_load_1 = out_buf_20_fu_190;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_out_buf_21_load_1 = grp_fu_785_p2;
    end else begin
        ap_sig_allocacmp_out_buf_21_load_1 = out_buf_21_fu_194;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_out_buf_22_load_1 = grp_fu_789_p2;
    end else begin
        ap_sig_allocacmp_out_buf_22_load_1 = out_buf_22_fu_198;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_out_buf_23_load_1 = grp_fu_793_p2;
    end else begin
        ap_sig_allocacmp_out_buf_23_load_1 = out_buf_23_fu_202;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_1769 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        depth2_o77_blk_n = depth2_o77_empty_n;
    end else begin
        depth2_o77_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_1769 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        depth2_o77_read = 1'b1;
    end else begin
        depth2_o77_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_777_ce = 1'b1;
    end else begin
        grp_fu_777_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_781_ce = 1'b1;
    end else begin
        grp_fu_781_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_781_p0 = ap_sig_allocacmp_out_buf_20_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_781_p0 = ap_sig_allocacmp_out_buf_16_load_1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_781_p0 = ap_sig_allocacmp_out_buf_13_load_1;
    end else begin
        grp_fu_781_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_781_p1 = mul24_8_reg_2127;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_781_p1 = mul24_4_reg_2087;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_781_p1 = mul24_1_reg_2052;
    end else begin
        grp_fu_781_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_785_ce = 1'b1;
    end else begin
        grp_fu_785_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_785_p0 = ap_sig_allocacmp_out_buf_21_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_785_p0 = ap_sig_allocacmp_out_buf_17_load_1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_785_p0 = ap_sig_allocacmp_out_buf_14_load_1;
    end else begin
        grp_fu_785_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_785_p1 = mul24_9_reg_2132;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_785_p1 = mul24_5_reg_2092;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_785_p1 = mul24_2_reg_2057;
    end else begin
        grp_fu_785_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_789_ce = 1'b1;
    end else begin
        grp_fu_789_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_789_p0 = ap_sig_allocacmp_out_buf_22_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_789_p0 = ap_sig_allocacmp_out_buf_18_load_1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_789_p0 = ap_sig_allocacmp_out_buf_15_load_1;
    end else begin
        grp_fu_789_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_789_p1 = mul24_s_reg_2137;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_789_p1 = mul24_6_reg_2097;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_789_p1 = mul24_3_reg_2062;
    end else begin
        grp_fu_789_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_793_ce = 1'b1;
    end else begin
        grp_fu_793_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_793_p0 = ap_sig_allocacmp_out_buf_23_load_1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_793_p0 = ap_sig_allocacmp_out_buf_19_load_1;
        end else begin
            grp_fu_793_p0 = 'bx;
        end
    end else begin
        grp_fu_793_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_793_p1 = mul24_10_reg_2142;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_793_p1 = mul24_7_reg_2102;
        end else begin
            grp_fu_793_p1 = 'bx;
        end
    end else begin
        grp_fu_793_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_797_ce = 1'b1;
    end else begin
        grp_fu_797_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_797_p0 = tmp_25_reg_2024;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_797_p0 = tmp_25_fu_1389_p1;
    end else begin
        grp_fu_797_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_797_p1 = tmp_8_reg_1959;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_797_p1 = tmp_4_reg_1939;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_797_p1 = tmp_reg_1919;
    end else begin
        grp_fu_797_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_801_ce = 1'b1;
    end else begin
        grp_fu_801_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_801_p0 = tmp_25_reg_2024;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_801_p0 = tmp_25_fu_1389_p1;
    end else begin
        grp_fu_801_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_801_p1 = tmp_9_reg_2032;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_801_p1 = tmp_5_reg_1944;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_801_p1 = tmp_1_reg_1924;
    end else begin
        grp_fu_801_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_805_ce = 1'b1;
    end else begin
        grp_fu_805_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_805_p0 = tmp_25_reg_2024;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_805_p0 = tmp_25_fu_1389_p1;
    end else begin
        grp_fu_805_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_805_p1 = tmp_s_reg_2037;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_805_p1 = tmp_6_reg_1949;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_805_p1 = tmp_2_reg_1929;
    end else begin
        grp_fu_805_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_809_ce = 1'b1;
    end else begin
        grp_fu_809_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_809_p0 = tmp_25_reg_2024;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_809_p0 = tmp_25_fu_1389_p1;
    end else begin
        grp_fu_809_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_809_p1 = tmp_10_reg_2042;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_809_p1 = tmp_7_reg_1954;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_809_p1 = tmp_3_reg_1934;
    end else begin
        grp_fu_809_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_0_address0 = zext_ln22_5_reg_1898;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_0_address0 = zext_ln22_2_fu_1073_p1;
        end else begin
            weights_0_address0 = 'bx;
        end
    end else begin
        weights_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_0_ce0 = 1'b1;
    end else begin
        weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_0_ce1 = 1'b1;
    end else begin
        weights_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_10_ce0 = 1'b1;
    end else begin
        weights_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_10_ce1 = 1'b1;
    end else begin
        weights_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_11_ce0 = 1'b1;
    end else begin
        weights_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_11_ce1 = 1'b1;
    end else begin
        weights_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_12_address0 = zext_ln22_5_reg_1898;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_12_address0 = zext_ln22_2_fu_1073_p1;
        end else begin
            weights_12_address0 = 'bx;
        end
    end else begin
        weights_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_12_ce0 = 1'b1;
    end else begin
        weights_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_12_ce1 = 1'b1;
    end else begin
        weights_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_1_address0 = zext_ln22_6_fu_1348_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_1_address0 = zext_ln22_2_fu_1073_p1;
        end else begin
            weights_1_address0 = 'bx;
        end
    end else begin
        weights_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_1_ce0 = 1'b1;
    end else begin
        weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_1_ce1 = 1'b1;
    end else begin
        weights_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_2_address0 = zext_ln22_6_fu_1348_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_2_address0 = zext_ln22_3_fu_1135_p1;
        end else begin
            weights_2_address0 = 'bx;
        end
    end else begin
        weights_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_2_ce0 = 1'b1;
    end else begin
        weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_2_ce1 = 1'b1;
    end else begin
        weights_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_3_address0 = zext_ln22_6_fu_1348_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_3_address0 = zext_ln22_3_fu_1135_p1;
        end else begin
            weights_3_address0 = 'bx;
        end
    end else begin
        weights_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_3_ce0 = 1'b1;
    end else begin
        weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_3_ce1 = 1'b1;
    end else begin
        weights_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_4_address0 = zext_ln22_6_fu_1348_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_4_address0 = zext_ln22_3_fu_1135_p1;
        end else begin
            weights_4_address0 = 'bx;
        end
    end else begin
        weights_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_4_ce0 = 1'b1;
    end else begin
        weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_4_ce1 = 1'b1;
    end else begin
        weights_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_5_address0 = zext_ln22_7_fu_1381_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_5_address0 = zext_ln22_3_fu_1135_p1;
        end else begin
            weights_5_address0 = 'bx;
        end
    end else begin
        weights_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_5_ce0 = 1'b1;
    end else begin
        weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_5_ce1 = 1'b1;
    end else begin
        weights_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_6_address0 = zext_ln22_7_fu_1381_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_6_address0 = zext_ln22_4_fu_1171_p1;
        end else begin
            weights_6_address0 = 'bx;
        end
    end else begin
        weights_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_6_ce0 = 1'b1;
    end else begin
        weights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_6_ce1 = 1'b1;
    end else begin
        weights_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_7_address0 = zext_ln22_7_fu_1381_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_7_address0 = zext_ln22_4_fu_1171_p1;
        end else begin
            weights_7_address0 = 'bx;
        end
    end else begin
        weights_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_7_ce0 = 1'b1;
    end else begin
        weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_7_ce1 = 1'b1;
    end else begin
        weights_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_8_address0 = zext_ln22_7_fu_1381_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_8_address0 = zext_ln22_4_fu_1171_p1;
        end else begin
            weights_8_address0 = 'bx;
        end
    end else begin
        weights_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_8_ce0 = 1'b1;
    end else begin
        weights_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_8_ce1 = 1'b1;
    end else begin
        weights_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_9_ce0 = 1'b1;
    end else begin
        weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_9_ce1 = 1'b1;
    end else begin
        weights_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter2_stage1) & (ap_idle_pp0_0to1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add277_out = out_buf_12_fu_158;

assign add27_1017_out = out_buf_22_fu_198;

assign add27_1118_out = out_buf_23_fu_202;

assign add27_18_out = out_buf_13_fu_162;

assign add27_29_out = out_buf_14_fu_166;

assign add27_310_out = out_buf_15_fu_170;

assign add27_411_out = out_buf_16_fu_174;

assign add27_512_out = out_buf_17_fu_178;

assign add27_613_out = out_buf_18_fu_182;

assign add27_714_out = out_buf_19_fu_186;

assign add27_815_out = out_buf_20_fu_190;

assign add27_916_out = out_buf_21_fu_194;

assign add_ln16_fu_887_p2 = (ap_sig_allocacmp_ic_1 + 3'd1);

assign add_ln22_1_fu_1179_p2 = ($signed(zext_ln16_fu_893_p1) + $signed(6'd36));

assign add_ln22_2_fu_1356_p2 = ($signed(zext_ln16_reg_1773) + $signed(6'd44));

assign add_ln22_3_fu_943_p2 = (zext_ln22_9_fu_925_p1 + zext_ln22_10_fu_939_p1);

assign add_ln22_4_fu_997_p2 = (zext_ln22_11_fu_981_p1 + zext_ln22_12_fu_993_p1);

assign add_ln22_5_fu_1057_p2 = (zext_ln22_13_fu_1035_p1 + zext_ln22_14_fu_1053_p1);

assign add_ln22_6_fu_1119_p2 = (zext_ln22_15_fu_1099_p1 + zext_ln22_16_fu_1115_p1);

assign add_ln22_fu_967_p2 = ($signed(zext_ln16_1_fu_897_p1) + $signed(5'd20));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((depth2_o77_empty_n == 1'b0) & (icmp_ln16_reg_1769 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((depth2_o77_empty_n == 1'b0) & (icmp_ln16_reg_1769 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((depth2_o77_empty_n == 1'b0) & (icmp_ln16_reg_1769 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((depth2_o77_empty_n == 1'b0) & (icmp_ln16_reg_1769 == 1'd0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign icmp_ln16_fu_881_p2 = ((ap_sig_allocacmp_ic_1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_901_p2 = (($signed(ap_sig_allocacmp_ic_1) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign mul_ln22_1_fu_1189_p0 = mul_ln22_1_fu_1189_p00;

assign mul_ln22_1_fu_1189_p00 = add_ln22_1_fu_1179_p2;

assign mul_ln22_1_fu_1189_p1 = 13'd79;

assign mul_ln22_2_fu_1332_p0 = mul_ln22_2_fu_1332_p00;

assign mul_ln22_2_fu_1332_p00 = zext_ln22_19_cast_fu_1321_p3;

assign mul_ln22_2_fu_1332_p1 = 13'd79;

assign mul_ln22_3_fu_1365_p0 = mul_ln22_3_fu_1365_p00;

assign mul_ln22_3_fu_1365_p00 = add_ln22_2_fu_1356_p2;

assign mul_ln22_3_fu_1365_p1 = 13'd79;

assign mul_ln22_fu_1155_p0 = mul_ln22_fu_1155_p00;

assign mul_ln22_fu_1155_p00 = zext_ln22_17_cast_fu_1143_p3;

assign mul_ln22_fu_1155_p1 = 13'd79;

assign sext_ln22_1_fu_1049_p1 = $signed(tmp_16_fu_1039_p4);

assign sext_ln22_2_fu_1095_p1 = $signed(tmp_18_fu_1087_p3);

assign sext_ln22_3_fu_1111_p1 = $signed(tmp_19_fu_1103_p3);

assign sext_ln22_fu_1031_p1 = $signed(tmp_15_fu_1021_p4);

assign tmp_11_fu_973_p3 = {{add_ln22_fu_967_p2}, {5'd0}};

assign tmp_12_fu_949_p4 = {{add_ln22_3_fu_943_p2[10:9]}};

assign tmp_13_fu_985_p3 = {{add_ln22_fu_967_p2}, {3'd0}};

assign tmp_14_fu_1003_p4 = {{add_ln22_4_fu_997_p2[10:9]}};

assign tmp_15_fu_1021_p4 = {{{{1'd1}, {ap_sig_allocacmp_ic_1}}}, {5'd0}};

assign tmp_16_fu_1039_p4 = {{{{1'd1}, {ap_sig_allocacmp_ic_1}}}, {3'd0}};

assign tmp_17_fu_1063_p4 = {{add_ln22_5_fu_1057_p2[10:9]}};

assign tmp_18_fu_1087_p3 = {{xor_ln22_fu_1081_p2}, {5'd0}};

assign tmp_19_fu_1103_p3 = {{xor_ln22_fu_1081_p2}, {3'd0}};

assign tmp_20_fu_1125_p4 = {{add_ln22_6_fu_1119_p2[10:9]}};

assign tmp_21_fu_1161_p4 = {{mul_ln22_fu_1155_p2[12:10]}};

assign tmp_22_fu_1195_p4 = {{mul_ln22_1_fu_1189_p2[12:10]}};

assign tmp_23_fu_1338_p4 = {{mul_ln22_2_fu_1332_p2[12:10]}};

assign tmp_24_fu_1371_p4 = {{mul_ln22_3_fu_1365_p2[12:10]}};

assign tmp_25_fu_1389_p1 = depth2_o77_read_reg_1914;

assign weights_0_address1 = zext_ln22_8_fu_907_p1;

assign weights_10_address0 = zext_ln22_5_fu_1205_p1;

assign weights_10_address1 = zext_ln22_1_fu_1013_p1;

assign weights_11_address0 = zext_ln22_5_fu_1205_p1;

assign weights_11_address1 = zext_ln22_2_fu_1073_p1;

assign weights_12_address1 = zext_ln22_8_fu_907_p1;

assign weights_1_address1 = zext_ln22_8_fu_907_p1;

assign weights_2_address1 = zext_ln22_8_fu_907_p1;

assign weights_3_address1 = zext_ln22_fu_959_p1;

assign weights_4_address1 = zext_ln22_fu_959_p1;

assign weights_5_address1 = zext_ln22_fu_959_p1;

assign weights_6_address1 = zext_ln22_fu_959_p1;

assign weights_7_address1 = zext_ln22_1_fu_1013_p1;

assign weights_8_address1 = zext_ln22_1_fu_1013_p1;

assign weights_9_address0 = zext_ln22_4_fu_1171_p1;

assign weights_9_address1 = zext_ln22_1_fu_1013_p1;

assign xor_ln22_fu_1081_p2 = (ap_sig_allocacmp_ic_1 ^ 3'd4);

assign zext_ln16_1_fu_897_p1 = ap_sig_allocacmp_ic_1;

assign zext_ln16_fu_893_p1 = ap_sig_allocacmp_ic_1;

assign zext_ln22_10_cast_fu_929_p4 = {{{{2'd2}, {ap_sig_allocacmp_ic_1}}}, {3'd0}};

assign zext_ln22_10_fu_939_p1 = zext_ln22_10_cast_fu_929_p4;

assign zext_ln22_11_fu_981_p1 = tmp_11_fu_973_p3;

assign zext_ln22_12_fu_993_p1 = tmp_13_fu_985_p3;

assign zext_ln22_13_fu_1035_p1 = $unsigned(sext_ln22_fu_1031_p1);

assign zext_ln22_14_fu_1053_p1 = $unsigned(sext_ln22_1_fu_1049_p1);

assign zext_ln22_15_fu_1099_p1 = $unsigned(sext_ln22_2_fu_1095_p1);

assign zext_ln22_16_fu_1115_p1 = $unsigned(sext_ln22_3_fu_1111_p1);

assign zext_ln22_17_cast_fu_1143_p3 = {{3'd4}, {ap_sig_allocacmp_ic_1}};

assign zext_ln22_19_cast_fu_1321_p3 = {{3'd5}, {ic_1_reg_1752}};

assign zext_ln22_1_fu_1013_p1 = tmp_14_fu_1003_p4;

assign zext_ln22_2_fu_1073_p1 = tmp_17_fu_1063_p4;

assign zext_ln22_3_fu_1135_p1 = tmp_20_fu_1125_p4;

assign zext_ln22_4_fu_1171_p1 = tmp_21_fu_1161_p4;

assign zext_ln22_5_fu_1205_p1 = tmp_22_fu_1195_p4;

assign zext_ln22_6_fu_1348_p1 = tmp_23_fu_1338_p4;

assign zext_ln22_7_fu_1381_p1 = tmp_24_fu_1371_p4;

assign zext_ln22_8_fu_907_p1 = icmp_ln22_fu_901_p2;

assign zext_ln22_9_cast_fu_915_p4 = {{{{2'd2}, {ap_sig_allocacmp_ic_1}}}, {5'd0}};

assign zext_ln22_9_fu_925_p1 = zext_ln22_9_cast_fu_915_p4;

assign zext_ln22_fu_959_p1 = tmp_12_fu_949_p4;

always @ (posedge ap_clk) begin
    zext_ln16_reg_1773[5:3] <= 3'b000;
    zext_ln22_5_reg_1898[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //MNIST_PointwiseConv2d_4_4_12_Pipeline_ic
