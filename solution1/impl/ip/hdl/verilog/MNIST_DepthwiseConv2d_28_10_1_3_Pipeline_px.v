// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MNIST_DepthwiseConv2d_28_10_1_3_Pipeline_px (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input74_dout,
        input74_num_data_valid,
        input74_fifo_cap,
        input74_empty_n,
        input74_read,
        depth1_o75_din,
        depth1_o75_num_data_valid,
        depth1_o75_fifo_cap,
        depth1_o75_full_n,
        depth1_o75_write,
        weights_load,
        weights_load_4,
        weights_load_5,
        weights_load_6,
        weights_load_7,
        weights_load_8,
        weights_load_9,
        weights_load_10,
        weights_load_11,
        cmp164,
        line_buf_address0,
        line_buf_ce0,
        line_buf_q0,
        line_buf_1_address0,
        line_buf_1_ce0,
        line_buf_1_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] input74_dout;
input  [1:0] input74_num_data_valid;
input  [1:0] input74_fifo_cap;
input   input74_empty_n;
output   input74_read;
output  [31:0] depth1_o75_din;
input  [1:0] depth1_o75_num_data_valid;
input  [1:0] depth1_o75_fifo_cap;
input   depth1_o75_full_n;
output   depth1_o75_write;
input  [31:0] weights_load;
input  [31:0] weights_load_4;
input  [31:0] weights_load_5;
input  [31:0] weights_load_6;
input  [31:0] weights_load_7;
input  [31:0] weights_load_8;
input  [31:0] weights_load_9;
input  [31:0] weights_load_10;
input  [31:0] weights_load_11;
input  [0:0] cmp164;
output  [4:0] line_buf_address0;
output   line_buf_ce0;
input  [31:0] line_buf_q0;
output  [4:0] line_buf_1_address0;
output   line_buf_1_ce0;
input  [31:0] line_buf_1_q0;

reg ap_idle;
reg input74_read;
reg depth1_o75_write;
reg[4:0] line_buf_address0;
reg line_buf_ce0;
reg[4:0] line_buf_1_address0;
reg line_buf_1_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln75_reg_448;
reg    ap_predicate_op102_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_state24_pp0_stage2_iter7;
wire    ap_block_state27_pp0_stage2_iter8;
wire    ap_block_state30_pp0_stage2_iter9;
wire    ap_block_state33_pp0_stage2_iter10;
wire    ap_block_state36_pp0_stage2_iter11;
wire    ap_block_state39_pp0_stage2_iter12;
reg    ap_block_state42_pp0_stage2_iter13;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    depth1_o75_blk_n;
wire    ap_block_pp0_stage2;
reg    input74_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] or_ln85_reg_468;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln86_reg_472;
wire   [0:0] cmp164_read_read_fu_82_p2;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op113_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_state25_pp0_stage0_iter8;
wire    ap_block_state28_pp0_stage0_iter9;
wire    ap_block_state31_pp0_stage0_iter10;
wire    ap_block_state34_pp0_stage0_iter11;
wire    ap_block_state37_pp0_stage0_iter12;
wire    ap_block_state40_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln75_fu_285_p2;
wire   [4:0] empty_149_fu_313_p2;
reg   [4:0] empty_149_reg_452;
wire   [0:0] or_ln85_fu_337_p2;
wire   [0:0] or_ln86_fu_343_p2;
reg   [31:0] line_buf_load_reg_476;
reg    ap_predicate_op90_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_state26_pp0_stage1_iter8;
wire    ap_block_state29_pp0_stage1_iter9;
wire    ap_block_state32_pp0_stage1_iter10;
wire    ap_block_state35_pp0_stage1_iter11;
wire    ap_block_state38_pp0_stage1_iter12;
wire    ap_block_state41_pp0_stage1_iter13;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] line_buf_1_load_reg_486;
wire   [31:0] tmp_fu_365_p1;
reg   [31:0] line_buf_load_1_reg_501;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] line_buf_1_load_1_reg_511;
wire   [31:0] tmp_40_fu_380_p1;
reg   [31:0] line_buf_load_2_reg_526;
reg   [31:0] line_buf_1_load_2_reg_531;
wire   [31:0] tmp_41_fu_384_p1;
wire   [31:0] grp_fu_262_p2;
reg   [31:0] mul_reg_541;
wire   [31:0] grp_fu_266_p2;
reg   [31:0] mul213_1_reg_546;
reg   [31:0] mul213_1_reg_546_pp0_iter2_reg;
reg   [31:0] mul213_1_reg_546_pp0_iter3_reg;
reg   [31:0] mul213_1_reg_546_pp0_iter4_reg;
reg   [31:0] mul213_1_reg_546_pp0_iter5_reg;
wire   [31:0] grp_fu_270_p2;
reg   [31:0] mul213_2_reg_551;
reg   [31:0] mul213_2_reg_551_pp0_iter2_reg;
reg   [31:0] mul213_2_reg_551_pp0_iter3_reg;
reg   [31:0] mul213_2_reg_551_pp0_iter4_reg;
reg   [31:0] mul213_2_reg_551_pp0_iter5_reg;
reg   [31:0] mul213_2_reg_551_pp0_iter6_reg;
reg   [31:0] mul213_2_reg_551_pp0_iter7_reg;
reg   [31:0] mul213_2_reg_551_pp0_iter8_reg;
reg   [31:0] mul213_2_reg_551_pp0_iter9_reg;
reg   [31:0] mul213_s_reg_556;
reg   [31:0] mul213_s_reg_556_pp0_iter2_reg;
reg   [31:0] mul213_1_1_reg_561;
reg   [31:0] mul213_1_1_reg_561_pp0_iter2_reg;
reg   [31:0] mul213_1_1_reg_561_pp0_iter3_reg;
reg   [31:0] mul213_1_1_reg_561_pp0_iter4_reg;
reg   [31:0] mul213_1_1_reg_561_pp0_iter5_reg;
reg   [31:0] mul213_1_1_reg_561_pp0_iter6_reg;
reg   [31:0] mul213_2_1_reg_566;
reg   [31:0] mul213_2_1_reg_566_pp0_iter2_reg;
reg   [31:0] mul213_2_1_reg_566_pp0_iter3_reg;
reg   [31:0] mul213_2_1_reg_566_pp0_iter4_reg;
reg   [31:0] mul213_2_1_reg_566_pp0_iter5_reg;
reg   [31:0] mul213_2_1_reg_566_pp0_iter6_reg;
reg   [31:0] mul213_2_1_reg_566_pp0_iter7_reg;
reg   [31:0] mul213_2_1_reg_566_pp0_iter8_reg;
reg   [31:0] mul213_2_1_reg_566_pp0_iter9_reg;
reg   [31:0] mul213_2_1_reg_566_pp0_iter10_reg;
reg   [31:0] mul213_3_reg_571;
reg   [31:0] mul213_3_reg_571_pp0_iter3_reg;
reg   [31:0] mul213_3_reg_571_pp0_iter4_reg;
reg   [31:0] mul213_1_2_reg_576;
reg   [31:0] mul213_1_2_reg_576_pp0_iter3_reg;
reg   [31:0] mul213_1_2_reg_576_pp0_iter4_reg;
reg   [31:0] mul213_1_2_reg_576_pp0_iter5_reg;
reg   [31:0] mul213_1_2_reg_576_pp0_iter6_reg;
reg   [31:0] mul213_1_2_reg_576_pp0_iter7_reg;
reg   [31:0] mul213_1_2_reg_576_pp0_iter8_reg;
reg   [31:0] mul213_2_2_reg_581;
reg   [31:0] mul213_2_2_reg_581_pp0_iter3_reg;
reg   [31:0] mul213_2_2_reg_581_pp0_iter4_reg;
reg   [31:0] mul213_2_2_reg_581_pp0_iter5_reg;
reg   [31:0] mul213_2_2_reg_581_pp0_iter6_reg;
reg   [31:0] mul213_2_2_reg_581_pp0_iter7_reg;
reg   [31:0] mul213_2_2_reg_581_pp0_iter8_reg;
reg   [31:0] mul213_2_2_reg_581_pp0_iter9_reg;
reg   [31:0] mul213_2_2_reg_581_pp0_iter10_reg;
reg   [31:0] mul213_2_2_reg_581_pp0_iter11_reg;
reg   [31:0] mul213_2_2_reg_581_pp0_iter12_reg;
wire   [31:0] grp_fu_249_p2;
reg   [31:0] out_reg_586;
reg   [31:0] out_16_reg_591;
reg   [31:0] out_17_reg_596;
wire   [31:0] grp_fu_254_p2;
reg   [31:0] out_18_reg_601;
reg   [31:0] out_19_reg_606;
reg   [31:0] out_20_reg_611;
wire   [31:0] grp_fu_258_p2;
reg   [31:0] out_21_reg_616;
reg   [31:0] out_22_reg_621;
reg   [31:0] out_23_reg_626;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [31:0] ap_phi_reg_pp0_iter0_empty_147_reg_213;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_146_reg_225;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_146_reg_225;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_145_reg_237;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_145_reg_237;
wire   [63:0] zext_ln82_fu_319_p1;
wire   [63:0] zext_ln82_1_fu_359_p1;
wire   [63:0] zext_ln82_2_fu_374_p1;
reg   [3:0] px_fu_78;
wire   [3:0] add_ln75_fu_291_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_px_1;
reg    ap_block_pp0_stage2_01001;
reg   [31:0] grp_fu_249_p0;
reg   [31:0] grp_fu_249_p1;
reg   [31:0] grp_fu_254_p0;
reg   [31:0] grp_fu_254_p1;
reg   [31:0] grp_fu_258_p0;
reg   [31:0] grp_fu_258_p1;
reg   [31:0] grp_fu_262_p0;
reg   [31:0] grp_fu_262_p1;
reg   [31:0] grp_fu_266_p0;
reg   [31:0] grp_fu_266_p1;
reg   [31:0] grp_fu_270_p0;
reg   [31:0] grp_fu_270_p1;
wire   [2:0] empty_148_fu_301_p1;
wire   [4:0] p_shl_fu_305_p3;
wire   [4:0] zext_ln75_fu_297_p1;
wire   [0:0] cmp158_fu_325_p2;
wire   [0:0] cmp160_fu_331_p2;
wire   [4:0] empty_150_fu_354_p2;
wire   [4:0] empty_151_fu_369_p2;
reg    grp_fu_249_ce;
reg    grp_fu_254_ce;
reg    grp_fu_258_ce;
reg    grp_fu_262_ce;
reg    grp_fu_266_ce;
reg    grp_fu_270_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to13;
reg    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_379;
reg    ap_condition_778;
reg    ap_condition_384;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

MNIST_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U142(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_249_p0),
    .din1(grp_fu_249_p1),
    .ce(grp_fu_249_ce),
    .dout(grp_fu_249_p2)
);

MNIST_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_254_p0),
    .din1(grp_fu_254_p1),
    .ce(grp_fu_254_ce),
    .dout(grp_fu_254_p2)
);

MNIST_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_258_p0),
    .din1(grp_fu_258_p1),
    .ce(grp_fu_258_ce),
    .dout(grp_fu_258_p2)
);

MNIST_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_262_p0),
    .din1(grp_fu_262_p1),
    .ce(grp_fu_262_ce),
    .dout(grp_fu_262_p2)
);

MNIST_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_266_p0),
    .din1(grp_fu_266_p1),
    .ce(grp_fu_266_ce),
    .dout(grp_fu_266_p2)
);

MNIST_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_270_p0),
    .din1(grp_fu_270_p1),
    .ce(grp_fu_270_ce),
    .dout(grp_fu_270_p2)
);

MNIST_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_778)) begin
            ap_phi_reg_pp0_iter0_empty_147_reg_213 <= 32'd0;
        end else if ((1'b1 == ap_condition_379)) begin
            ap_phi_reg_pp0_iter0_empty_147_reg_213 <= tmp_fu_365_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_448 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln86_reg_472 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_empty_145_reg_237 <= tmp_41_fu_384_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_phi_reg_pp0_iter1_empty_145_reg_237 <= ap_phi_reg_pp0_iter0_empty_145_reg_237;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_384)) begin
        if (((cmp164 == 1'd0) & (icmp_ln75_reg_448 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_empty_146_reg_225 <= tmp_40_fu_380_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_146_reg_225 <= ap_phi_reg_pp0_iter0_empty_146_reg_225;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln75_fu_285_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            px_fu_78 <= add_ln75_fu_291_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            px_fu_78 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        mul213_1_1_reg_561_pp0_iter2_reg <= mul213_1_1_reg_561;
        mul213_1_1_reg_561_pp0_iter3_reg <= mul213_1_1_reg_561_pp0_iter2_reg;
        mul213_1_1_reg_561_pp0_iter4_reg <= mul213_1_1_reg_561_pp0_iter3_reg;
        mul213_1_1_reg_561_pp0_iter5_reg <= mul213_1_1_reg_561_pp0_iter4_reg;
        mul213_1_1_reg_561_pp0_iter6_reg <= mul213_1_1_reg_561_pp0_iter5_reg;
        mul213_2_1_reg_566_pp0_iter10_reg <= mul213_2_1_reg_566_pp0_iter9_reg;
        mul213_2_1_reg_566_pp0_iter2_reg <= mul213_2_1_reg_566;
        mul213_2_1_reg_566_pp0_iter3_reg <= mul213_2_1_reg_566_pp0_iter2_reg;
        mul213_2_1_reg_566_pp0_iter4_reg <= mul213_2_1_reg_566_pp0_iter3_reg;
        mul213_2_1_reg_566_pp0_iter5_reg <= mul213_2_1_reg_566_pp0_iter4_reg;
        mul213_2_1_reg_566_pp0_iter6_reg <= mul213_2_1_reg_566_pp0_iter5_reg;
        mul213_2_1_reg_566_pp0_iter7_reg <= mul213_2_1_reg_566_pp0_iter6_reg;
        mul213_2_1_reg_566_pp0_iter8_reg <= mul213_2_1_reg_566_pp0_iter7_reg;
        mul213_2_1_reg_566_pp0_iter9_reg <= mul213_2_1_reg_566_pp0_iter8_reg;
        mul213_s_reg_556_pp0_iter2_reg <= mul213_s_reg_556;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_285_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_149_reg_452 <= empty_149_fu_313_p2;
        or_ln85_reg_468 <= or_ln85_fu_337_p2;
        or_ln86_reg_472 <= or_ln86_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln75_reg_448 <= icmp_ln75_fu_285_p2;
        mul213_1_2_reg_576_pp0_iter3_reg <= mul213_1_2_reg_576;
        mul213_1_2_reg_576_pp0_iter4_reg <= mul213_1_2_reg_576_pp0_iter3_reg;
        mul213_1_2_reg_576_pp0_iter5_reg <= mul213_1_2_reg_576_pp0_iter4_reg;
        mul213_1_2_reg_576_pp0_iter6_reg <= mul213_1_2_reg_576_pp0_iter5_reg;
        mul213_1_2_reg_576_pp0_iter7_reg <= mul213_1_2_reg_576_pp0_iter6_reg;
        mul213_1_2_reg_576_pp0_iter8_reg <= mul213_1_2_reg_576_pp0_iter7_reg;
        mul213_2_2_reg_581_pp0_iter10_reg <= mul213_2_2_reg_581_pp0_iter9_reg;
        mul213_2_2_reg_581_pp0_iter11_reg <= mul213_2_2_reg_581_pp0_iter10_reg;
        mul213_2_2_reg_581_pp0_iter12_reg <= mul213_2_2_reg_581_pp0_iter11_reg;
        mul213_2_2_reg_581_pp0_iter3_reg <= mul213_2_2_reg_581;
        mul213_2_2_reg_581_pp0_iter4_reg <= mul213_2_2_reg_581_pp0_iter3_reg;
        mul213_2_2_reg_581_pp0_iter5_reg <= mul213_2_2_reg_581_pp0_iter4_reg;
        mul213_2_2_reg_581_pp0_iter6_reg <= mul213_2_2_reg_581_pp0_iter5_reg;
        mul213_2_2_reg_581_pp0_iter7_reg <= mul213_2_2_reg_581_pp0_iter6_reg;
        mul213_2_2_reg_581_pp0_iter8_reg <= mul213_2_2_reg_581_pp0_iter7_reg;
        mul213_2_2_reg_581_pp0_iter9_reg <= mul213_2_2_reg_581_pp0_iter8_reg;
        mul213_3_reg_571_pp0_iter3_reg <= mul213_3_reg_571;
        mul213_3_reg_571_pp0_iter4_reg <= mul213_3_reg_571_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_448 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        line_buf_1_load_1_reg_511 <= line_buf_1_q0;
        line_buf_load_1_reg_501 <= line_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_448 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_1_load_2_reg_531 <= line_buf_1_q0;
        line_buf_load_2_reg_526 <= line_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_448 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buf_1_load_reg_486 <= line_buf_1_q0;
        line_buf_load_reg_476 <= line_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul213_1_1_reg_561 <= grp_fu_266_p2;
        mul213_2_1_reg_566 <= grp_fu_270_p2;
        mul213_s_reg_556 <= grp_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul213_1_2_reg_576 <= grp_fu_266_p2;
        mul213_2_2_reg_581 <= grp_fu_270_p2;
        mul213_3_reg_571 <= grp_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul213_1_reg_546 <= grp_fu_266_p2;
        mul213_2_reg_551 <= grp_fu_270_p2;
        mul_reg_541 <= grp_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul213_1_reg_546_pp0_iter2_reg <= mul213_1_reg_546;
        mul213_1_reg_546_pp0_iter3_reg <= mul213_1_reg_546_pp0_iter2_reg;
        mul213_1_reg_546_pp0_iter4_reg <= mul213_1_reg_546_pp0_iter3_reg;
        mul213_1_reg_546_pp0_iter5_reg <= mul213_1_reg_546_pp0_iter4_reg;
        mul213_2_reg_551_pp0_iter2_reg <= mul213_2_reg_551;
        mul213_2_reg_551_pp0_iter3_reg <= mul213_2_reg_551_pp0_iter2_reg;
        mul213_2_reg_551_pp0_iter4_reg <= mul213_2_reg_551_pp0_iter3_reg;
        mul213_2_reg_551_pp0_iter5_reg <= mul213_2_reg_551_pp0_iter4_reg;
        mul213_2_reg_551_pp0_iter6_reg <= mul213_2_reg_551_pp0_iter5_reg;
        mul213_2_reg_551_pp0_iter7_reg <= mul213_2_reg_551_pp0_iter6_reg;
        mul213_2_reg_551_pp0_iter8_reg <= mul213_2_reg_551_pp0_iter7_reg;
        mul213_2_reg_551_pp0_iter9_reg <= mul213_2_reg_551_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_16_reg_591 <= grp_fu_249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        out_17_reg_596 <= grp_fu_249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        out_18_reg_601 <= grp_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_19_reg_606 <= grp_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        out_20_reg_611 <= grp_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        out_21_reg_616 <= grp_fu_258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_22_reg_621 <= grp_fu_258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        out_23_reg_626 <= grp_fu_258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        out_reg_586 <= grp_fu_249_p2;
    end
end

always @ (*) begin
    if (((icmp_ln75_reg_448 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to13 = 1'b1;
    end else begin
        ap_idle_pp0_1to13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_px_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_px_1 = px_fu_78;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        depth1_o75_blk_n = depth1_o75_full_n;
    end else begin
        depth1_o75_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        depth1_o75_write = 1'b1;
    end else begin
        depth1_o75_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_249_ce = 1'b1;
    end else begin
        grp_fu_249_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_249_p0 = out_16_reg_591;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_249_p0 = out_reg_586;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_249_p0 = mul_reg_541;
    end else begin
        grp_fu_249_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_249_p1 = mul213_3_reg_571_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_249_p1 = mul213_s_reg_556_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_249_p1 = 32'd0;
    end else begin
        grp_fu_249_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_254_ce = 1'b1;
    end else begin
        grp_fu_254_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_254_p0 = out_19_reg_606;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_254_p0 = out_18_reg_601;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_254_p0 = out_17_reg_596;
    end else begin
        grp_fu_254_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_254_p1 = mul213_1_2_reg_576_pp0_iter8_reg;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_254_p1 = mul213_1_1_reg_561_pp0_iter6_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_254_p1 = mul213_1_reg_546_pp0_iter5_reg;
    end else begin
        grp_fu_254_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_258_ce = 1'b1;
    end else begin
        grp_fu_258_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_258_p0 = out_22_reg_621;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_258_p0 = out_21_reg_616;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_258_p0 = out_20_reg_611;
    end else begin
        grp_fu_258_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_258_p1 = mul213_2_2_reg_581_pp0_iter12_reg;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_258_p1 = mul213_2_1_reg_566_pp0_iter10_reg;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_258_p1 = mul213_2_reg_551_pp0_iter9_reg;
    end else begin
        grp_fu_258_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_262_ce = 1'b1;
    end else begin
        grp_fu_262_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_262_p0 = line_buf_load_2_reg_526;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_262_p0 = line_buf_load_1_reg_501;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_262_p0 = line_buf_load_reg_476;
    end else begin
        grp_fu_262_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_262_p1 = weights_load_5;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_262_p1 = weights_load_4;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_262_p1 = weights_load;
    end else begin
        grp_fu_262_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_266_ce = 1'b1;
    end else begin
        grp_fu_266_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_266_p0 = line_buf_1_load_2_reg_531;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_266_p0 = line_buf_1_load_1_reg_511;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_266_p0 = line_buf_1_load_reg_486;
    end else begin
        grp_fu_266_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_266_p1 = weights_load_8;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_266_p1 = weights_load_7;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_266_p1 = weights_load_6;
    end else begin
        grp_fu_266_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_270_ce = 1'b1;
    end else begin
        grp_fu_270_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_270_p0 = ap_phi_reg_pp0_iter1_empty_145_reg_237;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_270_p0 = ap_phi_reg_pp0_iter1_empty_146_reg_225;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_270_p0 = ap_phi_reg_pp0_iter0_empty_147_reg_213;
    end else begin
        grp_fu_270_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_270_p1 = weights_load_11;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_270_p1 = weights_load_10;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_270_p1 = weights_load_9;
    end else begin
        grp_fu_270_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op102_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln75_reg_448 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln85_reg_468 == 1'd0) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln75_reg_448 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln86_reg_472 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        input74_blk_n = input74_empty_n;
    end else begin
        input74_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op102_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_predicate_op90_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op113_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input74_read = 1'b1;
    end else begin
        input74_read = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            line_buf_1_address0 = zext_ln82_2_fu_374_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            line_buf_1_address0 = zext_ln82_1_fu_359_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            line_buf_1_address0 = zext_ln82_fu_319_p1;
        end else begin
            line_buf_1_address0 = 'bx;
        end
    end else begin
        line_buf_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buf_1_ce0 = 1'b1;
    end else begin
        line_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            line_buf_address0 = zext_ln82_2_fu_374_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            line_buf_address0 = zext_ln82_1_fu_359_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            line_buf_address0 = zext_ln82_fu_319_p1;
        end else begin
            line_buf_address0 = 'bx;
        end
    end else begin
        line_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buf_ce0 = 1'b1;
    end else begin
        line_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to13 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln75_fu_291_p2 = (ap_sig_allocacmp_px_1 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((input74_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op113_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((input74_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op113_read_state4 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((input74_empty_n == 1'b0) & (ap_predicate_op90_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((input74_empty_n == 1'b0) & (ap_predicate_op90_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = (((ap_predicate_op102_read_state3 == 1'b1) & (input74_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (depth1_o75_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_predicate_op102_read_state3 == 1'b1) & (input74_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (depth1_o75_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_predicate_op102_read_state3 == 1'b1) & (input74_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (depth1_o75_full_n == 1'b0)));
end

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((input74_empty_n == 1'b0) & (ap_predicate_op90_read_state2 == 1'b1));
end

assign ap_block_state30_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op102_read_state3 == 1'b1) & (input74_empty_n == 1'b0));
end

assign ap_block_state40_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state42_pp0_stage2_iter13 = (depth1_o75_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((input74_empty_n == 1'b0) & (ap_predicate_op113_read_state4 == 1'b1));
end

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_379 = ((icmp_ln75_reg_448 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln85_reg_468 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_384 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001));
end

always @ (*) begin
    ap_condition_778 = ((or_ln85_fu_337_p2 == 1'd1) & (icmp_ln75_fu_285_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_empty_145_reg_237 = 32'd0;

assign ap_phi_reg_pp0_iter0_empty_146_reg_225 = 32'd0;

always @ (*) begin
    ap_predicate_op102_read_state3 = ((cmp164 == 1'd0) & (icmp_ln75_reg_448 == 1'd0));
end

always @ (*) begin
    ap_predicate_op113_read_state4 = ((icmp_ln75_reg_448 == 1'd0) & (or_ln86_reg_472 == 1'd0));
end

always @ (*) begin
    ap_predicate_op90_read_state2 = ((icmp_ln75_reg_448 == 1'd0) & (or_ln85_reg_468 == 1'd0));
end

assign cmp158_fu_325_p2 = ((ap_sig_allocacmp_px_1 == 4'd0) ? 1'b1 : 1'b0);

assign cmp160_fu_331_p2 = ((ap_sig_allocacmp_px_1 == 4'd9) ? 1'b1 : 1'b0);

assign cmp164_read_read_fu_82_p2 = cmp164;

assign depth1_o75_din = out_23_reg_626;

assign empty_148_fu_301_p1 = ap_sig_allocacmp_px_1[2:0];

assign empty_149_fu_313_p2 = (p_shl_fu_305_p3 - zext_ln75_fu_297_p1);

assign empty_150_fu_354_p2 = (empty_149_reg_452 + 5'd1);

assign empty_151_fu_369_p2 = (empty_149_reg_452 + 5'd2);

assign icmp_ln75_fu_285_p2 = ((ap_sig_allocacmp_px_1 == 4'd10) ? 1'b1 : 1'b0);

assign or_ln85_fu_337_p2 = (cmp164 | cmp158_fu_325_p2);

assign or_ln86_fu_343_p2 = (cmp164 | cmp160_fu_331_p2);

assign p_shl_fu_305_p3 = {{empty_148_fu_301_p1}, {2'd0}};

assign tmp_40_fu_380_p1 = input74_dout;

assign tmp_41_fu_384_p1 = input74_dout;

assign tmp_fu_365_p1 = input74_dout;

assign zext_ln75_fu_297_p1 = ap_sig_allocacmp_px_1;

assign zext_ln82_1_fu_359_p1 = empty_150_fu_354_p2;

assign zext_ln82_2_fu_374_p1 = empty_151_fu_369_p2;

assign zext_ln82_fu_319_p1 = empty_149_fu_313_p2;

endmodule //MNIST_DepthwiseConv2d_28_10_1_3_Pipeline_px
