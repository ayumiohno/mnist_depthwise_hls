// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MNIST_LoadWeights_Pipeline_VITIS_LOOP_168_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        wstrm_TVALID,
        wstrm_TDATA,
        wstrm_TREADY,
        wstrm_TKEEP,
        wstrm_TSTRB,
        wstrm_TUSER,
        wstrm_TLAST,
        wstrm_TID,
        wstrm_TDEST,
        point3_0_address0,
        point3_0_ce0,
        point3_0_we0,
        point3_0_d0,
        point3_1_address0,
        point3_1_ce0,
        point3_1_we0,
        point3_1_d0,
        point3_2_address0,
        point3_2_ce0,
        point3_2_we0,
        point3_2_d0,
        point3_3_address0,
        point3_3_ce0,
        point3_3_we0,
        point3_3_d0,
        point3_4_address0,
        point3_4_ce0,
        point3_4_we0,
        point3_4_d0,
        point3_5_address0,
        point3_5_ce0,
        point3_5_we0,
        point3_5_d0,
        point3_6_address0,
        point3_6_ce0,
        point3_6_we0,
        point3_6_d0,
        point3_7_address0,
        point3_7_ce0,
        point3_7_we0,
        point3_7_d0,
        point3_8_address0,
        point3_8_ce0,
        point3_8_we0,
        point3_8_d0,
        point3_9_address0,
        point3_9_ce0,
        point3_9_we0,
        point3_9_d0,
        point3_10_address0,
        point3_10_ce0,
        point3_10_we0,
        point3_10_d0
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   wstrm_TVALID;
input  [31:0] wstrm_TDATA;
output   wstrm_TREADY;
input  [3:0] wstrm_TKEEP;
input  [3:0] wstrm_TSTRB;
input  [1:0] wstrm_TUSER;
input  [0:0] wstrm_TLAST;
input  [4:0] wstrm_TID;
input  [5:0] wstrm_TDEST;
output  [3:0] point3_0_address0;
output   point3_0_ce0;
output   point3_0_we0;
output  [31:0] point3_0_d0;
output  [3:0] point3_1_address0;
output   point3_1_ce0;
output   point3_1_we0;
output  [31:0] point3_1_d0;
output  [3:0] point3_2_address0;
output   point3_2_ce0;
output   point3_2_we0;
output  [31:0] point3_2_d0;
output  [3:0] point3_3_address0;
output   point3_3_ce0;
output   point3_3_we0;
output  [31:0] point3_3_d0;
output  [3:0] point3_4_address0;
output   point3_4_ce0;
output   point3_4_we0;
output  [31:0] point3_4_d0;
output  [3:0] point3_5_address0;
output   point3_5_ce0;
output   point3_5_we0;
output  [31:0] point3_5_d0;
output  [3:0] point3_6_address0;
output   point3_6_ce0;
output   point3_6_we0;
output  [31:0] point3_6_d0;
output  [3:0] point3_7_address0;
output   point3_7_ce0;
output   point3_7_we0;
output  [31:0] point3_7_d0;
output  [3:0] point3_8_address0;
output   point3_8_ce0;
output   point3_8_we0;
output  [31:0] point3_8_d0;
output  [3:0] point3_9_address0;
output   point3_9_ce0;
output   point3_9_we0;
output  [31:0] point3_9_d0;
output  [3:0] point3_10_address0;
output   point3_10_ce0;
output   point3_10_we0;
output  [31:0] point3_10_d0;

reg ap_idle;
reg wstrm_TREADY;
reg point3_0_ce0;
reg point3_0_we0;
reg point3_1_ce0;
reg point3_1_we0;
reg point3_2_ce0;
reg point3_2_we0;
reg point3_3_ce0;
reg point3_3_we0;
reg point3_4_ce0;
reg point3_4_we0;
reg point3_5_ce0;
reg point3_5_we0;
reg point3_6_ce0;
reg point3_6_we0;
reg point3_7_ce0;
reg point3_7_we0;
reg point3_8_ce0;
reg point3_8_we0;
reg point3_9_ce0;
reg point3_9_we0;
reg point3_10_ce0;
reg point3_10_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln168_fu_295_p2;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    wstrm_TDATA_blk_n;
wire   [63:0] zext_ln172_fu_348_p1;
reg   [6:0] phi_urem211_fu_104;
wire   [6:0] select_ln168_fu_382_p3;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_phi_urem211_load;
reg   [6:0] ap_sig_allocacmp_phi_urem211_load_1;
reg   [14:0] phi_mul209_fu_108;
wire   [14:0] add_ln172_fu_332_p2;
reg   [14:0] ap_sig_allocacmp_phi_mul209_load;
reg   [6:0] i_fu_112;
wire   [6:0] add_ln168_fu_301_p2;
reg   [6:0] ap_sig_allocacmp_i_3;
wire   [3:0] trunc_ln172_fu_363_p1;
wire   [31:0] bitcast_ln172_fu_317_p1;
wire   [3:0] tmp_fu_338_p4;
wire   [6:0] add_ln168_1_fu_370_p2;
wire   [0:0] icmp_ln168_1_fu_376_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
reg    ap_condition_302;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

MNIST_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_302)) begin
        if ((icmp_ln168_fu_295_p2 == 1'd0)) begin
            i_fu_112 <= add_ln168_fu_301_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_112 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_302)) begin
        if ((icmp_ln168_fu_295_p2 == 1'd0)) begin
            phi_mul209_fu_108 <= add_ln172_fu_332_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            phi_mul209_fu_108 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_302)) begin
        if ((icmp_ln168_fu_295_p2 == 1'd0)) begin
            phi_urem211_fu_104 <= select_ln168_fu_382_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            phi_urem211_fu_104 <= 7'd0;
        end
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0)))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_3 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_112;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_phi_mul209_load = 15'd0;
    end else begin
        ap_sig_allocacmp_phi_mul209_load = phi_mul209_fu_108;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_phi_urem211_load = 7'd0;
    end else begin
        ap_sig_allocacmp_phi_urem211_load = phi_urem211_fu_104;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_phi_urem211_load_1 = 7'd0;
    end else begin
        ap_sig_allocacmp_phi_urem211_load_1 = phi_urem211_fu_104;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_0_ce0 = 1'b1;
    end else begin
        point3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln172_fu_363_p1 == 4'd0))) begin
        point3_0_we0 = 1'b1;
    end else begin
        point3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_10_ce0 = 1'b1;
    end else begin
        point3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & ~(trunc_ln172_fu_363_p1 == 4'd0) & ~(trunc_ln172_fu_363_p1 == 4'd1) & ~(trunc_ln172_fu_363_p1 == 4'd2) & ~(trunc_ln172_fu_363_p1 == 4'd3) & ~(trunc_ln172_fu_363_p1 == 4'd4) & ~(trunc_ln172_fu_363_p1 == 4'd5) & ~(trunc_ln172_fu_363_p1 == 4'd6) & ~(trunc_ln172_fu_363_p1 == 4'd7) & ~(trunc_ln172_fu_363_p1 == 4'd8) & ~(trunc_ln172_fu_363_p1 == 4'd9) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_10_we0 = 1'b1;
    end else begin
        point3_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_1_ce0 = 1'b1;
    end else begin
        point3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln172_fu_363_p1 == 4'd1))) begin
        point3_1_we0 = 1'b1;
    end else begin
        point3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_2_ce0 = 1'b1;
    end else begin
        point3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln172_fu_363_p1 == 4'd2))) begin
        point3_2_we0 = 1'b1;
    end else begin
        point3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_3_ce0 = 1'b1;
    end else begin
        point3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln172_fu_363_p1 == 4'd3))) begin
        point3_3_we0 = 1'b1;
    end else begin
        point3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_4_ce0 = 1'b1;
    end else begin
        point3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln172_fu_363_p1 == 4'd4))) begin
        point3_4_we0 = 1'b1;
    end else begin
        point3_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_5_ce0 = 1'b1;
    end else begin
        point3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln172_fu_363_p1 == 4'd5))) begin
        point3_5_we0 = 1'b1;
    end else begin
        point3_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_6_ce0 = 1'b1;
    end else begin
        point3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln172_fu_363_p1 == 4'd6))) begin
        point3_6_we0 = 1'b1;
    end else begin
        point3_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_7_ce0 = 1'b1;
    end else begin
        point3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln172_fu_363_p1 == 4'd7))) begin
        point3_7_we0 = 1'b1;
    end else begin
        point3_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_8_ce0 = 1'b1;
    end else begin
        point3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln172_fu_363_p1 == 4'd8))) begin
        point3_8_we0 = 1'b1;
    end else begin
        point3_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        point3_9_ce0 = 1'b1;
    end else begin
        point3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln172_fu_363_p1 == 4'd9))) begin
        point3_9_we0 = 1'b1;
    end else begin
        point3_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        wstrm_TDATA_blk_n = wstrm_TVALID;
    end else begin
        wstrm_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (icmp_ln168_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        wstrm_TREADY = 1'b1;
    end else begin
        wstrm_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln168_1_fu_370_p2 = (ap_sig_allocacmp_phi_urem211_load_1 + 7'd1);

assign add_ln168_fu_301_p2 = (ap_sig_allocacmp_i_3 + 7'd1);

assign add_ln172_fu_332_p2 = (ap_sig_allocacmp_phi_mul209_load + 15'd187);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0)));
end

always @ (*) begin
    ap_condition_302 = (~((ap_start_int == 1'b0) | ((icmp_ln168_fu_295_p2 == 1'd0) & (wstrm_TVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln172_fu_317_p1 = wstrm_TDATA;

assign icmp_ln168_1_fu_376_p2 = ((add_ln168_1_fu_370_p2 < 7'd11) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_295_p2 = ((ap_sig_allocacmp_i_3 == 7'd120) ? 1'b1 : 1'b0);

assign point3_0_address0 = zext_ln172_fu_348_p1;

assign point3_0_d0 = bitcast_ln172_fu_317_p1;

assign point3_10_address0 = zext_ln172_fu_348_p1;

assign point3_10_d0 = bitcast_ln172_fu_317_p1;

assign point3_1_address0 = zext_ln172_fu_348_p1;

assign point3_1_d0 = bitcast_ln172_fu_317_p1;

assign point3_2_address0 = zext_ln172_fu_348_p1;

assign point3_2_d0 = bitcast_ln172_fu_317_p1;

assign point3_3_address0 = zext_ln172_fu_348_p1;

assign point3_3_d0 = bitcast_ln172_fu_317_p1;

assign point3_4_address0 = zext_ln172_fu_348_p1;

assign point3_4_d0 = bitcast_ln172_fu_317_p1;

assign point3_5_address0 = zext_ln172_fu_348_p1;

assign point3_5_d0 = bitcast_ln172_fu_317_p1;

assign point3_6_address0 = zext_ln172_fu_348_p1;

assign point3_6_d0 = bitcast_ln172_fu_317_p1;

assign point3_7_address0 = zext_ln172_fu_348_p1;

assign point3_7_d0 = bitcast_ln172_fu_317_p1;

assign point3_8_address0 = zext_ln172_fu_348_p1;

assign point3_8_d0 = bitcast_ln172_fu_317_p1;

assign point3_9_address0 = zext_ln172_fu_348_p1;

assign point3_9_d0 = bitcast_ln172_fu_317_p1;

assign select_ln168_fu_382_p3 = ((icmp_ln168_1_fu_376_p2[0:0] == 1'b1) ? add_ln168_1_fu_370_p2 : 7'd0);

assign tmp_fu_338_p4 = {{ap_sig_allocacmp_phi_mul209_load[14:11]}};

assign trunc_ln172_fu_363_p1 = ap_sig_allocacmp_phi_urem211_load[3:0];

assign zext_ln172_fu_348_p1 = tmp_fu_338_p4;

endmodule //MNIST_LoadWeights_Pipeline_VITIS_LOOP_168_6
